---
http_interactions:
- request:
    method: get
    uri: https://api.twingly.com/blog/livefeed/api/v5/getdata?apikey=api_key&maxPosts=100&timestamp=2019-04-02T08:21:55.923%2B0000
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - MyCompany/1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 02 Apr 2019 09:21:56 GMT
      Content-Type:
      - application/xml; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cache-Control:
      - no-cache
      Pragma:
      - no-cache
      Expires:
      - "-1"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <?xml version="1.0" encoding="utf-8"?><twinglydata ts="2019-04-02T09:21:56.0139858Z" from="2019-04-02T08:21:55.923Z" numberOfPosts="100" maxNumberOfPosts="100" firstPost="2019-04-02T08:22:20.176Z" lastPost="2019-04-02T08:30:26.565Z" nextTimestamp="2019-04-02T08:30:26.566Z"><post><id>2282557584131994533</id><author>Ama de casa</author><url>https://amacasa.wordpress.com/2019/04/02/amas-basta-aprilskamt-ever/</url><title>Amas bästa aprilskämt ever</title><text>Det utspelade sig här: 
 
I huset i Sollentuna där vi bodde i 21 år. 
Nu är det så att Ama blev väldigt nostalgisk när hon letade efter en bild för att illustrera sitt eminenta aprilskämt, så här kommer några bilder som visar hur dom olika årstiderna kunde se ut där. 
 
På tidig vår var det dags att beskära äppelträden. Anders var rätt vild med sekatören redan på den tiden. 
Allt arbete behövde vi inte göra själva. Nejdå. Grannarna hjälpte sååå gärna till: 
 
Här satt till exempel ett par grannar och kom med glada hejarop när Anders grävde ett dike. Inte för dränering utan det var för att få in fiber i huset. Den där lediga stolen var förresten Amas, det var skönt att kunna ta igen sig efter att ha slitit hårt med att dokumentera. 
 
Lite senare var det dags för vårbruket. 
Odlingarna gick väl sådär. Det vi lyckades bäst med var… 
 
… bautarabarbern. (Man kan se att ogräset redan var på väg upp i landet där det var tänkt att växa blandade grönsaker). 
Sen kom den härliga sommaren! 
 
Då var det ofta festligheter i trädgården. 
 
Lek och allvar på samma gång. Femkamp, alltså. 
 
Kolla bara vad duktigt Ama klarade av det där med att kasta ringar! Detta trots att hon var tydligen var enbent på den tiden. Fast ni behöver inte oroa er – det andra benet har vuxit ut igen. 
 
När hösten kom blev vildvinet vackert rött… 
 
… och sen blev det vinter. 
Ni får ursäkta urspårningen men det är lätt att bli nostalgisk i arkivet. Kunde ha blivit mååånga fler bilder men nu ska Ama försöka komma till skott. 
Vad var det detta inlägg egentligen skulle avhandla nu igen? Javisstja. Amas bästa aprilskämt ever. 
Det var i det här rummet det utspelade sig: 
 
I vårt badrum. Fast utan den där sälen. 
Hittade ingen bra bild för att illustrera det hela, vid renoveringen av badrummet som vi gjorde 1986 var tydligen inte kameran uppfunnen? 
Det här var det bästa Ama kunde komma upp med: 
 
Inne där bakom dörrkarmen vid 1:an fanns det en dusch. Innan Ama skulle hoppa in där en morgon den första april i slutet på 80-talet ropade hon upp till Anders på övervåningen: ”Anders! Vattnet bara stiger här i badrummet!!!”. Anders kom nedspringandes från övervåningen och ropade ”Var, var, VAR???” 
Ama som blev lite förvånad att han inte märkte att golvet var kruttorrt pekade in under skåpet där vid 2:an (där det också fanns ett avlopp) och sa ”Det försvann in där under…”. 
När en mycket uppjagad Anders strax därefter stod på alla fyra med huvudet under skåpet så sa Ama dom bevingade orden ”April, april!”. Anders sjönk ihop på tröskeln, tog sig åt hjärtat och pustade ut. Ama kände sig mycket nöjd med att han gått på det braiga skämtet. 
Fast efter det har han haft återkommande mardrömmar om att han går ner i källaren på huset och hela golvet är ett enda gungfly… Så det kanske inte var ett så bra skämt trots allt. Det beror nog på vem man frågar. 
Hoppas ni inte blev alltför lurade igår. 
Gomorron!</text><languageCode>sv</languageCode><locationCode>es</locationCode><coordinates /><links><link>https://amacasa.files.wordpress.com/2019/04/1.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/2.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/3.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/4.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/5.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/6.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/7.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/8.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/9.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/10.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/11.jpg</link><link>https://amacasa.files.wordpress.com/2019/04/12.jpg</link></links><tags><tag>Uncategorized</tag></tags><images /><indexedAt>2019-04-02T08:22:20Z</indexedAt><publishedAt>2019-04-02T06:34:31Z</publishedAt><reindexedAt>2019-04-02T08:22:20Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>9770258358246796068</blogId><blogName>Ama de casa</blogName><blogUrl>https://amacasa.wordpress.com</blogUrl><blogRank>3</blogRank><authority>49</authority></post><post><id>7548537783871480738</id><author>funkygine</author><url>https://www.funkygine.com/2019/04/02/og-vi-ser-alle-fire-vi-ser-og-vi-ser/</url><title>Og vi ser. Alle fire. Vi ser og vi ser.</title><text>På tide med en ny mammapost. For midt opp i alle prosjekter, reiser og møter, er mammajobben den aller viktigste. Hver dag. 
For en klisjé. Men hvor uviktig føles ikke alt annet om en sammenligner det med lykken, kjærligheten og stoltheten over det å være mamma? 
Enda mer klisjé. Men sant. 
Nå er det jo absolutt viktig for meg å kunne kombinere morsrollen med en jobb jeg elsker, men om alt skulle skjære seg… At jeg mister 500 000 følgere på Instagram i morgen, at ingen vil være med meg treningsreise eller eventer, at salget av  bøkene mine stopper helt opp og ingen vil lese bloggen…Da har jeg tre barn som fremdeles vil være avhengige av at jeg fortsetter i mammajobben. 
Så arbeid har jeg jo. Uansett. 
Ikke betalt vel og merke. Men hvem trenger vel penger  
Neida. 
Men tiåringen, han på fem og minstemannen på åtte måneder. De vokser alle tre, utvikler personligheten sin, blir egenrådige, er tidvis ekstremt sjarmerende og søte, og tidvis like usjarmerende og grinete, men jeg vil være der når ting skjer. Ikke gå glipp av noe. 
Nå går det heldigvis ikke så rasende fort i svingene med de to eldste. Jeg kan ikke se at de vokser lenger, men han minste… Er jeg borte fra ham noen timer, så risikerer jeg å gå glipp av noe! 
Nå er det mulig alle uten barn har falt av for lengst, men om dere leser enda… Å oppleve barnet ditt som klapper hendene sånn halvveis vellykket for aller første gang. Dele gleden og overraskelsen over å mestre med ham. Det er stort. Større enn man tror. 
Så ja. Milano klapper. Ofte. Og gjerne så lenge noen vil se. Og vi ser. Alle fire. Vi ser og vi ser. Klapper med. Og blir like imponerte hver gang han henter frem det nye partytrikset sitt. 
Stå gjør han også. Men det har han gjort så lenge at det ikke fremkaller like stor begeistring blant tilskuerne nå som for noen måneder siden. 
Så nå må han neste begynne å gå om han skal holde oppmerksomheten vår. 
Neida. Vi syntes det er fascinerende enda. 
Bare han ikke detter. For det gjør han ofte. Har vurdert hjelm faktisk. Er det innafor egentlig? Erfaringsdeling mottas med takk. 
Og så har den lille showmannen fått to små tenner. Ikke helt ute enda, men vi sjekker hver dag og er hjertens enige om at vi ser dem litt tydeligere for hver dag som går. 
Det er stor stas. Alle vil kjenne og han klapper av begeistring. Vi klapper med. I glede over enda en milepæl og to små nesten usynlige tenner. 
Helt til han beit meg i puppen. 
Jeg måtte seriøst inn og inspisere munnen hans. For det kjentes ikke som et bitt. Det føltes som å bli knivstukket i brystet. Seriøst. Jeg måtte rett og slett sjekke om det var vanlig tenner. 
Det var det heldigvis. Men herregud så skarpe! 
Tips mottas med takk før han biter av meg niplen. 
For nå når han har skjønt at jeg uler som en ulv hver gang han hogger til, så syntes han selvfølgelig det er rasende festlig. 
Hva mer gjør han? 
Jo, han smiler! Masse. Kommuniserer mer og mer. Og viser stadig større kjærlighet for sitt elleville publikum. Altså Morten, meg, Filippa og Sokrates. Men det skjønte dere sikkert. 
Han er med andre ord bortskjemt på oppmerksomhet og bekreftelse. 
Akkurat slik det skal være med andre ord. 
Og selv om det å være trebarnsforeldre i full jobb er hakket mer utfordrende enn å være tobarnsforeldre. Anbefales det på det sterkeste! 
Vi gleder oss til flere milepæler. Forhåpentligvis mindre biting. Og enda flere opplevelser å dele sammen. 
Hvem prøver jeg å lure forresten? Bitingen har vel så vidt begynt… 
Jeg stålsetter meg! 
 
Jørgine 
The post Og vi ser. Alle fire. Vi ser og vi ser. appeared first on Funkygine.</text><languageCode>no</languageCode><locationCode>us</locationCode><coordinates /><links><link>https://www.addtoany.com/add_to/facebook?linkurl=https:%2F%2Fwww.funkygine.com%2F2019%2F04%2F02%2Fog-vi-ser-alle-fire-vi-ser-og-vi-ser%2F&amp;linkname=Og vi ser. Alle fire. Vi ser og vi ser.</link></links><tags><tag>Familie</tag></tags><images /><indexedAt>2019-04-02T08:22:20Z</indexedAt><publishedAt>2019-04-02T06:50:32Z</publishedAt><reindexedAt>2019-04-02T08:22:20Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14117214239989823370</blogId><blogName>Funkygine</blogName><blogUrl>https://www.funkygine.com</blogUrl><blogRank>3</blogRank><authority>36</authority></post><post><id>9090188460086172031</id><author>Andrea Sveinsdottir</author><url>https://andreaasveinsdottir.blogg.no/sneak-peak-pa-leiligheten-min.html</url><title>SNEAK PEAK PÅ LEILIGHETEN MIN</title><text>God morgen, fineste dere! Jeg har akkurat våknet opp i min nye leilighet i Kristiansand. Nei, det var ingen aprilsnarr i går selv om veldig mange så ut til å tro det. Det var ikke mange gratulasjoner, men heller en del som var skråsikre på at dette var tull.Jeg må innrømme at jeg synes det var litt morsomt, haha. 
Vi har visst om dette i noen uker nå, men ville ikke si noe før vi faktisk var på plass. Dere kjenner meg, tror alltid at noe skal skjære seg i siste liten. Heldigvis gikk alt etter planen og vi flyttet inn i leiligheten vår i går. 
Det var en utrolig hektisk dag fra morgen til slutt. Vi startet i halv ni tiden og satt oss ikke ned i sofaen før nærmere halv tolv. På dette tidspunktet var det esker og deler av møbler strødd over hele stua, og forøvrig resten av leiligheten haha. Det er jo litt sånn å flytte, men herregud så mye vi faktisk fikk gjort! Det gjenstår et flyttelass i dag før vi skal begynne å gjøre det ordentlig her hjemme. Jeg gleder meg så mye til å vise dere hvordan det blir om en liten stund, men aller først får dere bare en liten sneik peak på mitt nye hjem. Morten og jeg filmet en liten flyttevlogg i går og jeg viser dere deler av leiligheten vi skal bo i! 
 



8 kommentarer</text><languageCode>no</languageCode><locationCode>no</locationCode><coordinates /><links><link>https://www.facebook.com/sharer/sharer.php?u=https:%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;src=sdkpreparse</link></links><tags><tag>Video</tag></tags><images /><indexedAt>2019-04-02T08:22:23Z</indexedAt><publishedAt>2019-04-02T06:14:24Z</publishedAt><reindexedAt>2019-04-02T08:22:23Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>12483619910104873575</blogId><blogName>Andrea Sveinsdottir</blogName><blogUrl>https://andreaasveinsdottir.blogg.no</blogUrl><blogRank>1</blogRank><authority>3</authority></post><post><id>7853414511936441219</id><author>TheaH</author><url>https://nouw.com/theah/event-med-holdit-x-hotell-post-35747972</url><title>Event med Holdit x Hotell Post</title><text>Fick dessa festliga bilder skickade från Holdit till min mail igår. Hade ju glömt kameran hemma så att det fanns en fotograf på plats var ju perfekt, då kunde jag istället passa på att äta av allt gott som stod framdukat samt sippa på drinkar varvat med bubbel. Hade en magisk kväll med alla härliga tjejer, stort tack för ett fantastiskt event Holdit!</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:22:25Z</indexedAt><publishedAt>2019-04-02T08:22:00Z</publishedAt><reindexedAt>2019-04-02T08:22:25Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>18162440872098486124</blogId><blogName>TheaH blog</blogName><blogUrl>https://nouw.com/theah</blogUrl><blogRank>1</blogRank><authority>3</authority></post><post><id>15849871054299039715</id><author>sweetwords</author><url>https://nouw.com/sweetwords/vem-ar-coolast-du-eller-jag-35750513</url><title>Vem är coolast du eller jag?</title><text>En mysig start av dagen  Vi sov lite längre idag, Bellis gör ju såklart det för hon är sjuk, annars är hon så morgonpigg så. Hon är inte direkt nå bättre, tycker att hon är mer matt idag, men hostan är mjukare. Känns inte som hon har feber heller, men lite ljummen kanske. Vi har i alla fall tagit ett mellanlång promenad med Enzo nu. Jag är uppvuxen så och jag resonerar så att jag tycker man kan få komma ut och få frisk luft så länge man inte anstränger sig. Bellis som egentligen numera är för stor för vagn fick sitta inbäddad i vagnen och ordentligt klädd, då kan det knappast inte vara någon fara. Jag skulle inte ta ut henne med på promenad om det var kallt och minusgrader ute, för kallluft är inte bra att ta in, men som vädret är nu mår vi nog alla bra av det. Dessutom måste ju Enzo ut. Hade hon varit frisk hade hon fått cykla bredvid oss på promenaden. När slutade era "5åringar" med stödhjul? när de var 3,4,5,6?</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:22:48Z</indexedAt><publishedAt>2019-04-02T08:22:25Z</publishedAt><reindexedAt>2019-04-02T08:22:48Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>1448634281652732629</blogId><blogName>sweetwords blog</blogName><blogUrl>https://nouw.com/sweetwords</blogUrl><blogRank>2</blogRank><authority>31</authority></post><post><id>14043681872349834638</id><author>Germanottas</author><url>https://nouw.com/germanottas/varat-veckoslut-35750493</url><title>Vårat veckoslut</title><text>På lördagen bestämde vi att vi ska gå ut och äta, en spontandejt. Vi är hemskt dåliga på att göra lite "speciellare" saker tillsammans, oftast är vi bara hemma och chillar. Före vi bestämde oss för att åka iväg så hade jag en liten mini dipp, var så himla ledsen över en sak som hade stört mig hela dagen, så det slutade i tårar. Anyways, vi njöt av våran stund och hade det jättemysigt! Sen funderar man alltid, varför gör man inte detta oftare?!  Kaffe har jag avnjutit ute på trappan, i solen. SÅ jävla härligt! På söndag kväll var vi tillsammans ute och gick en kvällslänk. Så ett mysigt veckoslut.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:23:01Z</indexedAt><publishedAt>2019-04-02T08:22:32Z</publishedAt><reindexedAt>2019-04-02T08:23:01Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>4157589622562600971</blogId><blogName>Sara Olenius</blogName><blogUrl>https://nouw.com/germanottas</blogUrl><blogRank>1</blogRank><authority>1</authority></post><post><id>10299939050347083601</id><author>noreply@blogger.com (Torsten the Dog)</author><url>http://torstenthedog.blogspot.com/2019/04/valkommen-hem-kvikk.html</url><title>Välkommen hem Kvikk</title><text>I förra veckan så var Kvikk till veterinären för att få en misstänk knöl på benet bortopererad. Idag fick vi svar på analysen av knölen och det visade sig vara ganska tråkiga nyheter. Knölen är en tumör som, även om den inte är jättefarlig, inte heller är speciellt snäll. Risken finns att den kan komma tillbaka. Men det tar vi då, i så fall. Denna tråkiga nyhet har dock en bra nyhet med sig och det är att Husse beslutat att Kvikk stannar hos oss på riktigt, vare sig han har mycket eller lite tid kvar. Kvikk trivs så bra med oss och vi med honom, så det finns ingen anledning att finna nytt hem till honom. Dessutom skulle det bli allt för tomt här hemma utan vår busiga och tokiga Kvikken! Kvikk på kvällsäventyr i hundhagen. Så även om du bott med oss i flera år, så finns det all anledning att äntligen säga Välkommen hem Kvikk!</text><languageCode>sv</languageCode><locationCode>ru</locationCode><coordinates /><links><link>https://2.bp.blogspot.com/-pv_zSxYUXZ0/XKJuRw14uXI/AAAAAAAAJbU/Zghcmo-LpJEdru52hv5zVONA4rp5Y7d6QCLcBGAs/s1600/Kvikk%2B89.jpg</link></links><tags /><images /><indexedAt>2019-04-02T08:23:01Z</indexedAt><publishedAt>2019-04-01T20:09:00Z</publishedAt><reindexedAt>2019-04-02T08:23:01Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>1060318990572808227</blogId><blogName>Torsten the Dog</blogName><blogUrl>http://torstenthedog.blogspot.com</blogUrl><blogRank>1</blogRank><authority>2</authority></post><post><id>7971541397571714005</id><author>noreply@blogger.com (Kirjallisuutta)</author><url>http://kirjallisuutta-pensionerad.blogspot.com/2019/04/wikipedia-tekstia-suomen-vesistoista.html</url><title>Wikipedia tekstiä Suomen vesistöistä:  Laatokkaan laskevat vesistöt.</title><text>Vesistöalueiden määrittelyPääartikkeli: Suomen vesistöalueetPäävesistöalueella tarkoitetaan yli 200 km² suuruisia vesistöalueita. Nämä on Suomen ympäristöhallinnon käyttämissä vesistötunnuksissa numeroitu juoksevasti alkaen  Laatokkaan laskevista vesistöistä ja kiertäen rannikkoalueet myötäpäivään Suomenlahdelle, Saaristomerelle, Selkämerelle, Perämerelle, Barentsinmerelle ja lopulta Vienanmerelle.[1][2]  Päävesistöalueita on Suomessa perinteisesti käytössä olleen  jaotuksen mukaisesti 74.  Kun tiedot vesistöalueitten pinta-aloista  tarkentuivat, löytyi yli 200 km² suuruisia valuma-alueita kaksi lisää (Vöyrinjoki ja Kalimeenoja), ja kaksi päävesistöalueisiin luettua vesistöaluetta (Oravaistenjoki ja Piehinginjoki)  havaittiin pinta-alaltaan pienemmiksi kuin 200 km². Tunnuksia ei  kuitenkaan näiden osalta muutettu, vaan ensinmainitut luetaan edelleen  päävesistöalueisiin ja viimeksimainitut pieniin  rannikkovesistöalueisiin.[1]  Pieniä rannikkovesistöalueita ja raja-alueiden pieniä vesistöalueita on Suomen vesistöaluejakoon otettu 177.[2] Vaikka Laatokkaan laskevat Suomen vesistöt ovat osa Suomenlahteen laskevaa Nevan vesistöä[3],  luetaan ne Suomessa nykyisessä, vuonna 1993 käyttöön otetussa  vesistöaluejaossa omiksi vesistöikseen.  Raja-alueiden pieniä vesistöjä  on käytössä olevassa olevassa vuoden 1993 vesistöaluejaossa määritelty  vain Venäjän raja-alueella (86) Suomen ja Venäjän rajalla, mutta ei Ruotsin ja Norjan raja-alueella (85) Suomen ja Norjan rajalla.  Vuonna 2014 oli valmisteilla ehdotus uudeksi valuma-aluejaoksi,  joka on pohjaltaan automaattisesti laskettu ja perustuu kolmiulotteiseen  korkeusmalliin.[4][5][6] Tätä ehdotusta on aiempaan verrattuna tarkennettu ottamalla mukaan myös  joitakin Suomen ja Norjan rajalla olevia, Norjassa mereen laskevien  vesistöjen Suomeen ulottuvia valuma-alueen osia.  Luettelon tiedotLuettelon lähteinä on käytetty Vesi- ja ympäristöhallituksen julkaisua Suomen vesistöalueet (1993)[7], sen tietoihin perustuvaa karttaa ja taulukkoa Ympäristöhallinnon verkkopalvelussa[8][9] sekä Suomen ympäristökeskuksen paikkatietoanalyysien tulosten maanpeite ja valuma-alueet -osiota.[10][11] Luettelossa ei mainita Suomen päävesistöalueista rannikkoalueita, koska niiden 3. jakovaiheen vesistöalueet koostuvat yksittäisistä  irrallaan olevista vesistöalueista muiden päävesistöalueiden välissä.  Rannikkoalueen päävesistöalueet ovat:  Suomenlahden rannikkoalue 81  (vesistötunnus);  Saaristomeren rannikkoalue, Ahvenanmaa 82; Selkämeren  rannikkoalue 83; Perämeren rannikkoalue 84; Venäjän raja-alue 86.[10]   Nykyisestä vuonna 1993 käyttöön otetusta Suomen vesistöaluejaosta  puuttuvat siinä määritellyn Ruotsin ja Norjan raja-alueen (85) pienet  rajavesistöalueet sekä Venäjän raja-alueelta (86) ne pienet  rajavesistöalueet, jotka eivät laske Suomenlahteen. Nykyisessä  järvinumeroinnissa tämän alueen järville on annettu järvinumeroita,  joissa päävesistöalueen tunnuksena on 00 [12] tai osa on jätetty kokonaan käsittelemättä ja näin ilman järvinumeroa[13].  Luettelossa mainitaan rannikkoalueen päävesistöjen 3. jakovaiheen  rannikkovesistöalueet, jos niistä on artikkeli Wikipediassa. Lisäksi  mainitaan pienvesiä, jotka kuuluvat pienten rannikkovesistöjen välisiin  rannikkokaistoihin, jos näistä on artikkeleita. Nykyisessä  vesistöaluejaossa huomioimattomia Norjan raja-alueen (85) ja Venäjän  raja-alueen (86) Suomeen ulottuvia pieniä vesistöalueita mainitaan, jos  näillä alueilla olevista vesistä on Wikipediassa artikkeleita.  Tiedoista esitetään seuraavassa luettelossa kullekin vesistölle merialue johon se laskee; mahdollinen tarkempi rannikon kohta; vesistötunnus eli numero (päävesistöalueet tummennettu); vesistöalueen  nimi; koko valuma-alueen pinta-ala neliökilometreinä; valuma-alueen  pinta-ala Suomen alueella neliökilometreinä; valuma-alueen järvisyys  prosentteina; mahdolliset huomautukset viitteissä. LAATOKKAAN laskevia:Ruotsiksi/På svenska: Vattendrag som avvattnas till Ladoga JänisjokiTohmajokiHiitola å (fi. Hiitolanjoki)Vuoksen (fi. Vuoksi)Jänisjoen vesistö (01)  (Rabbit River  Basin)  https://fi.wikipedia.org/wiki/J%C3%A4nisjoen_vesist%C3%B6alue  Jänisjoen vesistö (vesistöaluetunnus 01) on Suomessa vesistöalue, joka laskee Jänisjoen kautta Laatokkaan. Vesistöalueen pinta-ala on 3 860,64 neliökilometriä, josta 1 988,41 neliökilometriä on  Venäjän puolella Karjalan tasavallassa. Alueen järvisyys on 10,6 %.  Vesistöalueen toisessa jakovaiheessa on seuraavat alueet tai valuma-alueet:  Jänisjoen alue  (01.01)Loitimon alue  (01.02)Haarajoen alue  (01.03)Sonkajärven valuma-alue  (01.04)Suonpäänjoen valuma-alue  (01.05)Viesimonjoen valuma-alue  (01.06)Eimisjärven valuma-alue  (01.07)Korpijärven valuma-alue  (01.08)Ryösiönjoen valuma-alue  (01.09) LähteetEkholm, Matti: Suomen vesistöalueet. Vesi- ja ympäristöhallinnon julkaisuja – Sarja A 126.  Helsinki: Vesi ja Ympäristöhallitus, 1993. ISBN 951-47-6860-4.   (Katsotaan meneekö Laatokan järveen muuta  vesistöä Suomesta?  Onhan niitä) ( https://fi.wikipedia.org/wiki/Luokka:Laatokan_valuma-alue)  Kiteen-Tohmajärven vesistö (02)  (Kitee- Tohma lake Basin)   https://fi.wikipedia.org/wiki/Kiteenjoen–Tohmajoen_vesistö Kiteenjoen–Tohmajoen vesistö (vesistöaluetunnus 02) on Suomessa vesistöalue, jonka laskujoki on Tohmajoki, ja joka laskee Laatokkaaan. Kiteenjoki on Tohmajoen sivujoki, joka yhtyy pääuomaan aivan Tohmajoen alajuoksulla. Vesistöalueen pinta-ala on 1 594,59 neliökilometriä, josta 759,81 neliökilometriä kuuluu Venäjän puolelle Karjalan tasavallassa. Alueen järvisyys on 5,64 %.  Vesistöalueen toisessa jakovaiheessa on seuraavat valuma-alueet:  Tohmajoen valuma-alue  (02.01)Kiteenjoen valuma-alue  (02.02)Hiitolanjoen vesistö (89) (Hiitola River  basin)  https://fi.wikipedia.org/wiki/Hiitolanjoen_vesistö  89   Hiitolanjoen vesistö (03) on yksi Suomen päävesistöalueista. Se on  Venäjän   Nevan vesistössä  Luokka:Nevan vesistö alaluokkana (subclass) .   Hiitolanjoen vesistö (vesistöaluetunnus 03) on Suomessa vesistöalue, joka laskee Hiitolanjokea myöten Laatokkaan. Vesistöalueen pinta-ala on 1 415,15 neliökilometriä, josta 1 029,28 neliökilometriä kuuluu Venäjän puolelle Karjalan tasavallassa. Alueen järvisyys on 12,46 %.  Vesistöalueen toisessa jakovaiheessa on seuraavat alueet tai valuma-alueet:  Hiitolanjoen alue  (03.01)Simpelejärven alaosan alue  (03.02)Simpelejärven yläosan alue  (03.03)Tyrjänjärven–Pieni Rautjärven valuma-alue  (03.04)Torsanjärven valuma-alue  (03.05)Suuri Rautjärven valuma-alue  (03.06)Sammallammen valuma-alue  (03.07) Vuoksen vesistö (04)  https://fi.wikipedia.org/wiki/Vuoksen_vesist%C3%B6 "Ei ole Vuoksen voittanutta ylikäynyttä Imatran"  Vuoksen vesistö (vesistöaluetunnus 04) on Suomen suurin vesistöalue, joka sijaitsee pääosin Kymenlaakson, Etelä- ja Pohjois-Savon sekä Etelä- ja Pohjois-Karjalan maakuntien alueilla Itä-Suomessa. Vesistön latva-alueita on myös Kainuussa, Pohjois-Pohjanmaalla ja Venäjän Karjalassa. Sen laskujoki on Vuoksi, joka laskee Laatokkaan. Sen valuma-alueen pinta-ala on 61 560 neliökilometriä, josta Suomen puolella 52 400 neliökilometriä.[1] Vesistön pääjärvi on Suur-Saimaa, johon kuuluvia järvenselkiä ovat muun muassa Etelä-Saimaa, Pihlajavesi, Haukivesi, Puruvesi, Orivesi ja Pyhäselkä. Vuoksen vesistöön kuuluvat lisäksi muun muassa Unnukka, Kallavesi, Pielinen, Kermajärvi, Juojärvi ja Suvasvesi, joiden veden pinnan taso on Saimaata korkeammalla. Vesitön järvisyys on 19,78 %.  Vuoksen vesistö alkaa Pohjois-Savon ja Kainuun rajamailta, josta lähtevät Kallaveden reitin lähdereitit Iisalmen reitti ja Nilsiän reitti. Kallavedestä vedet purkautuvat Soisalon saaren kahta puolta Haukiveteen läntisenä Leppävirran reittinä ja itäisenä Heinäveden reittinä. Heinäveden reittiin yhtyy idästä tuleva Juojärven reitti. Haukiveteen päätyy myös Vuoksen vesistön toinen pääreitti, Pielisen reitti. Reitit ovat samalla vesiteinä rahtiliikenteelle ja matkailulle muun muassa Kuopioon ja Joensuuhun. Näiden vesireittien korkeuseroja hyödynnetään vesivoimaloiden avulla sähköntuotannossa. Suurimmat voimalat ovat Pielisjoessa olevat Kaltimon ja Kuurnan voimalat sekä Huruskosken voimala Varkaudessa.  Vuoksen vesistö laskee Vuoksea pitkin (156 km) Venäjän puolelle Laatokkaan. Vuoksen alkuun on rakennettu Imatrankoskelle (1929) ja Tainionkoskelle (1947–1951) koko vesistön suurimmat vesivoimalaitokset. Laitokset omistaa nykyisin Fortum Oyj.  Puuta uitetaan Vuoksen vesistössä runsaasti, johtuen monien puunjalostusteollisuuden laitosten sijainnista sen ympäristössä. Tärkeitä teollisuuslaitoksia on Imatralla, Joutsenossa, Lappeenrannassa, Mikkelissä, Ristiinassa ja Varkaudessa. Uittomäärät vaihtelevat vuosittain 700 000 ja 1,4 miljoonan kuutiometrin välillä.[2].  Vuoksen vesistön vesiliikenne merelle kulkee Saimaan kanavaa pitkin Lappeenrannasta Venäjän puolelle Viipuriin. Vesistön jakoalueet Vesistöalueen ensimmäisessä jakovaiheessa on seuraavat alueet tai valuma-alueet:  Suur-Saimaan alue  (04.1)Haukiveden–Kallaveden alue  (04.2)Oriveden–Pyhäselän alue  (04.3)Pielisen reitin valuma-alue  (04.4)Iisalmen reitin valuma-alue  (04.5)Nilsiän reitin valuma-alue  (04.6)Juojärven reitin valuma-alue  (04.7)Höytiäisen valuma-alue  (04.8)Koitajoen valuma-alue  (04.9)MuutKanavat (Canals) Alajärven kanava, VarkausHaponlahden kanava, SavonlinnaKaavinkosken kanava, Kaavi-TuusniemiKihlovirran kanava, IisalmiKirkkotaipaleen kanava, RistiinaKivisalmen kanava, RääkkyläKortekannaksen kanava, Heinävesi–LeppävirtaKortesalmen kanava, KuopioKutveleen kanava, Ruokolahti–TaipalsaariMuuraispuron kanava, LeppävirtaOravin kanava, SavonlinnaPiensaaren kanava, VarkausPitkälänniemen kanava, VarkausPussilantaipaleen kanava, VarkausRahasalmen kanava, LeppävirtaSiikasalmen kanava, MikkeliSitkoinleuvansalmen kanava, PuumalaTikankaivannon kanava, LiperiVarkaantaipaleen kanava, RistiinaVihtakannan kanava, SavonrantaVälikanava, HeinävesiVääräkosken kanava, HeinävesiVäätämönsalmen kanava, Mikkeli LAATOKKA  ( entinen NEVAJÄRVI) kuului Suomen valtiolle pohjois-osistaan  kun Suomi julistautui itsenäiseksi, mutta 1900-luvun  sodissa Suomi menetti koko  Laatokan. Yksi syy  oli Leningradin  tuhoutumisuhka  II maailmansodassa, jtoen  Laatokan saanti oli venäjlle puolustuksellisesti tärkeä. https://fi.wikipedia.org/wiki/Laatokka#Historia  Nykyhistoriaa Viime sotiin asti järven pohjoisosa kuului Suomelle. Järvestä on ennen käytetty myös nimeä Nevajärvi. Laatokka on myöhäinen lainasana.[9]   Valamon luostari perustettiin keskiajalla Laatokassa olevaan Valamon saareen. Myös Konevitsan saarella on ortodoksinen luostari. Neuvostoajalla molemmat luostarit olivat sotilaskäytössä ja päätyivät erittäin huonoon  kuntoon. Neuvostoliiton hajoamisen jälkeen luostaritoimintaa etenkin  Valamossa on elvytetty ja rakennuksia kunnostettu.   Leningradin piirityksen aikana Laatokka oli ainoa ulospääsyreitti kaupungista. Tarvikkeita kuljettiin talvella kaupunkiin jäätä pitkin, kesällä veneillä.  Hitlerihän koetti saartaa nälkäkuolemaan koko Leningradin ja halusi siihen vielä Leningradin  luoteesta ja pohjoisesta  marsalkka   Mannerheimin ja Suomen armeijan  täyttä ko-operaatiota   mutta  tähän genosidiin  ei suostuttu- Suomi halusi omaa itsenäisyyttään- ja  NL puolustautuikin raivoisasti.  Suomalaiset vetäytyivät  tosi raadeltuina - vieläkin on  tuntemattomia  hautoja   maastossa- tietääkseni  äitini isänkin suvusta  vielä on yksi  henkilö  tuntemattomaan kohtaan haudattuna- -  ja   lopullisesta rauhassa sitten  Venäjä  kuroi  Laatokan rajat umpeen ja  Suomi sai tyytyä muihin järviinsä, joista ei ole puutetta. Laatokan varren kylistä  kansaa muutti  kosolti Suomen puolelle evakkoina  ( n 400 000 siirtolaista asutettiin Suomen puolelle eri kyliin).  https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Pariisin_rauha.png/250px-Pariisin_rauha.png</text><languageCode>fi</languageCode><locationCode>sj</locationCode><coordinates /><links><link>https://fi.wikipedia.org/wiki/Suomen_vesistöalueet</link><link>https://fi.wikipedia.org/wiki/Vesistö</link><link>https://fi.wikipedia.org/wiki/Suomen_ympäristöhallinto</link><link>https://fi.wikipedia.org/wiki/Laatokka</link><link>https://fi.wikipedia.org/wiki/Suomenlahti</link><link>https://fi.wikipedia.org/wiki/Saaristomeri</link><link>https://fi.wikipedia.org/wiki/Selkämeri</link><link>https://fi.wikipedia.org/wiki/Perämeri</link><link>https://fi.wikipedia.org/wiki/Barentsinmeri</link><link>https://fi.wikipedia.org/wiki/Vienanmeri</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-ekholm12-1</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-ymphal-2</link><link>https://fi.wikipedia.org/w/index.php?title=Vöyrinjoki&amp;action=edit&amp;redlink=1</link><link>https://fi.wikipedia.org/wiki/Kalimeenoja</link><link>https://fi.wikipedia.org/w/index.php?title=Oravaistenjoki&amp;action=edit&amp;redlink=1</link><link>https://fi.wikipedia.org/wiki/Piehinginjoki</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-ekholm12-1</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-ymphal-2</link><link>https://fi.wikipedia.org/wiki/Neva_(joki)</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-3</link><link>https://fi.wikipedia.org/wiki/Suomen_ja_Venäjän_raja</link><link>https://fi.wikipedia.org/wiki/Suomen_ja_Norjan_raja</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-4</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-5</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-6</link><link>https://fi.wikipedia.org/wiki/Vesi-_ja_ympäristöhallitus</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-7</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-8</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-9</link><link>https://fi.wikipedia.org/wiki/Suomen_ympäristökeskus</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-SYKE_maanpeitei1-10</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-SYKE_maanpeitei3-11</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-SYKE_maanpeitei1-10</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-12</link><link>https://fi.wikipedia.org/wiki/Luettelo_Suomen_vesistöistä#cite_note-13</link><link>https://sv.wikipedia.org/wiki/Ladoga</link><link>https://sv.wikipedia.org/wiki/Jänisjoki</link><link>https://sv.wikipedia.org/w/index.php?title=Tohmajoki&amp;action=edit&amp;redlink=1</link><link>https://sv.wikipedia.org/w/index.php?title=Hiitola_å&amp;action=edit&amp;redlink=1</link><link>https://sv.wikipedia.org/wiki/Vuoksen</link><link>https://fi.wikipedia.org/wiki/Jänisjoen_vesistöalue</link><link>https://fi.wikipedia.org/wiki/Vesistöaluetunnus</link><link>https://fi.wikipedia.org/wiki/Suomi</link><link>https://fi.wikipedia.org/wiki/Jänisjoki</link><link>https://fi.wikipedia.org/wiki/Laatokka</link><link>https://fi.wikipedia.org/wiki/Neliökilometri</link><link>https://fi.wikipedia.org/wiki/Venäjä</link><link>https://fi.wikipedia.org/wiki/Karjalan_tasavalta</link><link>https://fi.wikipedia.org/wiki/Järvisyys</link><link>https://fi.wikipedia.org/wiki/Toiminnot:Kirjalähteet/9514768604</link></links><tags><tag>Suomen vesistöistä. Laatokkaan alskevat vesistöt.</tag></tags><images /><indexedAt>2019-04-02T08:23:07Z</indexedAt><publishedAt>2019-04-01T08:53:00Z</publishedAt><reindexedAt>2019-04-02T08:23:07Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>4284172651884139393</blogId><blogName>Eläkepäivät</blogName><blogUrl>http://kirjallisuutta-pensionerad.blogspot.com</blogUrl><blogRank>1</blogRank><authority>1</authority></post><post><id>9773186708822180205</id><author>noreply@blogger.com (Kirjallisuutta)</author><url>http://kirjallisuutta-pensionerad.blogspot.com/2019/04/suomen-jokien-kevattulvat-ovat-nyt.html</url><title>Suomen  jokien  kevättulvat ovat nyt parhaillaan ja jäät heikkenevät vaarallisiksi</title><text>https://www.ymparisto.fi/fi-FI/Vesi/Vesitilanne_ja_ennusteet/Vesitilanne_ja_ennusteet(8431  Sitaatti  vesitilanteesta nyt Suomessa:                              "Vesitilanne ja ennusteet                                                                       Vedenkorkeus        TiedotteetSYKEn vesitilannekatsauksen julkaiseminen on päättynyt (1.2.) Suurten hallien kattojen lumitilanteen tarkkailu tarpeen koko maassa  (28.1.) Etelä- ja Lounais-Suomessa jokien virtaamat tulvahuipussa (Tulvakeskus 31.3.)Sään  lämpeneminen sai jokien virtaamat kasvuun Etelä- ja Lounais-Suomessa  sekä länsirannikolla Lapuanjoen eteläpuolisissa jokivesistöissä. Etelä-  ja Lounais-Suomessa virtaamat ovat nyt huipussaan, Pohjanmaalla  virtaamat ovat jo kääntyneet laskuun. Virtaamat kääntyvät laskuun  viilenevän sään seurauksena myös Etelä- ja Lounais-Suomessa. Lue lisää tai tutustu hydrologisiin havaintoihin. Järvien jäät heikkenevät ja jokien jäät lähtevät Etelä- ja Länsi-Suomessa (21.3.)Etelä-  ja Länsi-Suomen järvillä aurinko on alkanut heikentää jään rakennetta  ja jää voi olla petollisen heikkoa. Jään kokonaispaksuus ei kuvaa jään  kantavuutta, koska suuri osa jääkerroksesta on selvästi teräsjäätä  hauraampaa ja heikompaa. Maan etelä- ja keskiosissa jokien jäillä ei  tule enää liikkua ja järvienkin jäillä on syytä erityiseen  varovaisuuteen, koska jäät heikkenevät auringonpaisteessa ja  virtapaikoissa nopeasti. Lisää Etelä- ja Länsi-Suomessa lumen sulamiskausi käynnissä, maan keskiosissa sulaminen alkamassa (20.3.)Lumen  sulaminen on hyvässä vauhdissa Etelä- ja Länsi-Suomessa. Muualla maassa  merkittävää sulamista ei ole vielä tapahtunut, mutta sulaminen on  alkamassa maan keskiosissa. Kainuussa ja Pohjois-Pohjanmaalla lumikuorma  kasvaa lähiviikkojen aikana vielä 2–10 kg/m2. Lapissa lumikuorma voi kasvaa vielä 20 kg/m2 seuraavan kuukauden aikana. Lumikuorma alkaa pienentyä  Pohjois-Suomessakin huhtikuun alun jälkeen, Lapissa vasta kuun  puolivälin jälkeen. Isojen hallien omistajien on syytä varmistaa  kattojen kestävyys runsaan lumen takia. Omakotitalojen, rivitalojen ja  pientalojen katot eivät ole vaarassa lumikuormien takia, mutta katolta  putoava lumi voi kuitenkin aiheuttaa vaaraa.. Lisää Pohjaveden pinnat alhaalla (20.3.)Lämmin  ja vähäsateinen vuosi 2018 sekä talviaikainen luontainen pohjaveden  pinnankorkeuksien lasku näkyy pohjaveden alhaisina pinnankorkeuksina.  Maan eteläosissa ja rannikkoseuduilla pinnat ovat 10–25 cm ja maan  keskiosissa 40–70 cm alle ajankohdan keskiarvojen. Alhaisimmat  pinnankorkeudet havaittiin Päijänteen koillispuolella, 80–120 cm alle  30-vuoden vertailujakson keskiarvoja. Maan pohjoisosissa pinnat ovat  lähellä keskiarvoja ja aivan pohjoisessa 5–30 cm yli keskiarvojen. Lisää LisätietoaSYKEn hydrologit Twitterissä: @pinnanalta    Vesitilanneasiantuntijat ja yhteystiedot                          Julkaistu 20.3.2019 klo 17.57, päivitetty 31.3.2019 klo 14.16</text><languageCode>fi</languageCode><locationCode>sj</locationCode><coordinates /><links><link>https://www.ymparisto.fi/fi-FI/Vesi/Vesitilanne_ja_ennusteet/Vesitilanne_ja_ennusteet(8431</link><link>http://wwwi2.ymparisto.fi/i2/90/wyax2/vesitilanne.html</link><link>https://www.ymparisto.fi/fi-FI/content/49055/1</link><link>https://www.ymparisto.fi/fi-FI/content/49116/1</link><link>https://www.ymparisto.fi/fi-FI/Vesi/Vesitilanne_ja_ennusteet/Vedenkorkeus_ja_virtaama</link><link>https://www.ymparisto.fi/fi-FI/content/16971/1</link><link>https://www.ymparisto.fi/fi-FI/content/8432/1</link><link>https://www.ymparisto.fi/fi-FI/content/8430/1</link><link>https://www.ymparisto.fi/fi-FI/Vesi/Vesitilanne_ja_ennusteet/Pohjaveden_korkeus</link><link>https://www.twitter.com/pinnanalta</link><link>https://www.ymparisto.fi/fi-FI/content/8327/1</link></links><tags><tag>Matalat pohjavedet.</tag><tag>Suomessa kevättulvat ja heikot jäät</tag></tags><images /><indexedAt>2019-04-02T08:23:07Z</indexedAt><publishedAt>2019-04-01T08:00:00Z</publishedAt><reindexedAt>2019-04-02T08:23:07Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>4284172651884139393</blogId><blogName>Eläkepäivät</blogName><blogUrl>http://kirjallisuutta-pensionerad.blogspot.com</blogUrl><blogRank>1</blogRank><authority>1</authority></post><post><id>10280448774272528828</id><author>noreply@blogger.com (Kirjallisuutta)</author><url>http://kirjallisuutta-pensionerad.blogspot.com/2019/03/antroplogisen-tieteen-jaanteita.html</url><title>Antroplogisen tieteen jäänteitä hyllyillä Helsingissä</title><text>https://www.hs.fi/kaupunki/art-2000006054151.html Yli tuhat kalloa. Helsingissä hyllyllä laatikoissa.  " Luukokoelma Ihminen "  Luonnollisesti asia on kulttuurisidonnaistakin. Voi sanoa, että Pyhän Maan matkallani kerran tein Israelin Luonnonsuojelijoitten ryhmässä  retken  Juudeaan sinne Benjaminin rotkojen rajalle ja linjaäautosta rotkon reunalta laskeuduimme patikoiden  Wadi Qeltin   pohjalle ja sieltä  sitten patikoitiin taas ylöspäin  vastapäisellä pystysyoralla  kallioseinämällä sijaitsevaan luostariin- josta  tietysti osa  laitosta oli louhittu kallion sisään syvälle.. Ilmeisesti se oli - tarkoitan- on- kreikkalaiskatolilainen. Siellä oli  aikakausien  vanhurskaitten  munkkien jäänteet talletettuna:  kalloja oli hyllyllä. Tietysti siellä  kai  tiedettiin kuka vanhurskas oli kyseessä  ja mitkä kallon edustajan  hyvät teot, kirjoitukset  tai opetukset  tässä elämässä olivat olleet. Kyllähän asia oli esim. ryhmän ortodoksien  juutalaisten israelilaisienkin mielestä    aika  erikoinen  kultuuurimuoto ja varsinkin  erikoinen krsitinuskon toteuttamistapa.  Puolestani  ensimmäistä kertaa näin jotain vastaavaa.  Mutta katolilaisuudessa on  paljon  löydettävissä hautaamattomia luita ja luustoja eri puolilla maailmaa.- kirkon kattokoristeina jne.  Juutalaisuudessa  on tärkeä pikainen  hautaus, sillä  tähän liittyy puhtaussääntöjä, jotka  vaikuttavat yhteiskunnan elämään.  Juudan kansa on myös tarkka  siitä , että haudat  ovat hyvässä kunnossa eikä niitä   turmella, ryöstetä tai häväistä. Myös  vainojen ja Holokaustin  vainajat  halutaan  löytää kätketyistå  sijaintikohdistaan  maapallolla ja saattaa  asianmukaisesti haudatuksi ja dokumentoiduksi Israelin historiaan yksilöinä tai kadonneen kokonaan tuhotun  seurakunnan  jonain jäsenenä.   Toivottavasti nuo Helsingin hyllykallot myös tunnistetaan henkilöinä ja saatetaan maan poveen.  Kyse ei ainakaan ole minkään kirkkokunnan  munkkien tai muiden pyhien  palvotuista kalloista. 1930- luvulla  natsismissa koetettiin  kallonluista mitata jokin "arjalaisuuden" piirre. Siinä sitten suomalaisetkin antropologit koettivat pitää pintansa ja löytää  suomaalisista jotain  "elinkelpoista"  ainesta  ja sopivia kallon mittoja. Voi  kuvitella, että suomalainenkin kallo ja sen mittat ovat olleet  Hitlerin pohdinnassa, suomessakun on  paljon muitakin kuin sinisilmisiä pellavapäitä. isänikin joka oli ruskeasilmäinen ja pikimustatukkainen (kuten isän äiti) lähti kipin kapin Amerikkoihin 1930-luvulla opiskelemaan ja jätti  taakseen Itävallan ja Saksan opiskelut.  Hänen isoveljenä asui Saksassa  Aachenissa - ja omisti   siniset silmät ja  ruskean  tukan kuten isoisä- oltiin tavallisia suomalaisia, oikeastaan patriootteja -  oliko suomalaisilla  siihen aikaan   jonkinlainen  suojakamuflage- joskus kyllä  natsit saivat joitain raivon puuskia, mutta suomalaisiin ei niin kiinnitetty tarkkaa huomiota, Venäjän uhan takia. Venäjän takia  suoamalaiset   pysyivät jollain  tavalla "melkein ihan arjalaisena" ainakin sen aikaa, että saatiin sota  päättymään ja itsenäisyyden  rääppeet säilyivät.  Suomi katsottiin  pettäjäksi vähän joka suunnalla. Nyt sitten löytyy tuota stardustia sieltä täältä.  Kalloja on ehkä tarvittu suomalaisten omankin " arjalaisuuden"  pohdinnoissa. Tämä on oma arvioni. Onhan suomessa  liuta niitäkin , jotka ylpeilevät natsiystävyydestään- ehkä vielä siitä että ovat  tuhonneet  rasistisin tarkoituksin ihmisiä.  Sehän ei ole mitään maanpuolustussotaa vaarallista vihollista vastaan, vaan raukkamaista  genosidia ja kokoaa Suomen päälle syyllisyyttä ja verivelkaa.   Toinen  ilmiö ja ääripää taas on että osa suomalaisista  haluaa löytää nyt asioitten käännyttyä jälleen oikeinpäin-  Suomen kansasta jotain yhteyttä jaloon valittuun kansaan Aabrahamin biologisiin jälkeläisiin.  Se on taas toinen ääripää.   Jopa geeneistä  koetetaan löytää itsestä jotain kadonnuta sukukuntaa.  Ikään kuin ei muilla kansoilla  olisi myös omia kaksiatoista sukukuntiaan. Suomella on ainakin 9 eri heimoa, ihan ihka suomalaisia.    Itse  Luoja on niin sekoittanut ihmisgeenit tuossa Valitussa kansassa, etta moista  mixeriä ei missään muussa geeniaineistossa ole edes tapahtunut.  Asian huomaa siitä,  että mitokondrioita ( monipuolisia elinvoimaisuustekijöitä) on kerätty monilta ei-juutalaisilta heimoilta ( siis äitilinjoja puhtaista pakanakansoista ja naapuriheimoista  ) ja  sitten itse Jumalan Poika  syntyy  mooseksenuskolaisesta äidistä  ilman  isälinjaa  vanhasta aadamista,   ei edes  Aabrahamista isälinjaa. Siis  siitä vanhan aatun y:.stä ei ole suoraa linjaa uuteen aadamiin, joka lunasti ahmiskunnan  ja  tässä on täydellinen Taivaan linkki ja uuden  hengellisesti   kasvaneen Hengellisen  ihmisen luomisen alku. .  Luoja luo uutta .   Pienimmästä kasvaa heimo ja väkevä kansa.  Nykyjuutalaisuudessa  merkitsee  todellakin usko, uskon tunnustaminen ja noudattaminen ja biologisuus on  eräänlainen  kultakantti tietysti, kun Juudan sukuinen uskoo Juudan uskolla. Kristinuskossakin on tärkeintä se sydämen usko ja suun tunnustus. kristinusko jota ei-juutaliset kansat noudattavat, voat olemukseltaan kuitenkin juutalaista uskoa,, jota toteutetaan  ymmärryksen  ja käsityskyvyn mukaan sovelluttaen  olosuhteisiin kautta maapallon, paikoissa jotka eivät ole kanaanin maan aluetta.  ( Raamattu monine käytännön sääntöinen on kytketty  Israelin maata koskeviin  luonnonolosuhteisiin ja näitä  paikallissääntöjä ei ole sälytetty muille kansoille vaan uskonnosta  on  seulottu esiin olennainen opetusosa, joka soveltuu kautta maailman kohoaviin seurakuntiin. Tässä olennaisen  "lunastuksen hopean sulattamisessa esiin"  Raamatusta on Paavalin kirjeet  ydintekstiä.   ne on lisäksi kirjoitettu tilanteessa, jossa koko maailma oli sekaisin Rooman vainoista,  ylivallasta,  orjuuttamisista ym  joten  Paavalin piti kirjoittaa  seurakunnille jotka joutuivat  lähtemään maailman ääriin asti pysyäkseen ylipäätänsä hengissäkin.  Maailmankriisi seuloi täten pois  ohjeista kaikki  "mintut ja tillit"  kymmenyksistä, koska  jota voisia tuottaa minttua  ja tilliä, pitäisi asua rauhassa paikoillaan ja omata  maatilaa.     Kansalliset tunnusmerkit, pienet heimot,  ovat vahvoja yksiköitä ja monesti kantavat  satavuotisten traditioitten  häkkiä, joka  sitoo uskon noudattamisen häkin puitteisiin niin, että  ei edes tunnisteta toisen heimon  olevan kristinuskoa jos ei ole samoja  häkkejä.  Tässä onkin hyvin suuri pirstoutuminen  , mikä todella pitää yllä Baabelin sekoitusta  kansakunnissa ja altistaa  genosidisille vaiheille . Juutalainen kansa on kestänyt  aikakausien paineen ja vahvsituu valtiona nyt kun muut pirsotutumsitaan pirstoutuvat, mikä on sitä pimeyttä joka peittää kansakuntia.  Jesaja siitä mainitsee. Israelin historian  ahjosta on noussut vahva kansa.   Vaikeaa haittaa Israelin  elämälle on se,  että muut kansat, varsinkin kristikunnan kansat,   ovat pirstoutumassa ja vain eri kansojen yksilöt tai pienet  yhdistykset   tunnistautuvat Israelin  ystäviksi, sillä yksilöillä on hyvin vähän  voimia  toimia yhteistyössä  verrattuna  kokonaiseen kansaan,  joka toimii yhteistyössä toisen  kansan kanssa.   Ei- kristilliset kansat taas eivät  tiedä Israelin historiasta edes sitä, mitä kristilliset kansat tietävät.  Monia kansoja yhdistävä tekijä voi sen takia olla esim  israelin vastaisuus, antisemitismi ja juutalaisviha.  joten ei voi sanoa että maailma olisi  kovin  hyvällä hollilla vaikka natsiajan  ja maailmansotien   suursurmista  on kulunut " jo"  ihmisen ikä.   On hyvä kuitenkin että lehdistö ja media  antavat tietoa maailman tilanteesta ja genosidivaaroista.</text><languageCode>fi</languageCode><locationCode>sj</locationCode><coordinates /><links><link>https://www.hs.fi/kaupunki/art-2000006054151.html</link></links><tags><tag>Antropologian  hyklytetyt jäänteet</tag></tags><images /><indexedAt>2019-04-02T08:23:07Z</indexedAt><publishedAt>2019-03-31T12:55:00Z</publishedAt><reindexedAt>2019-04-02T08:23:07Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>4284172651884139393</blogId><blogName>Eläkepäivät</blogName><blogUrl>http://kirjallisuutta-pensionerad.blogspot.com</blogUrl><blogRank>1</blogRank><authority>1</authority></post><post><id>8636349997579654686</id><author>infertilabarnmorskan</author><url>https://nouw.com/infertilabarnmorskan/stimuleringen-borjar-forstaivf-35733691</url><title>Stimuleringen börjar #förstaIVF</title><text>För första gången i våra liv längtade vi efter höst och vinter. Aldrig har en höst kommit så långsamt. Då jag fick mens i november skickade jag meddelande i sjukhuset app. Hoppas, hoppas att det var på rätt dag! Kliniken hade stängt på helger så det gällde att pricka rätt för att kunna göra äggplock. Senare samma dag fick jag instruktioner om vilka doser jag skulle ta. Jag skulle göra det korta protokollet då jag var ung, hade bra äggreserv och många antralfolliklar. På cykeldag två började jag Puregon 150 iu och kände mig otroligt taggad. På cykeldag sex lades Cetrotide till för att förhindra för tidig ägglossning. En spruta på vardera sidan av magen. Jag var rädd att jag skulle bli ett nervvrak. Jag hade ju fått biverkningar av letrozol och det här var ju stora mängder hormoner. Jag brukade också kunna bli lätt knäpp bara av PMS. Men jag märkte ingenting. Jag fick lite rodnad kring instickstället av Cetrotide och i slutet av sprutperioden kände jag lite av äggstockarna och var lite svullen om magen, men annars mådde jag bra. Väldigt bra faktiskt. Kanske var det för att förväntningarna och hoppet var så högt. På dag 7 fick jag ta en trip till fastlandet för kontroll. Vilket innebar ledigt från jobbet, start kl. 02.15 på natten, buss, båt, buss igen och sen vänta ett par timmar innan jag hade min läkartid. Flera folliklar på båda sidor och de växte i lagom takt. Besöket tog ganska exakt fem minuter. Jag skulle fortsatta med samma dos. Två dagar senare, på fredag skulle jag tillbaka för ny kontroll. Nu var jag tvungen att fördriva tiden i några timmar tills jag skulle få flyga hem. Den andra kontrollen var senare på dagen, vilket tack och lov innebar att jag fick flyga båda vägarna istället för att behöva åka mitt i natten. Men jag var fortfarande tvungen att ta ledigt från jobbet. Endometriumet var då 9,1 mm och de ledande folliklarna på vardera sidan 16 och 17 mm stora. Det var bra och jag planerades in för äggplock. "Vi är tyvärr fullbokade för äggplock på måndag" berättade gynekologen. Vad i hela..? "Så du kommer att få göra äggplocket på privatkliniken som vi har samarbete med" fortsatte hon. Puuuh...! Jag fick en bunt papper med info, vissa hade de bara på finska. Jag fick direktiv om att jag följande dag skulle ta endast Cetrotide på morgonen, sedan exakt kl. 21.30 skulle jag ta Ovitrelle, ägglossningssprutan för mognad. Jag skulle även ringa till kliniken på deras telefontid om ett par timmar för mer info direkt från dem. "Okej, så hur hittar jag till kliniken?" undrade jag som kände väldigt dåligt till staden. Hon visade adressen och försökte förklara. Kliniken hade nyss flyttat och bytt namn till på köpet. Jag förstod inget av det hon förklarade. Vi får väl ta en taxi...</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:23:20Z</indexedAt><publishedAt>2019-04-02T08:23:03Z</publishedAt><reindexedAt>2019-04-02T08:23:20Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>17620962166729079979</blogId><blogName>infertilabarnmorskan blogg</blogName><blogUrl>https://nouw.com/infertilabarnmorskan</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>8285362506051579682</id><author>Kraka</author><url>http://kraka.moah.se/2019/04/02/nu-blommar-det-bloggutmaning-i-april-2/</url><title>Nu blommar det – Bloggutmaning i april 2</title><text>Orsakullan, Madeleine, har en bloggutmaning i april med en fråga att besvara varje dag. 
Fotografera ett vårtecken. 
Nu blommar det överallt. Blommor i alla färger, men här är det gult som gäller.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>https://www.saramadeleine.se/</link><link>https://www.saramadeleine.se/2019/03/30/bloggutmaning-i-april/?unapproved=104744&amp;moderation-hash=78461be07abef5af31694f7566fe25db#comment-104744</link><link>http://media1.kraka.moah.se/2019/04/20190402_072933.jpg</link></links><tags><tag>Bloggutmaning i apri 2019</tag><tag>Livet</tag></tags><images /><indexedAt>2019-04-02T08:23:24Z</indexedAt><publishedAt>2019-04-02T07:02:59Z</publishedAt><reindexedAt>2019-04-02T08:23:24Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>18227779470693653121</blogId><blogName>Kraka</blogName><blogUrl>http://kraka.moah.se</blogUrl><blogRank>2</blogRank><authority>26</authority></post><post><id>11059417671722379862</id><author>Mirjam</author><url>http://mirjamekstrom.se/april/</url><title>April</title><text>Det är april. Numera är det mörkt ute när vi kliver upp på morgonen. Jag drar undan gardinerna och tittar ut över alla ljuspunkter som lyser upp, från så många olika människors hem. Undrar vilka fler som också är vakna nu, klockan 6.15. Som gnuggar sömmen ur ögonen efter en halvdan nattsömn. Som dricker kaffe och vaknar till. 
 
 
Det är april och det börjar bli vår i Sverige, men här är det höst. Vissa dagar är fortfarande varma, men på mornarna är det krispigt i luften. April kommer alltid vara vår för mig och det känns fortfarande konstigt med årstiderna här. Huset är kallt på morgonen och efter den långa sommaren påminns jag återigen om hur dåligt isolerade husen är på Nya Zeeland. Känns som att det blåser rakt in. Jag tänker att jag måste köpa nya varma sockor, en ny pyjamas. 
Treåringen säger att han vill mata bebisen. Jag låter honom och gröten hamnar överallt. En stund senare sitter de båda på golvet, bebisen ramlar omkull och han är direkt på plats. It’s okay, säger han. You’re alright. Ger honom en leksak. Bebisen tittar på sin storebror med tindrande blick och allting är bra i hans värld igen. 
Det är april och jag har varken läst eller hört ett enda aprilskämt. Jag skriver en text om skrivande och självkritik. Väljer att inte publicera den eftersom jag anser att den inte blev tillräckligt bra. Ler för mig själv åt det ironiska i detta. 
Jag gör en övning där jag ska föreställa mig själv som åttioåring och svara på frågor om mitt liv. Kan inte sluta analysera mina svar, tänka efter, stanna upp. Precis så som jag inte ska göra. Tänker att jag inte ens kan föreställa mig vilket land jag kommer befinna mig i om fem år, och definitivt inte om femtio år. 
Det är april och vi fixar pass till båda barnen. Nu kommer alla i familjen ha svarta pass förutom jag. Treåringen har fått Nya Zeeländskt medborgarskap. Nästa månad åker vi till Sverige, för första gången sedan vi flyttade hit. 
Inlägget April dök först upp på Mirjam Ekström.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>vardagligt</tag></tags><images /><indexedAt>2019-04-02T08:23:26Z</indexedAt><publishedAt>2019-04-01T19:08:19Z</publishedAt><reindexedAt>2019-04-02T08:23:26Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>5731316883857566919</blogId><blogName>Mirjam Ekström</blogName><blogUrl>http://mirjamekstrom.se</blogUrl><blogRank>1</blogRank><authority>4</authority></post><post><id>4833875353690694656</id><author /><url>http://fluffigunicorn.blogg.se/2019/april/0616.html</url><title>06:16</title><text>Godmorgon. Ingen ångest idag iallafall. Det får man tacka för. Igår hade jag dock ångest från helvetet. Men min syster lyckades lugna ner mig så numera är det cool lugnt. Dagens planer då! Jag funderar på om jag ska åka ner till stallet idag. Jag har ... - Läs hela inlägget här</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>This is Cim</tag></tags><images /><indexedAt>2019-04-02T08:23:27Z</indexedAt><publishedAt>2019-04-02T04:20:31Z</publishedAt><reindexedAt>2019-04-02T08:23:27Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>5062240634608764107</blogId><blogName>Öppet homosexuell och en av Norrbottens största personliga bloggar</blogName><blogUrl>http://fluffigunicorn.blogg.se</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>7797941249134679410</id><author>Joonatan</author><url>https://elokuvantaikaa.blogspot.com/2019/04/arvostelu-dumbo-2019.html</url><title>Arvostelu: Dumbo (2019)</title><text>DUMBO  Ohjaus: Tim Burton Pääosissa: Colin Farrell, Nico Parker, Michael Keaton, Danny DeVito, Finley Hobbins, Eva Green, DeObia Oparei, Sharon Rooney, Roshan Seth, Joseph Gatt ja Alan Arkin Genre: fantasia, draama Kesto: 1 tunti 52 minuuttia Ikäraja: 7  Dumbo on uusi versio Helen Abersonin tarinaan perustuvasta Walt Disneyn animaatioklassikosta Dumbo vuodelta 1941. Vuonna 2010 Disney-yhtiöltä oli ilmestynyt uudelleenfilmatisointi yhtiön toisesta klassikosta, Liisa Ihmemaassa -leffasta (Alice in Wonderland - 1951), mistä nousi jättihitti. Menestyksen myötä yhtiöllä tajuttiin, että uudet, näytellyt versiot vanhoista piirrosfilmeistä voisivat tuottaa mukavia summia mammonaa ja tämän jälkeen ilmestyivät mm. Prinsessa Ruususen (Sleeping Beauty - 1959) tarinaa muutteleva Maleficent - Pahatar (Maleficent - 2014), Viidakkokirja (The Jungle Book - 2016) ja Beauty and the Beast - Kaunotar ja hirviö (Beauty and the Beast - 2017). Uuden Dumbon suunnittelu alkoi vuonna 2014, mikä ei ollut ihme, sillä kyseessä oli aikoinaan herra Walt Disneyn lempileffa omista tuotoksistaan. Ohjaajaksi valittiin yhtiön uudelleenfilmatisointitrendin aloittaneen Liisa Ihmemaassa -elokuvan ohjaaja Tim Burton, joka yhdessä käsikirjoittaja Ehren Krugerin kanssa ei halunnut tehdä suoraa kopiota alkuperäisestä Dumbosta, vaan pikemminkin uuden näkemyksen tutusta kertomuksesta. Kuvaukset alkoivat kesällä 2017 ja nyt uusi Dumbo on saanut ensi-iltansa. Itse kiinnostuin filmistä heti, kun kuulin sen teosta ja että Burton toimisi elokuvan "sirkustirehtöörinä". Trailerit eivät saaneet minua kovinkaan innostuneeksi, mutta minua kiehtoi se, että filmin tarina vaikutti todella erilaiselta kuin alkuperäisen klassikon. Kävinkin katsomassa Dumbon heti sen ensi-iltaviikonloppuna ja valmistautumisena uuteen teokseen katsoin samaisena aamuna alkuperäisen piirretyn uudelleen.  Vuonna 1919 huonosti menestyvällä Medicin veljesten sirkuksella etsitään uutta vetonaulaa keräämään yleisöä, kun sirkuksen elefantti Jumbo synnyttää norsuvauva Dumbon. Aluksi kaikki tekevät pilkkaa jättimäiset korvat omaavasta Dumbosta, mutta pilkka osuu omaan nilkkaan, kun Dumbo pystyykin lentämään korviensa ansiosta.  Elokuvan tähti on tietty sen käsittämättömän suloinen ja mielettömän ihana nimikkonorsu Dumbo. Minulta löytyy pehmeä kohta elokuvien söpöille hahmoille ja tämä elefantinpoikanen voitti paikkansa siinä kohdassa välittömästi. Vannoutuneimpienkin tietokone-efektivihaajien on vaikea nillittää, sillä tässä digitoteutus saa Dumbon tuntumaan käsinkosketeltavan todelliselta olennolta ja elokuva sisältää useammankin hetken, joina olisin vain halunnut hypätä valkokankaan läpi halaamaan pientä elefanttia. Parissa kohtaa meinasi mennä roska silmään, kun pääsi seuraamaan innokkaan Dumbon suloisuutta. Norsu on kaikin puolin täydellisesti toteutettu ja kun se vihdoin ampaisee lentoon, meni ihoni kananlihalle ja pari seuraavaakin lentoa tarjosivat kylmiä väreitä vaikuttavuutensa ansiosta.     Leffan lentävän vetonaulan kanssa ei ole siis ongelmia, mutta entäpä muut hahmot? Alkuperäisestä piirretystä tutut Timotei-hiiri, Jumbo-elefanttiäiti ja sirkustirehtööri ovat kyllä mukana, mutta Timotein innokkaat fanit kokevat luultavasti pettymyksen, sillä hiiri esiintyy vain nopeasti parissa kohtauksessa, eikä tee mitään samaa kuin klassikossa. Jumbo-äidinkin roolia on muutettu, vaikka tietyt tutut asiat ovat tallella. Tämän sirkuksen tirehtöörinä toimii Danny DeViton esittämä Max Medici, joka yrittää epätoivoisesti saada bisneksensä rullaamaan ja lentävä norsuhan on siihen mitä parhain väline. Hahmo ei kuitenkaan ole mikään häikäilemätön rahaa himoava roisto. Ei, sen homman hoitaa Michael Keatonin näyttelemä V. A. Vandevere, huvipuistonomistaja, joka kiinnostuu tietty Dumbosta ja yrittää havitella tämän omaksi tähdekseen. Hahmon ei tarvitse kauaa olla ruudulla, että nuorimmatkin katsojat tietävät, ettei hänellä ole puhtaita jauhoja pussissaan. Siinä, missä DeVito sopii passelisti hassun sirkustirehtöörin osaan, Keaton vetää roolinsa pahasti yli. Hauskaa on muuten se, että Keaton ja DeVito ovat aiemminkin esiintyneet yhdessä Tim Burtonin ohjauksessa, nimittäin supersankarileffassa Batman - paluu (Batman Returns - 1992). Lisäksi Keaton esiintyi myös Burtonin Beetlejuicessa (1988) ja ensimmäisessä Batmanissa (1989), kun taas DeVito näyttäytyi erikoisessa Mars hyökkää! -komediassa (Mars Attacks! - 1996) ja Big Fishissä (2003).      Burtonin kanssa pari kertaa aiemminkin, elokuvissa Dark Shadows (2012) ja Neiti Peregrinen koti eriskummallisille lapsille (Miss Peregrine's Home for Peculiar Children - 2016) yhteistyötä tehnyt Eva Green esittää V. A. Vandeveren heilaa, ranskalaista trapetsitaiteilija Colette Marchantia. Valitettavasti Greenkään ei oikein vakuuta osassaan, vaan vetää ranskalaisaksenttinsa pahasti yli ja tehden vain niin paljon kuin on pakollista, eikä yhtään sen enempää. Greeniä on toisaalta vaikea syyttää tästä, sillä hänen hahmonsa Colette on todella kehnosti kirjoitettu.      Tärkeimmät ihmishahmot elokuvassa ovat kuitenkin Farrierin perhe. Colin Farrell näyttelee Holt Farrieria, vaimonsa ja todella yllättäen kätensä sodassa menettänyttä entistä sirkustaiteilijaa, joka palaa sirkuksen pariin samoihin aikoihin, kun Dumbokin ilmestyy kuvioihin. Farrell on mainio näyttelijä, mutta häntä vaivaa sama ongelma kuin Greeniä, eli laiskasti kirjoitettu hahmo. Holt on tylsä tyyppi ja se paistaa läpi Farrellin innottomasta roolityöstä. Holtin lapsia, Millyä ja Joeta esittävät Nico Parker ja Finley Hobbins tarjoavat energiaa, mutteivät ole näyttelijöinä vielä kaksisia. Joe-pojalle ei ole keksitty mitään sisältöä, mutta Millyn ohessa hänkin innostuu tietty lentävästä norsusta. Milly noudattaa Disneyn uutta kaavaa nuorten naispäähahmojen kanssa ja on jostain syystä äärettömän kiinnostunut tieteestä ja keksinnöistä. Ja voin kyllä puhua kaavasta, kun samanlaisia naishahmoja on nyt nähty Disneyn uusissa leffoissa Beauty and the Beast - Kaunotar ja hirviö, Pirates of the Caribbean: Salazar's Revenge (Pirates of the Caribbean: Dead Men Tell No Tales - 2017), Hyppy ajassa (A Wrinkle in Time - 2018) ja Pähkinänsärkijä ja neljä valtakuntaa (The Nutcracker and the Four Realms - 2018), mitkä ovat kaikki ilmestyneet alle kolmen vuoden sisällä.      Elokuvassa nähdään myös esimerkiksi DeObia Oparei, Sharon Rooney ja Roshan Seth sirkuksen erilaisina kummajaisina, Joseph Gatt Vandeveren kätyrinä ja Alan Arkin arvokkaana pankkiirina.     Disneyn piirrosklassikoiden uudelleenfilmatisoinnit ovat herättäneet todella ristiriitaisia tunteita, vaikka ne ovatkin lippuluukuilla tienanneet todella hyvin (uusi Kaunotar ja hirviö tuotti reippaasti yli miljardi dollaria). Leffojen tarpeellisuudesta on väitelty, ovathan alkuperäiset tosiaan kehuttuja elokuvahistorian merkkiteoksia. Itse pidin esimerkiksi uutta Viidakkokirjaa alkuperäistä parempana, mutta vaikka pidinkin uutta Kaunotar ja hirviötä mainiona fantasiasatuna, sen kohdalla oli päivänselvää, että pienistä muutoksista huolimatta elokuva oli lähes kuva kuvalta uusittu versio alkuperäisestä, muttei kuitenkaan ollut millään osa-alueella vanhaa parempi. Dumbossa odotinkin juuri sitä, että tarina on rustattu kokonaan uudestaan ja vain pohjaidea on säilytetty. Tämä ratkaisu on ymmärrettävää siinä mielessä, että alkuperäinen Dumbo kestää vain muutaman minuutin yli tunnin ja tästä piti tietty vääntää liki kahden tunnin teos... vaikka väkisin. Tavallaan elokuvan ensimmäiset kolme varttia kulkevat vanhoja tuttuja polkuja, mutta siinä missä alkuperäinen leffa huipentui siihen, kun Dumbo osoitti osaavansa lentää, tämä elokuva tuntuu vasta siinä kohtaa lähtevän liikkeelle.  Alkuperäisestä klassikosta on tietty otettu mukaan pari ikimuistoisinta kohtaa: tanssivat vaaleanpunaiset elefantit ja sydäntärikkovan surullinen "Baby Mine" -kohtaus. Pinkit norsut täytyi tällä kertaa tietty johtua jostain muusta kuin nimikkohahmon ryyppyretkestä ja tässä kohtaus on yksi filmin vaikuttavimmista. Valitettavasti samaa ei todellakaan voi sanoa "Baby Mine" -kohtauksesta. Se tuntuu siltä kuin tekijät olisivat miettineet, että "kai tämä nyt on pakko saada mukaan" ja lopputulos jättää paljon toivomisen varaan - etenkin kun kohtaus tulee liian aikaisin leffassa, jolloin katsoja ei ole vielä onnistunut luomaan tarvittavaa tunnesidettä filmiin ja hahmoihin. Dumboa itseään lukuunottamatta tunnesidettä ei synny koko loppuleffankaan aikana, ihmishahmojen ollessa niin mitäänsanomattomia ja elokuvan ollessa lopulta vain harmillisen tyhjänpäiväinen ja keskinkertainen päivitys rakastetusta klassikosta. Uutta tuodaan kyllä pöytään ja paljonkin, mutta mikään siitä ei herätä erityistä mielenkiintoa, eikä esimerkiksi suuri loppuhuipennus onnistu säväyttämään millään lailla. Dumbossa olisi ainekset erittäin mainioon, sydämelliseen, ihastuttavaan ja taianomaiseen seikkailuun, mutta nyt se on lähinnä täysin unohdettava ja itse asiassa jopa aika tylsä.     Yksi elokuvan isoimmista pettymyksen aiheista on se, että kyseessä on Tim Burtonin elokuva, eikä leffa silti onnistu säväyttämään. Burtonin omaperäisyys ei pääse esille elokuvan aikana ja kyseessä onkin yksi hänen maltillisimmista töistään. Tämä on niinkin maltillinen, että Dumbo voisi ihan hyvin olla jonkun täysin tuntemattoman tekijän tekele. Se vasta onkin surullista, kun ottaa huomioon, että Burton omaa niin vahvan tyylin, että vähänkin elokuvantekijöistä tietävä tunnistaa elokuvat, kuten aiemmin mainitut Batmanit, Beetlejuicen, sekä vaikkapa Saksikäsi Edwardin (Edward Scissorhands - 1990) jo pelkän kuvan perusteella hänen filmeikseen. Ehren Krugerin käsikirjoituksessakaan ei ole kehumista ja on outoa, että Kruger keskittyy näin paljon ihmishahmoihin, vaikkei ole selvästi kiinnostunut panostamaan näihin persooniin. Leffa kaipaisi myös tiivistämistä, noin kymmenestä minuutista varttiin, minkä olisi voinut tehdä käsikirjoitus- tai viimeistään leikkausvaiheessa. Visuaalisesti Dumbo on kuitenkin näyttävä teos - onhan kyseessä isolla rahalla tehty Disney-tuotanto. Häikäisevän fotorealistisen Dumbon lisäksi elokuva on muutenkin täynnä upeita tehosteita, taidokasta kuvausta, hienoja lavasteita, tyylikkäistä pukuja ja veikeitä maskeerauksia. Äänimaailmakin on erinomaisesti rakennettu äänitehosteista Burtonin luottosäveltäjä Danny Elfmanin säveltämiin musiikkeihin.  Yhteenveto: Dumbo on harmillisen keskinkertainen tekele, minkä olisi pitänyt olla huomattavasti parempi hienon lähdemateriaalinsa ja osaavien tekijöidensä takia. Esimerkiksi Tim Burtonin ohjaus on surullisen vaisua, eikä hän pääse koskaan vauhtiin leffan kanssa. On hienoa, ettei elokuva kopioi alkuperäistä piirrettyä kuva kuvalta, vaan lainailee vain tietyt asiat ja rakentaa uuden tarinan mukaan, mutta valitettavasti uudet jutut eivät herätä kovinkaan suurta mielenkiintoa. Yksi isoimmista ongelmista on, kuinka paljon filmi keskittyy sen todella tylsiin ihmishahmoihin. Hahmojen näyttelijätkin ovat tainneet huomata hahmojen mitäänsanomattomuuden ja se ilmenee heidän roolitöissään joko ylinäyttelemisenä tai innottomuutena koko projektia kohtaan. Tämän elokuvan "Baby Mine" -hetkessä surullisinta on lähinnä, kuinka kömpelösti se on tungettu mukaan. Itse Dumbo-norsu on ehdottomasti elokuvan parasta antia kaikessa suloisuudessaan ja ihanuudessaan. Elokuva onnistuu myös nostamaan ihon kananlihalle pariinkin otteeseen, kun elefantti ampaisee lentoon. Visuaalisesti filmi on tietty näyttävä, vaikka siitä tuntuukin puuttuvan Burtonin persoonallinen ote. Loppujen lopuksi Dumbo aiheutti itselleni ison pettymyksen ja pisti tosissaan miettimään, pitäisikö ne vanhat klassikot jättää sittenkin rauhaan? Noh, tänä vuonna ilmestyvät vielä uudet versiot Disneyn piirretyistä Aladdin (1992) ja Leijonakuningas (The Lion King - 1994). Jännityksellä jään odottamaan, miten noiden elokuvien kanssa käy - etenkin kun jälkimmäinen on ehdoton suosikkini yhtiön tuotannosta...     Kirjoittanut: Joonatan Porras, 1.4.2019 Lähteet: elokuvan tiedot www.imdb.com, www.en.wikipedia.org ja elokuvan juliste www.impawards.com Dumbo, 2019, Walt Disney Pictures, Tim Burton Productions, Infinite Detective, Secret Machine Entertainment, MPC</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links><link>https://4.bp.blogspot.com/-wqXE7j19E1E/XHmM5QudBdI/AAAAAAAAJsY/PfQCal6KshYJspj3qGZPFY-s6QTqSri6gCLcBGAs/s1600/Dumbo.jpg</link><link>https://3.bp.blogspot.com/-cOewar0pEK8/XKDMl04nhmI/AAAAAAAAKPU/oVAZ_dWyj9sD1rAHT-4FCNYh1D4fExRKgCLcBGAs/s1600/dumbo1.jpg</link><link>https://3.bp.blogspot.com/-rLsy97tCbL8/XKDMl0Tua0I/AAAAAAAAKPQ/Rtg_zhW-LHswevSLRwQ0EduMnPXl59tbgCLcBGAs/s1600/dumbo2.jpg</link><link>https://2.bp.blogspot.com/-kkkxxYDtxBs/XKDMluoJWWI/AAAAAAAAKPM/J3SRR6WqxtUmRB7Xz9SXEmwDpwpRRmrGACLcBGAs/s1600/dumbo3.jpg</link><link>https://1.bp.blogspot.com/-LSNFfQzK2L0/XKC2-FCurVI/AAAAAAAAKPA/qpxaKxnToEotN9Z9H0es8vl2oGwXtZ3bACLcBGAs/s1600/5_10.jpg</link></links><tags><tag>2019</tag><tag>Alan Arkin</tag><tag>Colin Farrell</tag><tag>Danny DeVito</tag><tag>DeObia Oparei</tag><tag>Eva Green</tag><tag>fantasia</tag><tag>Finley Hobbins</tag><tag>Joseph Gatt</tag><tag>Michael Keaton</tag><tag>Nico Parker</tag><tag>Roshan Seth</tag><tag>Sharon Rooney</tag><tag>Tim Burton</tag><tag>Walt Disney</tag></tags><images /><indexedAt>2019-04-02T08:23:40Z</indexedAt><publishedAt>2019-04-02T07:00:00Z</publishedAt><reindexedAt>2019-04-02T08:23:40Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>12089422554777687495</blogId><blogName>Elokuvan taikaa</blogName><blogUrl>https://elokuvantaikaa.blogspot.com/</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>3683133244117067304</id><author>Maktab-e- Hussain</author><url>http://payghaam-e-hussain.blogspot.com/2019/04/fox-news-bride-demands-more-money-after.html</url><title>FOX NEWS: Bride demands more money after guest gives her ‘miserly gift’</title><text>Bride demands more money after guest gives her ‘miserly gift’</text><languageCode>da</languageCode><locationCode>de</locationCode><coordinates /><links /><tags><tag>خبریں،نیوز،تازہ خبریں</tag></tags><images /><indexedAt>2019-04-02T08:24:06Z</indexedAt><publishedAt>2019-04-02T07:52:00Z</publishedAt><reindexedAt>2019-04-02T08:24:06Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>16136069159037065075</blogId><blogName>Labbaik Ya Hussain (as)</blogName><blogUrl>http://payghaam-e-hussain.blogspot.com</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>2581869503234809575</id><author>emiliaveronikan</author><url>http://emiliaveronikan.fi/nain-syntyy-muhkeat-banskupannarit---rec-35750215</url><title>NÄIN SYNTYY MUHKEAT BANSKUPANNARIT - RECIPE FOR FLUFFY BANANA PANCAKES</title><text>T A R V I T S E T (2 annosta)   2 kpl banaania 2 kpl kananmunia 1/2 dl gl. jauhoja 1 dl kaurahiutaleita 1 tl leivinjauhetta loraus kauramaitoa 2 rkl maapähkinävoita kardemummaa kanelia vaniljasokeria    Sitten vaan ainekset blenderiin ja blenderi surraamaan. Paistamisessa käytin Bionan kookosöljyä, ja laitoin sitä jo itseasiassa taikinan sekaan.  Päälle laitoin tällä kertaa hunajaa, mysliä tummalla suklaalla ja mustikoita.   NAM!           FLUFFY BANANA PANCAKES for two   you need:   2 x bananas 2 x eggs 1/2 dl of gluten-free flour 1 dl of oatmeal 1 tsp of baking powder dollop of oatmilk 2 tbsp of peanut butter   for seasoning:   cardamom cinnamon vanilja   Throw all the ingredients into a blender and mix. Best for frying is coconut oil, I always use it cause it makes a crispy surface for pancakes. Finish with honey, muesli or berries! However you like!    YUMMYY!       Vitsi, kunpa olisi enemmän aikaa ja intohimoa jakaa teille tällasia simppeleitä reseptejä! Tai olisipa ylipäätään aikaa kehitellä omia reseptejä, se kun ei ainakaan mulle oo mikään puolentunnin juttu. Tää oli tehty vähän mututuntumalla, koska mun leipominen ja ruuanlaitto on luokkaa, - sovella ja seikkaile. Eli siis jos menee ihan päin mäntyä, niin valituksia voi vaikka laittaa sähköpostiin, tai ei, ei sittenkään. Valituksia ei oteta vastaan, haha! Jos kuitenkin päädyt tekee näitä niin tägää vaikka #empanreseptit, jotta nään millaisia tuotoksia syntyy. Onneksi tää resepti on sellainen, jota voi oikeasti soveltaa ihan mielinmäärin ja lisäillä omiaan sen verran kuin tykkää, ja mikä parasta - takuulla helppoa ja hyvää!     ♥ emilia</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links><link>https://www.nouw.com/tags/empanreseptit/1470858</link><link>https://www.nouw.com/tags/empanreseptit/1470858</link><link>https://www.nouw.com/tags/empanreseptit/1470858</link></links><tags><tag>lifestyle</tag><tag>food</tag></tags><images /><indexedAt>2019-04-02T08:24:09Z</indexedAt><publishedAt>2019-04-02T08:23:59Z</publishedAt><reindexedAt>2019-04-02T08:24:09Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2967319869871289676</blogId><blogName>emiliaveronikan</blogName><blogUrl>http://emiliaveronikan.fi</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>15470160569556509172</id><author>rere</author><url>http://kirjavarasrere.blogspot.com/2019/04/giovanni-guareschi-isa-camillon-kyla.html</url><title>Giovanni Guareschi: Isä Camillon kylä</title><text>Alkuteos: Mondo piccolo &gt;&gt;Don Camillo&gt;&gt; (1948) Kääntäjä: Helka HiiskuKuvittaja: Giovanni GuareschiIlmestymisaika: 1980 (ko.painos)Sivumäärä: 273Kustantaja: WSOYISBN: 951-0-01657-8Muoto: Nid.Sarjamerkintä: Isä Camillo #1 / WSOY Taskukirja #22Peukku: q^^Huom: suomennettu lyhentäenLukuhaaste 2019: 50. Kirjaston henkilökunnan suosittelema kirja (34/50)Sopisi lukuhaasteeseen ainakin: 1, 2, 16 ja 18Lukulistalta: 15  *Isä Camillo - pienen italialaisen kylän kookas pappi ja laumansa riuskaotteinen kaitsija - on valloittanut koko maailman. Kiivaana, mutta silti kaikessa ystävyydessä käy taistelu Isä Camillon ja hänen vastustajansa, puoluejohtaja Pepponen välillä.*    Kirja koostuu pienistä tarinoista, jotka ovat toisaalta yksittäisiä tapauksia, toisaalta taas liittyvät toisiinsa hyvinkin läheisesti. Pienessä kylässä kun eletään ja kaikki vaikuttaa silloin luonnollisestikin kaikkeen. Tarinat ovat nopealukuisia ja niissä on huumoria. Tosin uskon, että osa huumorista ja tarinoiden piilomerkityksistä aukeaa paremmin jos tuntee kirjan tapahtuma-aikojen historiaa ja poliittista tilannetta.  Isä Camillo ystävineen on sympaattinen ja lähestyttävä hahmo. Pappi ei aina ole kovin pappimainen vaan saa monesti moitetta käytöksestään. Kirjassa esiintyvä Kristus-hahmo on oikein hyvä tuomari.</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links><link>https://2.bp.blogspot.com/-IiIP-zQlBGA/XHlO9Vgm91I/AAAAAAAAIhk/Gww3PtlzYwAB0qwCni8ZELWiyhTyrcMbACLcBGAs/s1600/camillo.jpg</link><link>http://www.helmet.fi/fi-FI/Tapahtumat_ja_vinkit/Uutispalat/Helmetlukuhaaste_2019(173868)</link></links><tags><tag>aikuiset</tag><tag>eurooppalaiset kirjailijat</tag><tag>italialaiset kirjailijat</tag></tags><images /><indexedAt>2019-04-02T08:24:18Z</indexedAt><publishedAt>2019-04-02T05:30:00Z</publishedAt><reindexedAt>2019-04-02T08:24:18Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>10016958654636189679</blogId><blogName>Kirjavaras Rere</blogName><blogUrl>http://kirjavarasrere.blogspot.com</blogUrl><blogRank>3</blogRank><authority>21</authority></post><post><id>15864132322407460576</id><author>FFRN</author><url>http://fnordstrom.se/month-update-35750510</url><title>MONTH UPDATE</title><text>Satt i morse och tänkte skriva till syrran att vi måste planera resan, vilka dagar vi ska göra si och så på osv, men sen insåg jag att det är 37dagar kvar och att det kanske inte direkt är någon brådska med det haha. Jag är ju sån så när jag bokat något så måste det hända nu, jag får verkligen hindra mig själv till att inte börja packa än (har små packat hudvården hehe) *Går in och kollar i kalendern* jösses vad grejer som är inplanerade denna månaden, ja för mig så är det mycket då min kalender bara brukar bestå av jobbtider... Denna veckan så ha jag:  upplärning på Lyko en intervju inom kommunen  Jobbar hela helgen på mitt ''första jobb'' nästa vecka har jag inte fått se schemat ännu men veckan efter det så är det påsk och jag fyller 25år på påskdagen, blir kalas och min stora syster kommer hit några dagar. Veckan därpå så börjar jag en utbildning sen åker vi till Chicago!  Ja ni ser tiden kommer gå så himla snabbt (kanske bäst att jag tar och börjar packa ändå eller vad säger ni haha!) Behövde skriva av mig lite på denna tisdags morgonen innan första dagen på Lyko känner jag, kommer alltid så mycket tankar när jag är nervös haha.  Gillar ni att läsa personliga inlägg mellan skönhetstipsen? eller är det tråk? ska jag skriva mer eller mindre? let me know!</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>My glam life</tag></tags><images /><indexedAt>2019-04-02T08:24:25Z</indexedAt><publishedAt>2019-04-02T08:24:04Z</publishedAt><reindexedAt>2019-04-02T08:24:25Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14631201234577089276</blogId><blogName>Fnordstrom</blogName><blogUrl>http://fnordstrom.se</blogUrl><blogRank>1</blogRank><authority>4</authority></post><post><id>16980317688464063172</id><author>lflv</author><url>https://xhaimera.wordpress.com/2019/03/31/flavamal-xxix/</url><title>Flavamal XXIX</title><text>”Gräsrötter återfinns gemenligen under jord. Syns de för ofta och gärna, anta att någon lagt ut en särdeles välplanterad astroturfmatta.” – Leo Flavum Annonser</text><languageCode>sv</languageCode><locationCode /><coordinates /><links /><tags><tag>Flavamal</tag></tags><images /><indexedAt>2019-04-02T08:24:42Z</indexedAt><publishedAt>2019-03-31T09:44:19Z</publishedAt><reindexedAt>2019-04-02T08:24:42Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14153777908537149022</blogId><blogName>Flavums Kabinett</blogName><blogUrl>https://xhaimera.wordpress.com</blogUrl><blogRank>2</blogRank><authority>10</authority></post><post><id>6868010128020420075</id><author>whatscookinganita</author><url>https://whatscookinganita.wordpress.com/2019/03/29/sjokreps-med-urtesmor/</url><title>Sjøkreps med Urtesmør</title><text>Sjøkreps smaker helt nydelig! 
Ingredienser: 
8 sjøkreps (kokte) 
100 g godt smør 
2 fedd hvitløk revet 
1/2 sitron saft 
1 ss revet sitron skall 
2 ss finhakket persille 
Salt og pepper 
Del sjøkrepsen i to rett under hodet, Fjern paven, som sitter helt fremst i hodet. Brett halene ut. Bland mykt smør med persille, sitronskall , salt, pepper og hvitløk. Fordel urte smøret over halene og gratiner i ovnen i ca seks minutter på 200 grader. 
Server omgående med nystekt brød! 
Hvis du griller på grill i hagen kan det lønne seg å grille først lynraskt med snittflaten ned, og så snu og grille ferdig, og ha på urtesmøret til slutt. 
Får du tak i levende sjøkreps bør du koke de først. Kok i ca. 30 sekunder i saltet vann og avkjøl deretter i iskaldt vann. De må også stekes litt lengre, til krepsekjøttet blir hvitt og fast.</text><languageCode>no</languageCode><locationCode /><coordinates /><links /><tags><tag>forrett</tag><tag>Sjømat</tag><tag>grillet kreps</tag><tag>Kreps</tag><tag>kreps med urtesmør</tag><tag>marinert kreps</tag><tag>sjøkreps</tag></tags><images /><indexedAt>2019-04-02T08:24:49Z</indexedAt><publishedAt>2019-03-29T22:07:41Z</publishedAt><reindexedAt>2019-04-02T08:24:49Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>12837371326565007455</blogId><blogName>WhatsCookingAnita</blogName><blogUrl>https://whatscookinganita.wordpress.com</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>9759671967887284841</id><author>orleansmarket</author><url>https://dognewsweb.wordpress.com/2019/04/02/realnobakhtahad-nataliyavf-smart-dog%f0%9f%91%8d%f0%9f%98%98-pets-dogs-dogfriends-doglovers/</url><title>@RealNobakhtAhad: @NataliyaVF #Smart #Dog</title><text>from http://twitter.com/RealNobakhtAhad 
via IFTTT</text><languageCode>no</languageCode><locationCode>jp</locationCode><coordinates /><links><link>http://www.twitter.com/RealNobakhtAhad</link><link>https://www.ifttt.com/?ref=da&amp;site=wordpress</link></links><tags><tag>Uncategorized</tag></tags><images /><indexedAt>2019-04-02T08:24:50Z</indexedAt><publishedAt>2019-04-02T07:39:15Z</publishedAt><reindexedAt>2019-04-02T08:24:50Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2260256069123272387</blogId><blogName>OrleansNews – Keeping you updated on what's happening in DogDom</blogName><blogUrl>https://dognewsweb.wordpress.com</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>15729286922021902913</id><author>noreply@blogger.com (Kaisa Kyläkoski)</author><url>http://sukututkijanloppuvuosi.blogspot.com/2019/04/pappien-moninaiset-muistikirjat.html</url><title>Pappien moninaiset muistikirjat</title><text>Yhtenä päälöydöksenä Kansalliskirjaston käsikirjoituskokoelmiin kohdistamastani haravoinnista voi pitää sitä, että 1700-luvun papeilla oli muistikirjoja. Monenlaisia muistikirjoja, joten tuskin kaikilla kaikenlaisia. (Erojahan on seurakuntienkin kirjojen pidossa.)  Muistiin kirjoitettiin pidettyjä saarnoja, niihin mahdollisesti sopivia faktoja tai ihan mitä tahansa ja sen jälkeen viranhoitoon liittyvää.  Näitä tiukemmin viranhoitoon tai pikemminkin siitä korvauksen saamiseen liittyy Ilmajoella, Kauhajoella, Kurikassa, Jalasjärvellä ja Alavuudella käytetty vihkonen (C IV 9 Anteckningar om kyrkliga afgifter i församlingar i Österbotten under 1700-talet), jonka alkuun on listattu papeille kuuluvat maksut ja loppusivuilla on taulukkoina kerätyt maksut. Tilat ovat saaneet oman aukeamansa, tilattomilta kerättiin vähemmän ja heidät merkittiin kevyemmin.  Vaikeampiselkoisempi oli D IV 49, jossa oli kyllä otsikko Annotations Cladd öfwer the Creatur, som för Inbyggarne uti Tervola Capell församling stört... (1759-65). Jotain eläinluovutuksia? Esimerkkiaukeamissa selvää ainakin isäntien puumerkit, joiden alueen tutkijoita luulisi kiinnostavan.</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links><link>https://sukututkijanloppuvuosi.blogspot.com/2019/01/rengon-papin-puheet-kihlajaisissa-ja.html</link><link>https://sukututkijanloppuvuosi.blogspot.com/2019/02/tiedonkulku-pohjanmaalle-1700-luvun.html</link><link>https://sukututkijanloppuvuosi.blogspot.com/2019/01/nils-peter-holmstromin-muistiinpanoista.html</link><link>https://4.bp.blogspot.com/-1bgYyyCNqPA/XGZR1MR2ORI/AAAAAAAAn8Y/J3YO15Y5BBQ6QQT8e97ul-OvbZCfAK9SQCLcBGAs/s1600/_20190128_121414.JPG</link><link>https://4.bp.blogspot.com/-AFPcFo8B-3U/XGZVT2Y1QQI/AAAAAAAAn88/utf_qyoGI1UK7BJr-G7g_2XgWuLXzMl0QCLcBGAs/s1600/_20190215_075555.JPG</link><link>https://3.bp.blogspot.com/-oQbOetcbKM0/XGZVT22yxDI/AAAAAAAAn84/3_UptSw2ksYdFvTJ4tH7OfVWPo8qAGbAgCLcBGAs/s1600/_20190215_075631.JPG</link></links><tags><tag>1700-luku</tag><tag>Kansalliskirjaston käsikirjoituskokoelmat</tag></tags><images /><indexedAt>2019-04-02T08:25:02Z</indexedAt><publishedAt>2019-04-02T04:00:00Z</publishedAt><reindexedAt>2019-04-02T08:25:02Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>16100642575596936688</blogId><blogName>Sukututkijan loppuvuosi</blogName><blogUrl>http://sukututkijanloppuvuosi.blogspot.com</blogUrl><blogRank>6</blogRank><authority>106</authority></post><post><id>7996886563029204371</id><author>Investeraren</author><url>http://investera-pengar.blogspot.com/2019/04/att-handla-ipo-s.html</url><title>Att handla ipo : s</title><text>Innehåller reklam och annonslänkar. Om du handlar ipos: så kan det absolut vara värt att ta en titt på nedan utmärkta video från SMB Capital. Själv handlar jag gärna vid en ipo. Bland annat av den anledningen att det ger en god anledning att läsa på och lära sig om ett bolag, för att sedan vara med från början i deras börshistoria. I början är det ofta inte så många som följer mindre bolag, speciellt idag, och som vi alla vet har alla stora bolag en gång varit små... </text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>https://click.adrecord.com/?c=25799&amp;p=970&amp;g=21759</link></links><tags><tag>strategi</tag><tag>trading</tag></tags><images /><indexedAt>2019-04-02T08:25:03Z</indexedAt><publishedAt>2019-04-02T06:00:00Z</publishedAt><reindexedAt>2019-04-02T08:25:03Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>15717059183268498900</blogId><blogName>Investera-pengar</blogName><blogUrl>http://investera-pengar.blogspot.com</blogUrl><blogRank>3</blogRank><authority>60</authority></post><post><id>322488330169310818</id><author>CirkusKarin</author><url>https://nouw.com/cirkuskarin/vanliga-klader-35750591</url><title>Vanliga kläder.</title><text>Yes, veckans utmaning 5/7 dagar så ska jag klä mig i ”vanliga” kläder. Lever jag i träningskläder? Det gör jag och jag älskar det. Igår var det på gränsen men min syster godkände min mjuka outfit men ”vanliga”. Det var svarta tights och en stickad tröja.  Men... idag då är det kostymbyxa, t-shirt och en linne kavaj som klär min kropp.  Kväll ska jag och Walter se föreställningen ”Bloom” på södra teatern.  Men innan dess så ska jag käka lunch, bege mig mot träningslokalen för att träna/repa med Carlotta.  Ha en fin dag! Kram.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:25:04Z</indexedAt><publishedAt>2019-04-02T08:24:51Z</publishedAt><reindexedAt>2019-04-02T08:25:04Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>6889573982104152452</blogId><blogName>CirkusKarin blogg</blogName><blogUrl>https://nouw.com/cirkuskarin</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>16730278456642628433</id><author>Katja/Optimismiajaenergiaa</author><url>https://optimismiajaenergiaa.fi/2019/04/02/paniikkihairio-ja-24-muuta-totuutta-elamasta/</url><title>Paniikkihäiriö ja 24 muuta totuutta elämästä</title><text>Kun jokin aika sitten bongasin nämä 24 kysymystä Marjon blogista, mietin että onpa kiva haaste. Ei minua kukaan haastanut, nappasin itse itselleni ja ajattelin vastata järkevästi ja rauhallisesti kuten Marjo. Kuulin jo hänen rauhallisen ja matalan äänensäkin korvissani. Aloin sitten läppäri sauhuten näpytellä ja ihan hirveän vaikeita kysymyksiä, joihin tuli ihan villit, mutta itseni näköiset kysymykset. Olisiko sinun helppo vastata näihin 24 kysymykseen elämästä? Jaksatko lukea nämä loppuun asti, avasin ehkä ekaa kertaa asiaa paniikkikin. Sit mennään! 
Mitä rakastat? 
Perhettäni (sen laajassa merkityksessä), liikuntaa, höttöleipää, smoothieita, irtokarkkeja, hiekkaa varpaiden välissä, meren kohinaa, auringonlaskuja. 
Missä olet tosi hyvä? 
On aina ihan järkyttävän vaikeaa sanoa mitään hyvää itsestään. Mutta. Organisointikykyni on hyvä ja pystyn yhtä aikaa miettimään viikonlopun ruoat, kirjoittamaan yhden blogipostauksen, laittamaan toisella kädellä pyykit kuivamaan ja nappaamaan tilanteesta vielä muutaman kuvan ja Instastoriesin. Okei, noin liiotellusti, mutta teen sataa asiaa yhtä aikaa, en lähes koskaan unohda mitään ja harvemmin teen asioita myöskään viime tipassa. 
  
Mikä tai kuka saa sydämesi lyömään nopeammin? 
Haha, paniikki. Ei oikeasti naurata yhtään, mutta näin se on. Paniikki, joka kun kerran iskee, sitä alkaa pelätä ja kierre on valmis. Sain ensimmäisen paniikkihepulini ihan tyhjästä häämatkalla viimeisellä pitkällä lennolla 14 vuotta sitten ja siitä asti olen ahdistunut lentämisestä. Metrossa sain paniikin Englannissa asuessa ja olen parhaani mukaan vältellyt metroja sen jälkeen, kauhistus oli matkata esimerkiksi Brooklyniin metrolla Jenkkilässä. Veden ali yök! Suljetut tilat ahdistavat niin, että naurattaa (tai oikeastaan itkettää kun mietin syytä), kun lapseni valitsevat reippaina portaat hissin sijaan. Ovat tottuneet äitinsä kanssa siihen. Moni luulee, että olen niin liikuntahörhö, että juoksen siksi aina portaissa, enkä monesti oikaise tätä harhaluuloa. Tai no, se on osa totuutta toki. Paniikki on hirveä olotila, joka välillä menee pois, välillä lyö ihan puskista ja kovaa. Siihen vaikuttaa selkeästi unen määrä, alkoholi, stressi ja kuinka kuormittunut on, myös alhainen hemoglobiini sai selkeästi paniikit palaamaan tiheämmin. 
Mikä tai kuka saa sinusta parhaat puolet esiin? 
Liikunta. Olen lähes aina onnellinen, hyvällä tuulella ja höpötän liikuttuani. Sanoisin myös, että lapseni, mutta toisaalta kyllä kaivavat minusta myös ne pahimmat puoleni esiin. 
Mitä haluaisit oppia? 
Olemaan aloillani joskus. Pääsemään sellaiseen tyytyväiseen zen-tilaan edes sekuntiksi. 
Mistä haluaisit tietää lisää? 
Minä en ole mikään tietokirjojen ahmija, mutta saan päivittäin tietää lisää ihan vaikka mistä kiitos mieheni. Ainoa vaan, että hänen selityksensä ovat niin yksityiskohtaisia ja pitkiä, että harvoin muistan miten se homma menikään. Uusimpana esimerkkinä vedenkeittimemme, jossa on lämpötilan säätö ja jonka myötä sain kuulla paljonko faasimuutokset vievät sähköä ja tämä keitin säästää. Tai jotain. 
Onko sillä väliä viiden vuoden päästä? 
Faasimuutoksella ja sähkönsäästämisellä? No on varmasti, kyllä sähköä kannattaa säästää! 
Mitkä unelmasi olet saavuttanut? 
Unelmoin pienenä omasta hevosesta ja sen sain, tosin kaverini kanssa omistimme hänet puoliksi, mutta kuitenkin! Unelmoin myös aika nuorena perheestä, joka sekin on ”saavutettu”. Kumma ajatella perhettä saavutuksena, ajattelen enemmänkin siunauksena. En oikeastaan koskaan unelmoinut esimerkiksi ulkomailla asumisesta ennen kuin sen tein, nyt haaveilen siitä jatkuvasti. Tai en unelmoinut sukeltavani vapaapäivinä meressä, ajavani moottoripyöräkortin jajaja… Asiat vähän tupsahtavat eteen ja jälkikäteen mietin että wau hei miten siistiä sekin oli. Että tosta haaveilisin jos haaveilisin, mutta en ehtinyt, se tapahtui jo (joku muuten toivoi sunnuntain postauksessa haavepostausta, tässä siihen vähän jo vastaus, en osaa tai uskalla haaveilla!) 
Missä tilanteessa / millainen olit vuosi sitten? Entä viisi vuotta sitten? (Olet varmasti mennyt eteenpäin, vaikkei siltä aina tunnu.) 
Vuosi sitten oli tosi ihana pääsiäinen, vaikka sairasteltiinkin. Oli vielä täysi talvi, oltiin rinteessä ja hiihtoladulla. Huhtikuun eka viikonloppu oltiin kaksin miehen kanssa Köpiksessä, jossa oli lähes 20 astetta lämmintä lähtöpäivänä ja yks kaks ihan täys kevät! Olin kyllä varmasti hyvin samanlainen kuin nyt, päälläni oli Köpiksessä samat arskat ja takki kuin eilen. Väsytti ja anemia yritti kai kertoa itsestään, en kuunnellut. 
Viisi vuotta sitten olikin vähän eri fiilikset. Olimme juuri juhlineet tyttären 1-vuotiskemuja väliaikaisasunnossa, oma koti oli vielä aika palasina ja oikeustaisto päällä. Että siitä on kyllä menty eteenpäin. 
Mikä on sinulle todella tärkeää? 
Läheiset ihmiset, terveys ja liikunta. Minulle on hyvin tärkeää esimerkiksi lähettää lahja lähipiirille syntymäpäivinä, muistaa heitä nimipäivänä ja näin osoittaa, että välitän. 
Mitä tekisit, jos et voisi epäonnistua? 
No vaikka mitä! Menisin lumilaudalla kunnon hyppyriin ja tulisin hallitusti alas, kun en epäonnistuisi ja lentäisi miten sattuu. Noin niin kuin esimerkiksi. Ottaisin perheeni ja perustaisin johonkin pienen bed and breakfastin, jos siinä ei voisi taloudellisesti epäonnistua. 
Kenen mielestä olet kaunis? 
Mieheni kyllä sanoo usein että olen. Kiitos siitä hänelle. Lasten kanssa heilun niin paljon meikittä ja verkkareissa, että kun laittauduin viime viikolla, molemmat sanoivat ääneen wau äiti sä olet tosi upea. &lt;3 En ole klassisen kaunis ja olen enemmän aina halunnut niin hiuksissa kuin pukeutumisessa muuten olla persoonallinen kuin klassisen tyylikäs. Sitten aina ihailen heitä, jotka ovat upeita ja tyylikkäitä. 
Kuka rakastaa sinua? 
Perheeni. Olen ollut ihan hirviö esimerkiksi vanhempiani kohtaan ajoittain, mutta kyllä ne vaan rakastaa silti. Tuli mieleen, kun keskusteltiin 6-vuotiaan kanssa viikonloppuna siitä, että nyt on aika tulla kotiin. Hän jupisi, että menee kyllä jos tahtoo ja minä siinä posmotin, että et muuten mene. Mietin, että olin juuri 13-vuotias ja karkasin ikkunasta kaverin synttäreille, mihin oli kielletty menemästä edellisten mokailujen vuoksi. Mietin, että minähän menen jos tahdon vaikka ikkunasta kun vahtivat vain ovea! Oi voi, kohta on oma vuoro kokea tätä. Rakastavat silti. 
Miten muuttaisit maailmaa, jos kaikki olisi mahdollista? 
Poistaisin välinpitämättömyyden. Ärsyttää ihan hirveästi, kun yritän jutella ilmastonmuutoksesta, päästöistä ja muovista meressä ja todella useasti on vastapuolella ”ei minun valinnoillani ole merkitystä”-asenne. Olimme kaupassa muutama viikko sitten ja teinipojat, jotka ostivat isossa pussissa yhdet pasteijat heittivät ne suoraan maahan kaupan eteen. Mieheni tapansa mukaan kimpaantui ja sanoi asiasta pojille ja kuulimme pitkään perään jotain ilmastonmuutos ylimielisyys naurua. Raivostuttaa välinpitämättömyys. Thaimaassa asuessa luulin tulevani hulluksi, kun yritin kyttiä, etteivät ihmiset heitä tupakantumppia mereen. Se on muovisaaste perkule se tumppi. No niin, hermostuin jo tätä kirjoittaessa. 
Miksi sinut kannattaa tuntea? 
Apua, no en kyllä todellakaan tiedä. Minulla ei ole hyviä juttuja tai parhaita leivoinnaisia kyläilijöille, olen lähinnä vähän levoton tyyppi. Koska olen hyvää höpötysseuraa ja ystävinäni pitämiä ihmisiä kohtaan hyvin uskollinen ja luotettava? 
  mekko VILA/ neule ONLY/ housut KATRI NISKANEN/ kengät DR.MARTENS/ korvikset H&amp;M/ rannekorut SYSTER P (saatu) 
Milloin viimeksi teit jotain uutta? 
Tänä vuonna olin ainakin poroajelulla ja hei melkein menin avantoon, puoliksi menin! 
Kohteletko muita kuten toivoisit itseäsi kohdeltavan? 
Yritän, muttei se tietenkään aina onnistu. Olen aika äkkipikainen ja hyvä loukkaantumaan, eikä se ole mikään hyvä piirre. Otan liian helposta itseeni ja mieheni usein muistuttelee, ettei se välttämättä nyt mitenkään johtunut sinusta, että toinen sanoi noin, kun vatvon kotona että apua, miksi se noin sanoi. Olen kauhean epävarma itsestäni ja se heijastuu ihmissuhteisiin, kun liikaa mietiskelen toisen käytöstä seurassani. 
Onko jotain, mistä sinun kannattaisi päästää irti? 
No juuri tuosta edellisestä, pitäisi ottaa rennommin, lakata ylianalysoimasta toisten sanomisia, välittää vähemmän mitä muut ajattelevat. 
Mikä yksi asia sinun kannattaisi muuttaa heti, jotta voisit paremmin? 
Pitää yksi someton päivä viikossa, niin että kaikki laitteet olisivat kiinni. 
Ketä varten pukeudut? 
Vähän itseäni, enimmäksi osaksi muita varten. Kyllä menen trikoissa ja huppareissa aika pitkälti kotona. 
Millaiseksi vaatteesi saavat sinut tuntemaan itsesi? 
Vaatteesta riippuen, kyllä sitä monesti on kaunis olo. Endometrioosin alati turvottama vatsa on tehnyt minusta kuluneen talven aikana selkeästi aremman pukeutujan, eikä missään vaatteessa ole oikein hyvä olla. Paitsi niissä trikoissa. 
Viekö tämä unelmiasi kohti? 
En kyllä yhtään tiedä mikä tämä. Mutta tänään suuntaan yritysneuvojalle, että saas nähdä. Hui. 
Millaiseksi saat muut ihmiset tuntemaan itsensä? 
Toivottavasti arvostetuksi, sillä katson yleensä ihmisiä ylöspäin ja ihailen, miten hänkin voi olla tuollainen. Unohdan vain monesti sanoa sen ääneen. Lapsiani kehun varauksetta tauotta ja se tulee ihan luonnostaan. Melkein hävetti kun olin juoksu/pyörälenkillä lapsen ja hänen ystävänsä kanssa ja siinä itse hikoillessa huutelin vähän väliä ”hyvä tytöt, hyvin vedätte, mahtavaa, ootte superreippaita!”. Tuli ihan PT-olo, olisikohan minusta sellaiseksi? 
Oletko oman elämäsi ohjissa vai tapahtuvatko asiat sinulle? 
Ehdottomasti tapahtuu. Istun jonkun junan kyydissä ja mietin että hellurei, taas mennään. Mietin Thaimaassa asuessa useasti, että miten ihmeessä me tänne päädyttiin. Sama nyt omakotitalossa kahden lapsen kanssa, mites tässä näin kävi? Ehdottoman kiitollinen kaikesta, mutta minä aina teen ennen kuin ajattelen. Ajattelen sitten aina vuosi tapahtumien jälkeen, että hitto kuinka siistiä sekin oli ja kuinka mahtavaa on kun on tollaiset tytöt. Saan kaiken maailman ajatuksia ihan ex tempore ja sitten toteutan niitä mahdollisimman nopeasti. Innostun ihan kaikesta, työnnän nenäni joka paikkaan ja mennä höyryän ilman hyviä suunnitelmia. 
Tulikohan tästä nyt ihan huithapeli kuva, kyllä minä olen ihan vastuullinen tyyppikin. Tuliko mitään uutta? Onko itselläsi paniikkikokemuksia? Hyväksyntää ja rauhaa tiistaihisi, sitä minäkin täällä opettelen!</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links><link>https://styleheaven-marjorie.blogspot.com/2019/03/24-kysymysta-elamasta.html</link></links><tags><tag>Yleinen</tag><tag>muoti</tag><tag>oma elämä</tag><tag>oma tyyli</tag><tag>paniikkihäiriö</tag></tags><images /><indexedAt>2019-04-02T08:25:17Z</indexedAt><publishedAt>2019-04-02T03:36:09Z</publishedAt><reindexedAt>2019-04-02T08:25:17Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>1516467570297818548</blogId><blogName>Optimismia ja energiaa</blogName><blogUrl>https://optimismiajaenergiaa.fi</blogUrl><blogRank>2</blogRank><authority>12</authority></post><post><id>1975653438281790607</id><author>Dr Ganesh Narasimhan</author><url>http://hindihindi.blogspot.com/2019/04/antenna.html</url><title>Antenna</title><text /><languageCode>fi</languageCode><locationCode>in</locationCode><coordinates /><links><link>https://4.bp.blogspot.com/-kQOryvahnK8/XKJRBmcQRWI/AAAAAAAAO8A/gCRa_DcGHEMsSLC740bp7ZWkG8c6rgCXwCLcBGAs/s1600/55708881_10158630786499578_2430740589461897216_n.jpg</link></links><tags><tag>Antenna</tag></tags><images /><indexedAt>2019-04-02T08:25:25Z</indexedAt><publishedAt>2019-04-01T17:57:00Z</publishedAt><reindexedAt>2019-04-02T08:25:25Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2558295718066354576</blogId><blogName>Hindi Hindi</blogName><blogUrl>http://hindihindi.blogspot.com</blogUrl><blogRank>1</blogRank><authority>4</authority></post><post><id>18334714937653017635</id><author>sannagustavsson</author><url>https://nouw.com/sannagustavsson/update-35750593</url><title>Update</title><text>Men kolla så fin..  Hej på er! Idag är det tisdag &amp; inatt går jag på och ska jobba tre nätter. Så mycket annat roligt har inte hänt sen sist. Älskar att våren är här, blir så pigg &amp; glad av solen. Detoxen fortsätter tills på fredag. Då ska jag nämligen unna mig &amp; njuta av ledighet med bästis.  Men måste säga att detoxen funkar sjukt bra. Så mycket energi &amp; motivation har jag inte haft på länge. &amp; då är det motivation till allt, inte enbart träning. Så tänker köra på med detta tills jag är i mål.  Ha en super fin tisdag!!</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:25:27Z</indexedAt><publishedAt>2019-04-02T08:25:14Z</publishedAt><reindexedAt>2019-04-02T08:25:27Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>5600227197453546219</blogId><blogName>sannagustavsson blogg</blogName><blogUrl>https://nouw.com/sannagustavsson</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>6088861847135011844</id><author>Erja Taura-Jokinen</author><url>https://www.seurakuntalainen.fi/uutiset/kysely-paljasti-millaiset-odotukset-kohdistuvat-seurakunnan-varhaiskasvatukseen-suomen-toiseksi-suurimmassa-kaupungissa-espoossa/</url><title>Kysely paljasti, millaiset odotukset kohdistuvat seurakunnan varhaiskasvatukseen Suomen toiseksi suurimmassa kaupungissa, Espoossa</title><text>Espoon seurakuntien päiväkerholaisten huoltajille lähetettiin sähköinen kysely tammikuussa 2019. Siinä kysyttiin tyytyväisyyttä päiväkerhojen toimintaan sekä kehittämisehdotuksia jatkoa varten. 
Vastaukset paljastivat, että seurakuntien varhaiskasvatuksessa keskeistä ovat laadukkuus, monipuolisuus, kohtaaminen, kasvun tukeminen sekä pienet ryhmät, joissa voi harjoitella aikuisen tuella sosiaalisia taitoja. Kehittämisen näkökulmasta toivottiin kaikenlaista perheille suunnattua toimintaa illoiksi tai viikonlopuiksi. 
– Positiivista palautetta tuli sydämellisistä ja ammattitaitoisista ohjaajista sekä koko varhaiskasvatuksen toiminnan monipuolisuudesta, kertoo Espoon seurakuntien kasvatuksen asiantuntija Tiina Hänninen. 
– Pienet ryhmäkoot saivat kiitosta, koska pienellä lapsella ne ovat mahdollistaneet itsenäistymisen ensiaskeleita. 
Kyselyn perusteella perheet arvostivat kristillistä kasvatusta, sosiaalisten taitojen kehittymistä ja ohjaajien kykyä tukea niissä lasta. Lisäksi koettiin tärkeinä perinteisten kädentaitojen oppimista, leikkiä ja leikin tukemista sekä sitä, että lapsi tulee kuulluksi ja nähdyksi. 
– Varhaiskasvatus on mahdollistanut perheille ja huoltajille omaa aikaa hoitaa vanhempien omia asioita sekä muita sisaruksia. 
Tärkeimmäksi huoltajat kokivat tuen lapsensa kasvuun ja kehitykseen sekä uuden oppimiseen. 
Yksi kyselyyn vastanneista totesi, että päiväkerho on antanut henkistä hyvinvointia. 
Seurakunnilta kaivattiin vielä nykyistä enemmän perhetapahtumia, perhekerhoja, perheleirejä sekä kasvattajailtoja, joissa olisi lastenhoito. 
Näitä toivottiin nimenomaan iltoihin tai lauantaipäiviin, jotta koko perhe pääsisi mukaan. 
– Perheille haluttiin myös tapahtumia koulujen syysloman ja hiihtoloman aikaan. Tätä jotkut seurakunnat jo tekevätkin, mutta eivät kaikki, Tiina Hänninen toteaa. 
– Toivomuksissa oli vielä yhden illan leirejä perheille, avioliittoleirejä, kesätoimintaa 5–6-vuotiaille ja perheille suunnattua avointa iltamuskaria, johon toinenkin puoliso pääsisi osallistumaan sekä myyjäisiä, kirpputoreja ja kristillisen kasvatuksen tukemista niille lapsille, jotka ovat jo koulussa. 
Espoon seurakuntien päiväkerhoissa käy lähes 900 lasta. Kerhoryhmiä on noin 60.</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links /><tags><tag>Kirkko</tag><tag>Espoo</tag><tag>varhaiskasvatus</tag></tags><images /><indexedAt>2019-04-02T08:25:28Z</indexedAt><publishedAt>2019-04-02T08:15:40Z</publishedAt><reindexedAt>2019-04-02T08:25:28Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>10097448272105501551</blogId><blogName>Seurakuntalainen</blogName><blogUrl>https://www.seurakuntalainen.fi</blogUrl><blogRank>4</blogRank><authority>57</authority></post><post><id>3891541675826146495</id><author>Erja Taura-Jokinen</author><url>https://www.seurakuntalainen.fi/uutiset/korkeakoulujen-kevaan-yhteishaku-uudistuu-vuonna-2020/</url><title>Korkeakoulujen kevään yhteishaku uudistuu vuonna 2020</title><text>Valtioneuvosto antoi torstaina 14.3. uudistusta koskevan asetuksen. 
Asetuksen mukaiset yhteishaut järjestetään ensimmäistä kertaa keväällä 2020. 
Kevään ensimmäinen yhteishaku kattaa jatkossa vieraskieliset koulutukset sekä Taideyliopiston koulutukset ja Tampereen yliopiston teatterityön koulutukset. Tavoite on, että ensimmäisen haun valintojen tulokset voidaan ilmoittaa ulkomaalaisille hakijoille nykyistä aiemmin. 
Kevään toinen yhteishaku suunnataan suomen- ja ruotsinkieliseen koulutukseen. Se vastaa nykyistä kevään yhteishakua. 
Osa hakijoista hakee kummassakin kevään yhteishaussa, esimerkiksi sekä suomen- tai ruotsinkieliseen koulutukseen että vieraskieliseen koulutukseen. Yhteishakujen aikataulussa huolehditaan siitä, että kummassakin haussa menestyvällä on mahdollisuus valita, minkä paikan ottaa vastaan. 
Syksyllä järjestetään jatkossakin vain yksi yhteishaku. 
Juuri nyt on käynnissä korkeakoulujen yhteishaku, joka päättyy ensi keskiviikkona eli 3:ntena huhtikuuta. 
Esimerkiksi Diakonia-ammattikorkeakoululla, Diakilla, on haussa 559 aloituspaikkaa kahdeksassa sosiaali-, terveys-, kirkon ja tulkkauksen alan AMK-koulutuksessa ja kahdessa YAMK-koulutuksessa viidellä paikkakunnalla: Helsingissä, Oulussa, Pieksämäellä, Porissa ja Turussa. 
Yhteishaun kanssa samanaikaisesti Diak järjestää lisähaun englanninkieliseen sosiaalialan YAMK-koulutukseen ja erillishaun korkeakoulutuksessa aliedustetuille ryhmille, kuten romani- ja maahanmuuttajataustaisille hakijoille. Erillishaussa voi hakea sairaanhoitaja- tai sosionomikoulutukseen Helsingin-kampukselle. 
Diak vastaa yli 90 prosentista Suomen evankelis-luterilaisen kirkon diakonian, nuorisotyön ja lapsityön virkoihin kelpoistavasta ammattikorkeakoulutuksesta.</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links /><tags><tag>Uutiset</tag><tag>korkeakoulut</tag><tag>yhteishaku</tag></tags><images /><indexedAt>2019-04-02T08:25:28Z</indexedAt><publishedAt>2019-04-02T06:00:19Z</publishedAt><reindexedAt>2019-04-02T08:25:28Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>10097448272105501551</blogId><blogName>Seurakuntalainen</blogName><blogUrl>https://www.seurakuntalainen.fi</blogUrl><blogRank>4</blogRank><authority>57</authority></post><post><id>9747287197662034512</id><author>Marjo</author><url>https://styleheaven-marjorie.blogspot.com/2019/04/aprillia-aprillia-syo-sillia-ja-juo.html</url><title>Aprillia, aprillia - syö silliä ja juo kuravettä päälle!</title><text>Hyvää huhtikuun 1.päivää sekä iloista aprillipäivää kaikille tasapuolisesti! Olen tänään koko päivän pohtinut mikä olisi paras silmiini lehdistä/netistä sattunut tai radiosta kuultu aprillipila. Eihän nyt aprillipäivä ole yhtään mitään ilman mojovaa huijausta, puuta heinää uutista ja jotain muuta pikkujäynää. Aprillipäivää on sentään vietetty jo vuodesta 1582 tai ainakin näin sanotaan tapahtuneen. Ranskassa siirryttiin silloin gregoriaaniseen kalenteriin ja maassa oli tuolloin epäselvyyttä uuden vuoden alkamisesta. Huijausperinne saattoi saada alkunsa aprillipäivän aikoihin pilailumielessä lähetetyistä uudenvuodenlahjoista tai kutsuista.  Oli niin tai näin niin päätin kerätä tähän muutamia itseäni aivan suunnattomasti tänään huvittaneita aprillipiloja.   Aamulla meinasi aamukaffet mennä väärään kurkkuun kun näin uutisen, että jatkossa muovisen Museokortin voi implantoida kehoonsa ja nopeimmat museokävijät voivat saada sen jo nyt! Tänään innokkaille museokävijöille tarjottiin mahdollisuutta ilmoittautua jonotuslistalle odottamaan joko kämmeneen tai vaikka otsaan asennettavaa RFID-kapselia, joka sijoitettaisiin ihon alle. Ja sitten vaan odottamaan, että 1-3 viikon kuluttua sinulla on elinikäinen pääsylippu lähes 300 museokohteeseen ympäri Suomea. Miettikää nyt miten kätevää tämä olisi jo Museokortti olisi vaikka unohtunut kotiin :D   THL Työ- ja hyvinvoinninlaitos puuttuu alusasujen valikoimiin ja niiden myyntiin ikärajattomasti ruokakaupoissa. Ei siitä nyt ole mitään tolkkua, että kalsareita voi ostaa samasta kaupasta mistä ostaa sitten sitä kaljaa. Kansainvälistäkin huomiota saaneet kalsarikännithän siitä sitten syntyy! THL päätteleekin, että kalsarien käyttö ja alkoholijuomien nauttiminen ovat selkeästi yhteydessä toisiinsa.  "Turvallista rajaa ei ole. Henkilökohtaisesti en nauttisi mietokaan juomia kalsareissa, koska siitä muodostuu helposti tapa." toteaa THL:n tiedotteessa asiantuntija Untamo Väli-Huomio. Untamo muistuttaa vielä, että "Pitkät kalsarit kuuluvat pakkassäälle ja alusasut päällysvaatteiden alle."   Tekniikka ja talous ilmoitti tänään jo klo 8 aamulla, että Tallinnan uuden tunnelin kaivuutyöt alkavat. Koekaivut ovat välttämättömiä, jotta selviäisi tuleeko Tallinnan tunneli suunnata etelänaapuriin Helsingin keskustan vai Otaniemen kautta. Kyllä minä näin espoolaisena suosisin tuota Otaniemeä ja muuten olisin lähtenyt mutta ongelmaksi muodostui oman lapion puuttuminen. Ei löytynyt auton takaboxista joten en sitten mennyt hakemaan aktiivipassia kun ei ollut mitään kättä pidempää millä kaivaa.  Ystävä vinkkasi, että Löfsberg oli mainostanut jossain kahvisuihketta kiireisille, jotka haluavat nauttia kahvista mutta eivät ehdi sitä keittää. Suihketta vaan suuhun ja menoksi. Facebookissa oli kuulemma ollut Apetit pinaattikeittojäätelön mainos. Voisi olla muuten aivan oivallinen tuote koska olen suuri pinaattikeiton ystävä. Sitä vaan tässä mietin, että miten se kananmunan puolikas nautittaisiin kyytipoikana jos jäätelö olisi suoraan pakkasesta...  Kyllä minusta silti ihan ylivoimaisin oli Minna Parikan ja Nokian yhteistyö All Talk -kengät!      Minna Parikan ja HMD Globalin yhteistyössä syntyneissä All Talk -älykorkokengissä yhdistyy näyttävä suomalainen design sekä kehittynyt älypuhelinteknologia.  Korkoon upotetussa Nokia-puhelimessa on iskunkestävä 5,8 tuuman Full HD+ PureDisplay -näyttö. ZEISS-optiikalla varustettu kaksoistakakamera mahdollistaa kuvien ottamisen vaikuttavalla tekoälytekniikalla - vauhdissa kuin vauhdissa. 6000-sarjan alumiinirunko ja timanttihiotut reunat takaavat tukevat askeleet. Kaksisuuntainen langaton lataus mahdollistaa kaikkien Qi-standardien mukaisten laitteiden lataamisen kävelyenergialla.  Kannattaa toimia nopeasti jos mielii kenkiä...  Kyllä jokainen nainen ansaitsee tällaiset hopeanväriset kengät itselleen!</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links><link>https://3.bp.blogspot.com/-E9wbfAtbIow/XKIlKSKeymI/AAAAAAAAqww/9MtVnAhKIO8Vfd6NAlN0OcUTK4VJ1ENsgCLcBGAs/s1600/minna%2Bparikka_nokia_aprillia.PNG</link><link>https://2.bp.blogspot.com/-ulpWBZgZ_6Q/XKIocPEWlHI/AAAAAAAAqw4/Cty4hVVmY2wMfjAVmMYp7VogvYhiLVwIwCLcBGAs/s1600/museokortti_aprillipila.png</link><link>https://www.museot.fi/museokortin-voi-pian-implantoida-kehoonsa</link><link>https://4.bp.blogspot.com/-W061r2k3rNA/XKIqmfuNtWI/AAAAAAAAqxA/PANFoUPIDisf_BBZf-qgO9mmKbTvYMKpQCLcBGAs/s1600/thl_kalsarik%25C3%25A4nnit_aprillipila.PNG</link><link>https://www.thl.fi/fi/-/thl-kalsarit-pois-maitokaupoista-suomalaisten-kalsarikannit-ovat-herattaneet-jo-kansainvalista-huomiota</link><link>https://4.bp.blogspot.com/-IlVmODZdjq8/XKIt1qhLJkI/AAAAAAAAqxI/D53eO4AYFJkUdHd3BawKLwuEhZmL5NBVQCLcBGAs/s1600/otakeila_finest_aprillipila.jpg</link><link>https://www.tekniikkatalous.fi/talous_uutiset/liikenne/tallinnan-tunnelin-koekaivuut-alkavat-torstaina-ota-oma-lapio-mukaan-6762361</link><link>https://www.minnaparikka.com/fi/all-talk-silver?utm_source=Minna+Parikka+Subscribers+FI&amp;utm_campaign=7bc2984cee-EMAIL_CAMPAIGN_2018_06_11_EN_COPY_01&amp;utm_medium=email&amp;utm_term=0_d8dacd61bd-7bc2984cee-337639921&amp;mc_cid=7bc2984cee&amp;mc_eid=ad112e6eb5</link><link>https://2.bp.blogspot.com/-E9wbfAtbIow/XKIlKSKeymI/AAAAAAAAqw0/GFjghzrrhtMYf9DJOosDkUu54j8GeV3IQCEwYBhgL/s1600/minna%2Bparikka_nokia_aprillia.PNG</link><link>https://2.bp.blogspot.com/-8EBqudzN7bA/XKIxHhCMMOI/AAAAAAAAqxQ/AyYKC_3YRisCiNovyRI1zH1PJ7CNk2rcQCLcBGAs/s1600/minna%2Bparikka_nokia_aprillikeng%25C3%25A4t.PNG</link></links><tags><tag>aprillipäivä</tag><tag>just for fun</tag></tags><images /><indexedAt>2019-04-02T08:25:31Z</indexedAt><publishedAt>2019-04-01T15:51:00Z</publishedAt><reindexedAt>2019-04-02T08:25:31Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2400745979024972068</blogId><blogName>Marjon matkassa</blogName><blogUrl>https://styleheaven-marjorie.blogspot.com/</blogUrl><blogRank>3</blogRank><authority>20</authority></post><post><id>9267634403747239040</id><author>Lene Sanderhoff</author><url>https://naturformidlerne.com/2019/04/01/rodbrystet-jordbi-i-skanemosen/</url><title>Rødbrystet jordbi i Skånemosen</title><text>Emil og resten af ekspeditionsholdet sidder et sted i Transsylvanien og håber på der kommer en brun bjørn forbi. Og mens vi venter på nyt fra dem, så kan jeg da lige vise den lille sag frem: 
 
Det er en rødbrystet jordbi, Adrena clarkella, en almindelig solitær (enlig) jordbi, som for tiden er vældigt i gang i Skånemosen. Jeg bemærkede en masse små bier, da jeg gik dernede, og tilskrev det i første omgang alle violerne, der blomstrer i siden af vejen. Men hurtigt opdagede jeg al den frisk opgravede jord, som på midt på vejen i små bunker, og ved nærmere eftersyn kunne jeg se, at postyret skyldtes, at jordbierne var godt i gang! 
 
Den rødbrystede jordbi samler kun pollen på pil, fx gråpil eller seljepil. Man siger den er oligolektisk eller pollenspecialist. Hunnen graver gange i jorden og laver små kamre, som hun fylder pollen i. Her lægger hun så et æg, og når ægget klækker, lever larven af det pollen, som hunnen har samlet. Hannerne er mindre end hunnerne og lidt mere kedelige i farven. 
 
Der findes 63 arter af jordbier i Danmark, og de er med til at bestøve mange planter. Jeg har tidligere skrevet om blåhatjordbien, som er umiskendelig med sine lyserøde pollenbukser og også findes i Skånemosen. 
Her kan du nyde en video af gravearbejdet der finder sted lige nu:</text><languageCode>da</languageCode><locationCode /><coordinates /><links /><tags><tag>Ekspedition Kaukasus</tag><tag>lenes naturnyheder</tag><tag>Adrena clarkella</tag><tag>emil bech sanderhoff</tag><tag>jordbi</tag><tag>lene bech sanderhoff</tag><tag>rødbrystet jordbi</tag><tag>skånemosen</tag></tags><images /><indexedAt>2019-04-02T08:25:34Z</indexedAt><publishedAt>2019-04-01T18:23:30Z</publishedAt><reindexedAt>2019-04-02T08:25:34Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>6187446209063888743</blogId><blogName>Naturformidlerne</blogName><blogUrl>https://naturformidlerne.com</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>14362316656399617417</id><author /><url>http://www.fotosidan.se/blogs/magganfs/182435.htm</url><title>Ceylonte</title><text>Är man i Sri Lanka, forna Ceylon och färdas förbi grönskande teplantage så kommer det sig ganska naturligt att man vill besöka en tefarm med tefabrik. 
Vi lämnar Kandy och reser vidare genom höglandskapet. Vi  befinner oss på relativt hög höjd, runt 1900 m.ö.h, så den tyckande värmen vi hade nere i Colombo är ...</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.fotosidan.se/cldocpart/671702.jpg</link></links><tags /><images /><indexedAt>2019-04-02T08:25:35Z</indexedAt><publishedAt>2019-04-02T07:38:10Z</publishedAt><reindexedAt>2019-04-02T08:25:35Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2517473372599753701</blogId><blogName>Senaste blogginläggen på Fotosidan</blogName><blogUrl>http://www.fotosidan.se/blogs/index.htm</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>838314033080536172</id><author>Marie</author><url>http://www.fopsverige.se/uppdaterade-medicinska-riktlinjer-for-fop-2019/</url><title>Uppdaterade Medicinska riktlinjer för FOP 2019</title><text>Mars- 2019. Uppdaterade Medicinska riktlinjer för FOP
Ett ovärdeligt dokument för läkare &amp; patienter innehållande medicinsk vägledning som The International Clinical Council of FOP (ICC) &amp; Consultants har arbetat med i över ett år. Dokumentet innehåller femton helt nya avsnitt, tillsammans med uppdaterade avsnitt från föregående versioner av Treatment Guidelines for FOP. 
Delar som är bra att skriva ut och spara: 
Sid 5-11 En sammanställning av de viktigaste punkterna vid behandling av FOP. 
Sid 91-98 Medicineringar. 
Sid 99-102 Vägledning vid olika akutsituationer. 

Pdf klicka här
För mer info, innehållsförteckning &amp; pdf klicka här 

Brev från Dr Kaplan &amp; Dr Pignolo (Svensk översättning) klicka här.
Om ICC (The International Clinical Council on FOP) klicka här.


Hejsvejs – Marie H Fahlberg 
FOP Koordinator &amp; IFOPAs IPC representant i Sverige. 
Om FOPsverige.se • Om Marie • Mail 


    Stöd FOP-forskningen via Svenska/Skandinaviska FOP-föreningens insamling. 
    Bankgiro 5823-7140  •  Swishnr 1236402630 Läs mer</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>https://www.ifopa.org/international_clinical_council_on_fop</link></links><tags><tag>FOP Fibrodysplasia Ossificans Progressiva</tag><tag>Hjälpmedel</tag><tag>Uncategorized</tag></tags><images /><indexedAt>2019-04-02T08:25:41Z</indexedAt><publishedAt>2019-03-12T20:46:34Z</publishedAt><reindexedAt>2019-04-02T08:25:41Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>8062145541357697234</blogId><blogName>Sida Array – FOPSverige</blogName><blogUrl>http://www.fopsverige.se</blogUrl><blogRank>1</blogRank><authority>6</authority></post><post><id>5452848581018920532</id><author>emmaoghedda</author><url>https://nouw.com/emmaoghedda/skoletips-til-en-travel-hverdag-35661734</url><title>Skoletips til en travel hverdag</title><text>Hei! Alle som går på videregående skole kjenner seg igjen i en travel skolehverdag. Prøver, innleveringer og lekser tar mye av fritiden til elever. Det kan være vanskelig å få tid til alt når man i tillegg har andre fritidsaktiviteter man gjerne vil prioritere. Derfor tenker vi nå å gi dere noen gode tips til hvordan man kan effektivisere skolehverdagen. Legg vekk mobiltelefonen! Sikkert veldig klisje, men det er sant. Den største distraksjonen både på skolen og hjemme er mobilen. Det popper alltid opp nye ting og det vil alltid friste å ta en titt om mobilen er innen rekkevidde. Derfor er det viktig å legge bort mobiltelefonen både i timene på skolen og når man jobber med skole hjemme. Et tips kan være å legge mobiltelefonen helt bort i 1-2 timer imens man jobber effektivt, så kan man heller belønne seg med en "mobilpause" innimellom. På skolen er det viktig å klare å legge den vekk i timene i og med at man får ekstremt mye gratis læring. Timene er 80 minutter og alle klarer seg i 80 minutter uten å sjekke sosiale medier. Vår oppfordring: Legg vekk mobiltelefonen og fokuser på det du skal.   Skriv for hånd og bruk farger! Det er vitenskapelig bevisst at de fleste elever lærer best ved å skrive for hånd. Man husker bedre og kunnskapen setter seg lettere enn ved bruk av PC. Mange kan syntes det er kjedelig og tungvint å skrive for hånd. For å gjøre det mer spennende kan man bruke tusjer og blyanter med farger, tegninger og lage notater som også er morsomme å se på. Dette kan gjøre notatskriving litt morsommere og at det heller ikke ser "kjedelig og grått ut".   Arranger leksekveld med vennene dine! Dette er noe vi benytter oss veldig mye av og vi syntes det funker veldig bra. Lag noe digg mat som dere kan kose dere med og gjør leksekvelden til en koselig kveld. Om man er flere sammen kan man lære av hverandre, diskutere og komme med innspill. Når man er flere sammen er det også lettere å legge vekk mobilen og andre ting som distraherer. Ved hjelp av leksekvelder med venner får man både vært sosial og jobbet med skole samtidig. Perfekt for en travel hverdag hvor man ikke har tid til alt. Bruk fritimene for det de er verdt!  Fritimene er gratis tid til å kunne jobbe med skole. Hvis man har andre aktiviteter på fritiden er dette en perfekt mulighet til å gjøre skolearbeid. Hvorfor ikke bruke fritimene til noe nyttig om du uansett er på skolen? Istedenfor å ikke gjøre noe er det her viktig å bruke tiden effektivt. Om man får gjort ferdig leksene på skolen har man ettermiddagen til å gjøre andre ting som man har lyst til. Å bli ferdig med skolearbeid i løpet av skoletiden er ekstremt deilig. Ikke sikt deg innpå å ta opp fag!  Å ta opp fag koster penger og det krever også mye tid. Mange tenker at de ikke gidder å prioritere fagene fordi de uansett kan ta de opp senere. Sannheten er at det ikke blir noe lettere å ta opp fag etter man er ferdig på skolen. Tar man opp fag har man i utgangspunktet heller ikke tilgang til lærer og man er nødt til å lære seg det selvstendig. Å ta opp fag blir også dobbelt så mye arbeid og er unødvendig tid som man kan unngå dersom man står på. Motivasjonen kan også øke dersom man innstiller seg på å bli ferdig med fagene mens man går på videregående. Finn rette studieteknikk for deg!  Det finnes utallige ulike studieteknikker og det er viktig å finne den som passer for deg. Alle lærer ulikt og selv om venninnen din bruker en type studieteknikk er det ikke sikkert at den funker for deg. Derfor er det viktig at man prøver seg frem og finner ut på hvilken måte du lærer best. Jo fortere du finner den rette studieteknikken for deg, jo enklere blir det å lære seg stoffet. Noen lærer best av å kun lese andre av både å lese og deretter skrive notater. Filmer og korte videoer er også metoder som funker for noen. Noen liker å høre på musikk, mens andre trenger å ha det helt stille. Vårt beste tips er derfor å prøve ut ulike studieteknikker før du finner den som passer for deg.  Husk å belønne deg selv!  Om du får igjen en bra karakter eller du klarte å skrive ferdig notatene dine- belønn deg selv. Dette gjør det morsommere å få til noe og kan også gi ekstra motivasjon. Det at du vet at du får en belønning om du klarer noe gjør at man automatisk ønsker å få det til. Mestringsfølelsen er viktig for oss elever. Man må ikke kun belønne toppkarakterer, men om du klarer et mål du har satt deg er det mer enn godt nok. Treat yourself! Håper at tipsene faller i smak og at de kan hjelpe nettopp deg. De har vært en stor hjelp for oss. Klem Emma &amp; Hedda</text><languageCode>no</languageCode><locationCode>no</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:25:43Z</indexedAt><publishedAt>2019-04-02T08:25:19Z</publishedAt><reindexedAt>2019-04-02T08:25:43Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>8599999514429901062</blogId><blogName>Emma&amp;Hedda</blogName><blogUrl>https://nouw.com/emmaoghedda</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>14476401009917274455</id><author>jarivhnen8322</author><url>https://gamblingguru.blog/2019/04/02/suomen-ravialan-nykytila/</url><title>Suomen ravialan nykytila</title><text>Olen malttanut olla kirjoittamatta raviasioista, jotka
kuitenkin ovat minulle läheisempiä kuin rahapeliasiat. Nyt ärsytyskynnys
kuitenkin ylittyi ja päätin kertoa mielipiteeni. Katselin TotoTV-lähetystä
Forssan raveista. En juuri noteerannut, mitä lähtöjen välissä puhuttiin, mutta
sitten yksi lause särähti korvaan. Joku mies totesi, että raviurheilun suurin
virhe ”peleihin keskittyminen” on syytä korjata. Mitä ihmettä, kuulinko oikein,
ei voi olla totta! Haastateltavana oli minulle täysin tuntematon Markku
Saastamoinen. Aika nopeasti selvisi, että kyseinen herra on kirjoittanut
”Suomen ravialan nykytila”-selvityksen Suomen Hippoksen toimeksiannosta. Sain vihdoin
eilen raportin käsiini ja lukemisen jälkeen toivon todella, että tämä raportti
ei ole Suomen ravialan kehityksen pohjana! 



Tarkoituksenani ei ole vain arvostella Saastamoisen
raporttia vaan kertoa samalla omia ex tempore-mielipiteitäni. Raviurheilun
sisällä on ollut vuosia harhaluulo lajin suosiosta. Olemme pitkään kertoneet,
että ravit ovat Suomen toiseksi suosituin urheilulaji. Tilastojen avulla
voidaan osoittaa melkein mitä tahansa ja tuo edellä oleva asia on yksi hyvä
esimerkki siitä. Ravit ovat todellakin olleet urheilulajien listalla kakkosena,
kun lasketaan maksullisiin tapahtumiin osallistunutta katsojamäärää. Tämä ei
tee silti raveista toiseksi suosituinta lajia. Ravien yksi ongelma on
raviratojen sijainti. Valtaosa raviradoista sijaitsee melko kaukana kaupunkien
keskustasta ja satunnaisten katsojien saaminen paikalle on sen vuoksi
haastavaa.  



Ravien näkyvyyden heikkenemisestä on viime aikoina puhuttu
paljon. On helppo syyttää ongelmista vapaasti katsottavissa olevien
TV-lähetysten poistumista. Ravilähetyksiä pystyy katsomaan ilmaiseksi noin 20
kertaa enemmän kuin parikymmentä vuotta sitten. Lähetystapa vain on toinen ja
itse asiassa sama kehitys on tapahtunut mm. jalkapallossa ja jääkiekossa, jotka
edelleen ovat suosituimpia urheilulajeja. Kysymys on laajemmasta ongelmasta
kuin lajin näkyvyydestä massakanavilla. Väitän, ettei ravien näkyminen YLE:n
tai Maikkarin kanavalla lisää lajin suosiota, jos lajin sisäiset asiat eivät
ole kunnossa. Saastamoinen on oikeassa siinä, että raviurheilun tulee ymmärtää
ja reagoida selvästi aiempaa paremmin yleisiin kuluttajatrendeihin ja
muutoksiin niissä. Ei riitä, että tehdään niin kuin aina ennenkin. 



Raviurheilun imagon kannalta on tärkeää pitää huolta
hevosten hyvästä käsittelystä. Kekkonen totesi aikoinaan, että ”niin on, jos
siltä näyttää”. Me ravien aktiiviharrastajat olemme sokeita esimerkiksi piiskan
ja ohjien loppusuoran käytölle. Näyttäkää video melkein mistä tahansa tiukasta
loppusuoran kamppailusta ei raveja harrastavalle ihmiselle ja kysykää, mitä
tunteita se herättää. Todennäköinen vastaus ei ole toivomamme ”upea taistelu”
vaan ”hevosten hakkaaminen”. Vaikka tiedämme, että tuomaristo ja eläinlääkärit
valvovat toimintaa ja hevonen ei kärsi merkinannosta, niin hevosten käskeminen
näyttää pahalta.  



Raviurheilun vertaaminen ratsastukseen ei mielestäni ole
mielekästä. Kyseessä on kaksi täysin eri lajia. Yhteinen nimittäjä on hevonen,
mutta siihen ne yhtäläisyydet jäävätkin. Hevosista pitäviä ihmisiä voidaan
kyllä saada raveihin, jos eläinsuojeluasiat ovat kunnossa. Sen sijaan en usko,
että ravien kannattaa yrittää houkutella ratsastusharrastajia vaihtamaan lajia.
Kahden eri lajin harrastaminen puolestaan vie paljon aikaa ja rahaa. Uskon,
että hevostalouden kokonaisedun kannalta on viisainta antaa ratsastusurheilun
ja raviurheilun elää omia elämiään.  



Ravien markkinoinnissa pitää hyödyntää myös hevosta, mutta
sen tulee tapahtua lajinomaisesti. Ravit kuten muutkin lajit kaipaavat
urheilutähtiä. Alan sisällä tuntuu olevan erimielisyyttä siitä, ovatko tähtiä
hevoset vai ohjastajat. Tällä ei ole lajin suosion kannalta mitään merkitystä.
Ohjastajat ovat monessa mielessä parempi valinta, koska huipputason nimiä on
vain parikymmentä ja he pysyvät huipulla vuosia tai jopa kymmeniä vuosia.
Huipulla olevia hevosia on sen sijaan paljon enemmän ja kaiken lisäksi hevosten
vaihtuvuus on paljon nopeampaa kuin huippuohjastajien. Huippuhevosta voi
tietysti korostaa, jos meille sattuisi taas tulemaan Charme Asserdalin tai
Houston Laukon tapainen kansainvälinen tähtiravuri. Uutisoinnissa ja muussa
mediajulkisuudessa pitäisi tietoisesti keskittyä tähtikulttuurin luomiseen ja
unohtaa arjen sankarit, joita voidaan nostaa esille alan sisäisessä
viestinnässä.  



Raviurheilu tarvitsee mahdollisimman laajan
harrastajapohjan. Laji tarvitsee hyviä hevosia, joita varten tarvitaan
kasvattajia, jotka ovat valmiita panostamaan laadukkaisiin tammoihin ja
orivalintoihin. Lisäksi tarvitaan laaja omistajakunta, joilla pitää olla
mahdollisuus harrastaa lajia inhimillisillä kustannuksilla. Kasvattajien ja
omistajien lisäksi iso rooli on myös valmentajilla, joilla tulee olla
mahdollisuus harjoittaa järkevää liiketoimintaa. Tätä koko ketjua varten
tarvitaan mahdollisimman paljon palkintorahaa. Palkintojen maksamisessa tulee
ottaa huomioon kaksi asiaa – peruspalkintotaso ja mahdollisuus suurvoittoihin.
Vaikka vain harva raviharrastaja pääsee koskaan käsiksi suurvoittoihin, niin ne
pitävät silti yllä unelmaa ja ovat koko lajille tärkeä asia.  



Saastamoinen toteaa raportissaan, että raviurheilua on
kehitetty liikaa pelaamisen ehdoilla. Lisäksi hän tulkitsee yleisötutkimuksia
niin, että iso osa ihmisistä pitää ravipelaamista pahana asiana. Saastamoinen
esittää, että pelituloja pitäisi korvata sponsori- ja TV-tuloilla. Olisi
mielenkiintoista kuulla, mihin perustuu arvio siitä, että TV-yhtiöt olisivat
yhtä äkkiä valmiita maksamaan ravien lähetysoikeuksista. Tällä hetkellä
kanaville pitää maksaa paljon siitä, että ne yleensä näyttävät raviurheilua. Ravien
yhteistyökumppaneiden hankkiminen on Kuninkuusraveja ja muutamaa suurtapahtumaa
lukuun ottamatta haastavaa ja sopimussummat ovat todella kaukana siitä tasosta,
jolla voitaisiin korvata pelituottoja. Mielestäni ravipelitoiminnan
kritisoiminen osoittaa, ettei raportin kirjoittaja ymmärrä talouden
suuruusluokkia. Pienillä asioilla on vaikea korvata suuria asioita.
Pelituottojen vähenemiseen on tietysti syytä varautua, mutta keinot siihen ovat
aika vähissä. Mielestäni ravituotetta on edelleen kehitettävä pelitoiminta
huomioon ottaen. 



Sen sijaan itse ravitapahtumien kehittäminen
viihteellisempään suuntaan on nyt enemmän mahdollista kuin aiemmin, jolloin
raviurheilun tulovirta riippui suoraan hevospelaaminen tuotoista. Uusien
harrastajien saaminen ravien piiriin tapahtuu helpoiten urheilun kautta.
Raviradoista tulee kehittää viihtymispaikkoja, joihin paitsi meidän aktiivien
niin myös uusien asiakkaiden on miellyttävä tulla. Raviradat ovat päässee
valitettavan huonoon kuntoon ja ovat monelta osin 1980-luvun ”museoita”.
Halukkuus panostaa investointeihin on ollut aika pientä, koska ravien
katsominen on siirtynyt radoilta kotisohville, vaikka samanaikaisesti puhutaan
medianäkyvyyden vähenemisestä. Raviradat ovat ajautuneet negatiiviseen
lumipalloilmiöön. Katsojamäärä vähenee, joten investointeja katsomoinfraan ei
haluta tehdä, jolloin yleisön kiinnostus vähenee entisestään… Saman ongelman
kanssa painitaan muissakin kehittyneissä raviurheilunmaissa, joten kyseessä on
globaali ilmiö, jota vastaan on vaikea taistella.  



Ravien näkyvyys internetin ja mobiilin kautta on mielestäni
hyvä. Palvelun taso nykyaikaisissa kanavissa on vähintään riittävällä tasolla,
joten tämä ei ole perusongelma. Kuluttajilta vain puuttuu peruskiinnostus
raviurheilua kohtaan. Erikoisin Saastamoisen ehdotus lajin suosion nostamiseen
on kasvattajan aseman korostaminen. Myönnän suoraan tyhmyyteni, kun en ymmärrä
kasvattajan vertaamista muiden lajien ”oman kylän poikiin”. Väitän, että
kasvattajien esiintuominen ei lisää raviurheilun suosiota promillen vertaa! Kasvattajan
rooli on tärkeä koko raviurheilun ketjussa, mutta sillä ei ole mitään tekemistä
ravien suosion kanssa.  



Pelkään, että Saastamoisen suositukset veisivät raviurheilun
kohti ”koiranäyttely”-maailmaa ja se ei ole ainakaan minulle hevosten
omistajana ja pelaajana mielekäs tulevaisuus!</text><languageCode>fi</languageCode><locationCode /><coordinates /><links /><tags><tag>Uncategorized</tag><tag>ravit</tag><tag>raviurheilu</tag></tags><images /><indexedAt>2019-04-02T08:25:43Z</indexedAt><publishedAt>2019-04-02T08:25:16Z</publishedAt><reindexedAt>2019-04-02T08:25:43Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14394026137514889594</blogId><blogName>Gambling Guru</blogName><blogUrl>https://gamblingguru.blog</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>11192894253770141557</id><author>Mattias Rabe</author><url>https://teknikensvarld.se/extra-hard-polisbevakning-pa-vagarna/</url><title>Extra hård polisbevakning på vägarna</title><text>Hela vecka 14 är den svenska polisens nationella trafikinsatsvecka och eftersom fokus är hastighet så innebär det extra många fartkontroller i Sverige 1-7 april. 
Polisen kommenterar insatsen som följer: ”Vi genomför hastighetskontroller för att minska antalet skadade och dödade i trafiken. Var rädd om dig och andra och håll hastighetsgränserna!” 
Enligt Trafikverket innebär en minskning av medelhastigheten med en kilometer i timmen att många liv kan räddas. 
– Drygt hälften av trafikanterna kör för fort. Om alla håller hastighetsgränserna räddar vi minst hundra liv varje år, säger Maria Krafft, måldirektör Trafikverket, säger Maria Krafft, måldirektör på Trafikverket. 
Försöken att sänka medelhastigheten totalt görs alltså för att på så sätt minska antalet döda och svårt skadade i trafiken. Och därför bevakas även små hastighetsöverträdelser . 
– Vi ser att stora flertalet av de som kör för fort ligger mellan 6-10 kilometer i timmen över hastighetsbegränsningen. Tyvärr är små hastighetsöverträdelser vanliga och detta har stor effekt på medelhastigheten, säger Ursula Edström, trafikstrateg på polisen, och fortsätter: 
– Det är viktigt att människor förstår att små överträdelser har stor påverkan och att det handlar om deras egen och medtrafikanternas säkerhet, det handlar om att rädda liv, säger Ursula Edström. 
Trafikveckan genomförs i samtliga medlemsländer i EU. Kontrollerna kommer att genomföras såväl synligt, men även genom dold övervakning i video/pilot-fordon. 
– Målet är att få alla trafikanter att respektera trafikreglerna. Det handlar om deras egen och medtrafikanternas säkerhet, säger Ursula Edström. 
Katarina Fröberg, avdelningschef på Transportstyrelsen, säger att alla måste ta sitt ansvar. 
– Ett led i vårt arbete för att öka trafiksäkerheten är att varna eller återkalla körkort för förare som kör för fort, säger hon. 
På Facebook ber polisen också om tips på passande ställen att sätta upp fartkontrollerna.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Bil och trafik</tag><tag>Nyheter</tag><tag>fartkamera</tag><tag>hastighet</tag><tag>hastighetskontroll</tag><tag>hastighetsöverträdelse</tag><tag>polis</tag><tag>polisen</tag><tag>poliskontroll</tag></tags><images /><indexedAt>2019-04-02T08:25:45Z</indexedAt><publishedAt>2019-04-02T07:59:12Z</publishedAt><reindexedAt>2019-04-02T08:25:45Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>10073116195256459897</blogId><blogName>Teknikens Värld</blogName><blogUrl>https://teknikensvarld.se</blogUrl><blogRank>2</blogRank><authority>28</authority></post><post><id>6924144433153818167</id><author /><url>http://strimman.bloggo.nu/Avsluta/</url><title>Avsluta</title><text>Felet var inte mitt (Fiktivt) Min mobil ringer och jag hinner inte svara. Tar ett par steg tillbaka och då börjar min mobil att ringa igen. Brukar inte svara på okända nummer men hade inte glasögonen på så jag såg inte vem det var. Är det fru Ingesson? Ja, det är det! Då började mannen med en utskällning av dess like. Tror inte ens att han fick någon luft mellan orden.   Jag försöker flera gånger att avbryta honom för att få veta vem mannen är.  Ovett efter ovett öses över mig. Jag tror han drog upp om en osämja innan jag ens var född. Några namn klingade bekant men ändå inte. Förstår inte varför han är så arg? Till slut så presenterar han sig. Känner du inte igen mig Kerstin? Jag svarar att jag heter Ulla. Är det inte Kerstin Ingesson? Nej, detta är Ulla Ingesson. Kan det möjligtvis vara min makes ogifta faster som du menar?  Det blir tyst i mobilen. Hallå är du kvar frågar jag? Ja, jag är kvar. Ber så mycket om ursäkt!  Vad handlar allt detta om frågar jag. Jag heter Sture och en gång i tiden var jag och Kerstin förlovade. Det hände saker kring vårt förhållande som jag inte vill gå in på. Kan berätta att det blev jag som fick sitta i fängelset trots att det var hennes fel. Kerstin fick sina vänner att vittna falskt mot mig via hennes pengar. Nu är jag i behov av ett lån men banken vägrar att låna mig pengar på grund av att jag fick några års fängelsetid. Har aldrig känt mig så förutmjukad men jag behöver mitt lån och fick därför kämpa ned min ilska men det hjälpte inte. Därför tänkte jag ringa till Kerstin och skälla ut henne för allt ont hon har gjort mig. Har du hennes mobilnummer. Ett ögonblick sa jag. Återkom strax med Kerstins mobilnummer. Sture tackar vänligt och avslutar samtalet. Mobilen ringer igen efter någon timme. Det var Sture. Han vill bara berätta att han och Kerstin hade blivit sams. Dessutom så skulle hon ge honom de pengar han behövde plus ränta för det var hon skyldig honom efter alla dessa år. Jag kände ingen längtan efter att rota mera i allt detta för att få fram sanningen. Slutet var nog gott för mig. @ Ljusletaren  2 april 2019</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:26:00Z</indexedAt><publishedAt>2019-04-02T08:21:39Z</publishedAt><reindexedAt>2019-04-02T08:26:00Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>305917610004271971</blogId><blogName>En strimma av ljus</blogName><blogUrl>http://strimman.bloggo.nu</blogUrl><blogRank>1</blogRank><authority>1</authority></post><post><id>14905855748295959817</id><author /><url>http://mariestankar.bloggo.nu/Tankdans/</url><title>Tankdans</title><text>Jag är bara nöjd. Två nätter med sömn är fantastiskt. Trodde att jag inte kunde sova längre. Tankarna är lugna, ingen tankdans.   Njuter av mitt kaffe, solen strålar. Hoppas kunna få lov att sova under en vecka. Högsta önskan något som brukar var naturligt och bara fungera.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:26:01Z</indexedAt><publishedAt>2019-04-02T07:43:25Z</publishedAt><reindexedAt>2019-04-02T08:26:01Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>3082644479002114567</blogId><blogName>lika villkor</blogName><blogUrl>http://mariestankar.bloggo.nu</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>16694598125001028093</id><author>emmasundh</author><url>http://emmasundh.com/goder-drommarna-om-ett-orangeri/</url><title>Göder drömmarna om ett orangeri</title><text>Tyvärr, kan inte jobba i dag. Fick just denna på posten: “Trädgårdens glasade rum” av Peter Englander. 
För alla som drömmer om växthus eller orangeri. 
Eh, jag? 
Åh, det värker så av längt till torpet och trädgården just nu. Och längt efter det där drömmarnas orangeri. 
I slutet av april åker vi dit – och stannar i två veckor! Wiii! 
Inlägget Göder drömmarna om ett orangeri dök först upp på Emmas Vintage.</text><languageCode>sv</languageCode><locationCode>be</locationCode><coordinates /><links /><tags><tag>en dag eller en timme</tag><tag>orangeri</tag><tag>Peter Englander</tag><tag>Trädgårdens glasade rum</tag><tag>växthus</tag></tags><images /><indexedAt>2019-04-02T08:26:15Z</indexedAt><publishedAt>2019-04-02T07:58:08Z</publishedAt><reindexedAt>2019-04-02T08:26:15Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2605519013706711656</blogId><blogName>Emmas Vintage</blogName><blogUrl>http://emmasundh.com</blogUrl><blogRank>3</blogRank><authority>35</authority></post><post><id>2517050188226344415</id><author>rydenlotta</author><url>https://norumsbygdegard.se/2019/04/01/tradgardsmastaren-inspirerar/</url><title>Trädgårdsmästaren inspirerar</title><text>Tisdag 9 april kl. 18:30  kommer trädgårdsmästare Sonja Gladh med inspiration inför sommarens odlarglädje.  



 Entré inkl. kaffeservering och 1 st lott = 100 kr. 



Föranmälan senast 8/4 till: Birgitta 073-182 53 53 eller Eva-Marie 070-379 33 99 







Välkomna till Norums bygdegård</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Evenemang</tag></tags><images /><indexedAt>2019-04-02T08:26:29Z</indexedAt><publishedAt>2019-04-01T06:47:21Z</publishedAt><reindexedAt>2019-04-02T08:26:29Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>8384983820241530777</blogId><blogName>Norums Bygdegårdsförening</blogName><blogUrl>https://norumsbygdegard.se</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>8225802975939811098</id><author>norumsbygdegard</author><url>https://norumsbygdegard.se/2019/03/24/lunch-6/</url><title>Lunch</title><text>Välkommen till lunch



Onsdag 3 april kl. 12:00 



Meny: Ugnstekt lax med god sås, potatis, sallad, kaffe och kaka. 



Kom och ät, sitt i lugn och ro och njut, prata och umgås med varandra för 75 kr. 



Anmälan vill vi ha senast 31 mars till: Monica 330 32, 070-611 28 66 







Välkomna</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Lunch</tag></tags><images /><indexedAt>2019-04-02T08:26:29Z</indexedAt><publishedAt>2019-03-24T08:52:02Z</publishedAt><reindexedAt>2019-04-02T08:26:29Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>8384983820241530777</blogId><blogName>Norums Bygdegårdsförening</blogName><blogUrl>https://norumsbygdegard.se</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>10084044286651327429</id><author /><url>http://frojd.blogg.se/2019/april/min-nya-karlek-snuskigt-nojd.html</url><title>Min nya kärlek, snuskigt nöjd</title><text>Jag erkänner, jag har varit en rökare. I nästan halva mitt liv har jag blossat Lucky Strike, Marlboro och L&amp;M. Jag har dessutom gillat det. Alla cigaretter har inte varit goda, men de allra flesta har jag njutit av. Men så föddes MarathonMatilda och jag ... - Läs hela inlägget här</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>2019</tag></tags><images /><indexedAt>2019-04-02T08:26:38Z</indexedAt><publishedAt>2019-04-02T08:18:51Z</publishedAt><reindexedAt>2019-04-02T08:26:38Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>15056400877657342364</blogId><blogName>En ren Fröjd.</blogName><blogUrl>http://frojd.blogg.se</blogUrl><blogRank>1</blogRank><authority>2</authority></post><post><id>3796382773196705044</id><author /><url>http://frojd.blogg.se/2019/april/mandag-en-dag-att-stora-sig-pa.html</url><title>Måndag – en dag att störa sig på</title><text>Det är måndag, en extra bra dag att störa sig på saker. Jag stör mig på saker varje dag. Det finns något skönt i att vara lite puttrigt missnöjd. Idag stör jag mig på: Att man är så in i helvete ful hos frisören. Jag kan vara hur snygg som helst när jag ... - Läs hela inlägget här</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Fröken Fröjd</tag></tags><images /><indexedAt>2019-04-02T08:26:38Z</indexedAt><publishedAt>2019-04-01T12:10:55Z</publishedAt><reindexedAt>2019-04-02T08:26:38Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>15056400877657342364</blogId><blogName>En ren Fröjd.</blogName><blogUrl>http://frojd.blogg.se</blogUrl><blogRank>1</blogRank><authority>2</authority></post><post><id>5511889233154488578</id><author /><url>http://curlymandis.blogg.se/2019/april/godmorgon-tisdag.html</url><title>Godmorgon Tisdag</title><text>Solen skiner och jag är på världens bästa humör idag, är såå glad!!!!!  Igår kväll gick jag hem till Jesper och sov där inatt vilket var mysigt.  Så imorse gick jag upp vid sju tiden för Jesper skulle åka och jobba och jag gick hem och gjorde mig en super god frukost. Sen har jag bara legat i sängen och kollat youtube ett tag vilket jag älskar att göra på morgonen.  Vad händer idag då? Ja ska träffa Tina sen idag annars ska jag nog inte göra så mkt faktiskt hehe. Är sååå skönt väder idag så ska nog ta på mig och gå ut sen. Ska plugga lite teori också. Ska fan bli klar med mitt körkort nu.  
Om mindre än en vecka så kommer Matilda hem igen, äntligen. Hon ska vara här måndag till torsdag. Vad vi ska göra dessa dagarna återstår att se. Hoppas vädret är fint bara så vi kan vara ute så mycket som möjligt. 
Så är väll det som händer nu. Kom ihåg att ifall ni har frågor så ställ dom så svarar jag. 
Men hörni nu ska jag göra ve mig. Vi hörs under dagen. 
Puss &amp; Kram 
/ CURLYMANDIS</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Allmänt</tag></tags><images /><indexedAt>2019-04-02T08:26:38Z</indexedAt><publishedAt>2019-04-02T08:17:43Z</publishedAt><reindexedAt>2019-04-02T08:26:38Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>1113988318818740970</blogId><blogName>Curlymandis.blogg.se</blogName><blogUrl>http://curlymandis.blogg.se</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>380459230641148498</id><author>Elleinn</author><url>https://nouw.com/elleinn/god-morgon-35750595</url><title>God morgon</title><text>Ännu en ny vecka! Stora är på Föris och jag är hemma med lillebror. Ska strax slänga mig i en dusch och testa mina nya schampon och grejer som jag beställde från skincity.se håll tummarna att lillebror håller sig i skinnet så jag får ta mig en ordentlig dusch. Har redan hunnit med ett Mammamage pass. Nu jäklar ska jag bli stark. Och i slutet av veckan ska får jag hem ståbräda till vagnen så jag kan promenera med båda barnen. Så snart blir det promenad till och från Föris. Nä dags att ta tag i denna dag. Ha det fint.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:26:41Z</indexedAt><publishedAt>2019-04-02T08:26:29Z</publishedAt><reindexedAt>2019-04-02T08:26:41Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>13510982288035498965</blogId><blogName>Elleinn blogg</blogName><blogUrl>https://nouw.com/elleinn</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>6322744724751721894</id><author>knightsan04</author><url>https://optimisthunter.wordpress.com/2019/04/01/summer-reads-5/</url><title>Summer Reads</title><text>Summer Reads</text><languageCode>da</languageCode><locationCode>es</locationCode><coordinates /><links /><tags><tag>Uncategorized</tag></tags><images /><indexedAt>2019-04-02T08:26:46Z</indexedAt><publishedAt>2019-04-01T19:41:19Z</publishedAt><reindexedAt>2019-04-02T08:26:46Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>5318764325957401088</blogId><blogName>Optimist Hunter</blogName><blogUrl>https://optimisthunter.wordpress.com</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>16212679812189220845</id><author>noreply@blogger.com (Bjorn Rappe)</author><url>http://bjornrappe.blogspot.com/2019/03/torskpaket-med-rakor-och-kal.html</url><title>Torskpaket med räkor och kål</title><text>För 4 personer: Ingredienser 4 bitartorsk- eller sejfilé, MSC- eller ASC-märkt (à 150 g) 1 dlsalt 1 litervatten, kallt 1fänkålsstånd, litet, med dill 300 gsavojkål 500 gräkor, med skal 1 tskcitronskal, rivet 75 gsmör 2 tsksoja, japansk 2 tskcitron, pressad Potatiskross med bacon: 700 g	potatis 2 msk	smör 1 dl	mjölk 1 tsk	salt 4 skivor	bacon   Sätt ugnen på 200°. Rör salt och vatten tills saltet löses upp. Lägg i fiskbitarna och låt dem ligga i rimlagen ca 10 min, ta upp och torka av med hushållspapper. Ansa och skär fänkål och savojkål tunt. Spara ”dillen” på fänkålen. Förväll kålen ca 1 minut i kokande lättsaltat vatten. Låt rinna av. Lägg högar av kålen på fyra bitar bakplåtspapper.Lägg en bit fisk på varje hög. Vik ihop till luftiga paket med kål och fisk i mitten. Knyt ihop ändarna och lyft över paketen på en plåt.Ugnsbaka mitt i ugnen ca 15 min, till 54°. Skala räkorna, blanda med citronskal och fänkålsdill.Skala och koka potatisen mjuk, mosa med potatisstöt till ett kross. Blanda ner smör, mjölk och salt. Stek baconet knaprig. Hacka och vänd ner det i potatiskrosset.Bryn smöret på medelvärme. Blanda smör, soja och citron. Rör om så det skummar.Servera paketen med räkorna och skeda över smöret. Potatiskross serveras vid sidan om.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Fisk</tag></tags><images /><indexedAt>2019-04-02T08:27:04Z</indexedAt><publishedAt>2019-03-31T10:03:00Z</publishedAt><reindexedAt>2019-04-02T08:27:04Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>5491655707897621733</blogId><blogName>Björns Recept</blogName><blogUrl>http://bjornrappe.blogspot.com</blogUrl><blogRank>1</blogRank><authority>1</authority></post><post><id>11632264408595592557</id><author>sqquash</author><url>https://nouw.com/sqquash/laxpasta-35750167</url><title>LAXPASTA</title><text>Du behöver: Lax Pasta Grädde Mjölk Citron Citronpeppar DillGör såhär: - Skär laxen i tärningar och stek tillsammans med dill och citronpeppar.  - Koka pastan enligt förpackningen. - När laxen och pastan är färdig häller du över laxen i pastan.  - Häll i grädde och fyll ut med mjölk om du vill ha mer kräm.  - Skär 3 citronskivor och lägg i röran.  - Lägg på lock och låt stå cirka 10 min innan du serverar.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Mat och träning</tag></tags><images /><indexedAt>2019-04-02T08:27:18Z</indexedAt><publishedAt>2019-04-02T08:27:00Z</publishedAt><reindexedAt>2019-04-02T08:27:18Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>15261377184608854324</blogId><blogName>sqquash blogg</blogName><blogUrl>https://nouw.com/sqquash</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>11425095297263590423</id><author>Jeremias</author><url>https://jeremiasberg.com/2019/04/01/resedagbok-9-chride-i-kanada/</url><title>Resedagbok 9: Chride i Kanada</title><text>Just som jag blev van med en extra timme tid för att skriva blogginläggen så blev det sommartid i Finland. Nu är det igen 7 timmars tidsskillnad och jag borde börja lite tidigare med att skriva dessa inlägg. Dessutom så har jag hela dagen idag haft huvudvärk, kan hända att detta inlägg därmed blir (ännu) mindre slipat än vanligt  #firstworldproblems. 
Förra veckan var Chride på besök. Med sig hämta hon mina vårkläder samt ett påminnelse av vardagen i Helsingfors. Dagen efter att hon for och tog med sig mina vinterskor så snöar det igen här… Får jag komma hem redan? 
Eftersom vi båda hade jobb att göra under veckan så hade vi inte planerat in riktigt lika mycket program som men Lasse &amp; Emppu. Även så så hitta vi sist och slutligen på ganska mycket olika saker. På söndagen var vi på cocktail kurs. Kursen ordnades på Pray Tell Bar några timmar före baren öppna. Det var bara vi två och instruktören, vi laga tre cocktails: en gin sour, en margarita och en espresso martini. Speciellt den sista var spännande för mig eftersom jag inte direkt kom på när jag skulle ha smakat på en kall kaffecocktail tidigare. Är lite osäker på om jag borde kalla det hela “en kurs” eller “en upplevelse”, att laga cocktails är nämligen enklare i en fullt utrustad bar än hemma. Oberoende så had vi ganska kul, vi lärde oss att Chride är bättre än mig på att shakea… cocktails. Efteråt började vi våran undersökning av vegan restaurangerna i Toronto med virtuous pie. 
Början av veckan gick ganska långt åt till jobbande. Jag tog Chride med mig till universitetet, hon fick sitta vid det andra bordet i mitt rum. De två professorerna i gruppen jag jobbar med reagera på Chrides närvaro på väldigt olika sätt. “Min” professor kom in i rummet för att söka mig för ett impromptu möte och ignorera ganska långt Chride. Den andra professorn (som jag inte egentligen umgås med alls) såg Chride i rummet och kom genast för att fråga henne vem hon är. Ingendera hade något emot att Chride var där, jag tycker bara att deras individuella reaktioner säger en hel del om deras personligheter. På tisdagen efter jobbet fortsatte vi utforska vegan restaurangerna med Fresh on Spadina. Efteråt var vi på IMAX för att se Captain Marvel; enligt mig en “lite bättre Marvel film” med en mycket bättre “slutfightscen”. 
På onsdagen var det dags för eventuellt veckans höjdpunkt. Vi var och se på Dear Evan Hansen, en musikal om ensamhet och marginalisering av ungdomar under sociala medians tid. Senaste gången vi var på musikal på tumis var vi och se Phantom of the Opera i London och precis som då så satt vi på den högsta balkongen på dom ev. billigaste platserna i teatern. Tur nog så handlar musikaler mer om att höra än att se, så vi hade nog trevligt ändå, även om ämnet var lite tungt. Jag var speciellt nöjd med att raderna på balkongen vi satt på var tillräckligt branta för att inte jag var i vägen för de som satt bakom oss #tallpersonproblems. 
Vi börjar så småningom närma oss slutet av denna resa och därmed även resebloggen. Det som återstår är nästa veckans resa till Atlanta för att hälsa på mammas “amerikasyster” och hennes familj. Detta, samt resten av Chrides besök, får ni höra om i de två blogginläggen som återstår.</text><languageCode>sv</languageCode><locationCode /><coordinates /><links><link>http://www.praytellbar.com/</link><link>https://www.virtuouspie.com/locations/canada/college-st/?menu=open&amp;active=yes</link><link>https://www.freshrestaurants.ca/</link><link>https://www.mirvish.com/shows/dear-evan-hansen</link></links><tags><tag>resedagbok</tag><tag>evan hansen</tag><tag>musika</tag><tag>vegan food</tag></tags><images /><indexedAt>2019-04-02T08:27:28Z</indexedAt><publishedAt>2019-04-01T04:00:05Z</publishedAt><reindexedAt>2019-04-02T08:27:28Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>5578679523999262886</blogId><blogName>Jeremias Berg</blogName><blogUrl>https://jeremiasberg.com</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>3036480949649365372</id><author>Piia</author><url>https://opiskelijanharjoitusblogi.blogspot.com/2019/04/digitaalinen-media-koulussa.html</url><title>Digitaalinen media koulussa</title><text>Osan opinnoistani suoritan jo verkkokursseina, joten sen vuoksi jo digitaalista mediaa tulee käytettyä. Mutta myös muiden opiskeltavien aineiden kohadalla tulee hyödynnettyä enemmän ja vähemmän digitaalista mediaa. Niin koulussa kuin vapaa-ajallakin koulutehtävien tekoon, mutta myös kaikkeen muuhunkin hyödylliseen ja viihtymiseen. Tulee käytettyä #Optima:a, #Moodlea, #Office365:sta ja #Google:n palveluita enimmäkseen koulutehtävien suorittamiseen.Koululla opettajien en hirveästi ole törmännyt digitaalisen media hyödyntämiseen  opetukseen. Poikkeuksena on verkkokurssit, joissa hyödynnetään hyvin ja monipuolisesti ditaalista mediaa opinnoissa. Itseäni tietoverkon suomat mahdollisuudet helpottaa paljonkin opintoja, muutoin pystyisi tekemään töitä, suorittamaan työharjoittelua ja opintoja samanaikaisesti. Tulee hetkiä, jolloin pystyn hivenen edistämään opintoja kirjoittamalla tai etsimällä tietoa ja lisäämällä nettilinkkejä joita voin hyödyntää tehtävien teossa.Suosin pöytäkonetta tai läppäriä, mutta välillä on käytettävä tablettia tai älypuhelinta.En nyt kykene juurikaan paneutumaan tähän tehtävään alkavan #migreeni:n lomassa, mutta kirjoitimpa muutaman sanan aiheesta digitaalinen media koulussa. Ehkä jossain vaiheessa on tekstiä täydennettävä.</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links /><tags><tag>#hästäg</tag><tag>Google</tag><tag>Moodle</tag><tag>Office365</tag><tag>Optima</tag></tags><images /><indexedAt>2019-04-02T08:27:43Z</indexedAt><publishedAt>2019-04-02T07:56:00Z</publishedAt><reindexedAt>2019-04-02T08:27:43Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>6479250487643609882</blogId><blogName>Matkalualan opiskelijan blogi</blogName><blogUrl>https://opiskelijanharjoitusblogi.blogspot.com/</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>489515405996303676</id><author>Piia</author><url>https://opiskelijanharjoitusblogi.blogspot.com/2019/03/blogin-luominen.html</url><title>Blogin luominen</title><text>Oli helppoa valita blogin alusta kahdesta vaihtoehdosta, Bloggerista tai WordPressistä. Koska käytän jo Google sähköpostia ja pilvipalvelua, niin luonnollista oli, että otan samantien Blogger käyttöön. Helpotta hieman, että pystyn samalla tunnuksella ja salasanalla käyttämään kaikkia.  Digitaalisen median palveluista eniten tulee käytettyä #Twitteri:ä, koska olen siellä ollut jo vuosia aktiivinen. #Instagram:iin ja #MeWe:en latailen kuvia viikottain. Facebookissa on kyllä vielä tili olemassa, mutta en juurikaan käytä sitä. Olen jo jonkin aikaa pohtinut Facebookin sulkemista jatkuvien tietosuojaongelmien vuoksi.  Käytän #Google:n #pilvipalvelu:ja ahkerasti. Vaikka Googlellakin on maineensa, mutta se oli aikoinaan helpoimpia tapoja käyttää pilvipalveluja ja oli heti kättelyssä reilusti ilmaista tallennustilaa. Nykyään vaihtoehtoja on ja niitä on tullut testattua, mutta olen todennut, että ilmainen tila loppuu melko nopeasti, jos sinne tallentaa myös valokuvia ja videoita. Kun käytän älypuhelinta ja tablettia, niin kuvat tulee päivitettyä samantien pilveen. Koulutehtäviä puolestaan teen mieluusti koulun pöytäkoneella.</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links /><tags><tag>#hästäg</tag><tag>Facebook</tag><tag>Google</tag><tag>Insta</tag><tag>MeWe</tag><tag>pilvipalvelut</tag><tag>Twitter</tag></tags><images /><indexedAt>2019-04-02T08:27:43Z</indexedAt><publishedAt>2019-03-27T08:51:00Z</publishedAt><reindexedAt>2019-04-02T08:27:43Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>6479250487643609882</blogId><blogName>Matkalualan opiskelijan blogi</blogName><blogUrl>https://opiskelijanharjoitusblogi.blogspot.com/</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>11236100722351409654</id><author>MammaMadsen</author><url>https://nouw.com/mammamadsen/tortellinigratang-35750599</url><title>Tortellinigratäng </title><text>Middagstips denna tisdag får bli den här enkla Tortellinigratängen‍receptet är jätte enkelt att dubbla och du kan använda valfri tortellini, så vill du äta vegetariskt så är det bara att välja en sådan tortellini‍ Till 2 port behöver du: 1 förpackning färsk tortellini ( 250gr) 1 burk pastasås 125 gr mozzarella  50 gr skivade färska champinjoner  Till garnering :  Riven parmesan Ruccola  Lite rostade pinjenötter  Gör så här: Sätt ugnen på 225’ Lägg tortellinin i en ugnsfast smord form Blanda ner pastasås och champinjoner  Dela mozzarellan i bitar och lägg på toppen In i ugnen ca 20-25 min Toppa med ruccola , parmesan och pinjenötter</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:27:43Z</indexedAt><publishedAt>2019-04-02T08:27:29Z</publishedAt><reindexedAt>2019-04-02T08:27:43Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>11714775975867281849</blogId><blogName>MammaMadsen blog</blogName><blogUrl>https://nouw.com/mammamadsen</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>5229660260387891027</id><author /><url>http://wibbans.blogg.se/2019/april/igar-sondag-sista-dagen-pa-veckan.html</url><title>igår söndag sista dagen på veckan.</title><text>Blev en sen ridtur igår men väldigt skönt att kunna rida kl 19 på kvällen  :) Pigg och okoncentrerad häst hade jag på uteritten;) Fick jobba hårt för att då honom att jobba lite grann xD  Första gången jag rider honom såhär sent ut. Vi stötte även på ... - Läs hela inlägget här</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Hopeful W</tag></tags><images /><indexedAt>2019-04-02T08:27:43Z</indexedAt><publishedAt>2019-04-01T05:40:42Z</publishedAt><reindexedAt>2019-04-02T08:27:43Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>4105894228472784555</blogId><blogName>wibbans.blogg.se</blogName><blogUrl>http://wibbans.blogg.se</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>14369840949827711172</id><author /><url>http://wibbans.blogg.se/2019/april/mandag-och-lite-hoppning-pa-schemat.html</url><title>måndag och lite hoppning på schemat</title><text>Eller markarbete kanske man ska säga ;) Började med att galoppera över galoppbommar.  Super taggad och lite ofokuserad i början men sen så blev de bättr3 emot slutet ;) Sen hoppade vi fyrkanten som jag kallar dem har säkert ett annat namn ;) Hoppe var ... - Läs hela inlägget här</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Hopeful W</tag></tags><images /><indexedAt>2019-04-02T08:27:43Z</indexedAt><publishedAt>2019-04-02T08:26:14Z</publishedAt><reindexedAt>2019-04-02T08:27:43Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>4105894228472784555</blogId><blogName>wibbans.blogg.se</blogName><blogUrl>http://wibbans.blogg.se</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>7025557042127081733</id><author>Beatrice Rindevall</author><url>http://supermiljobloggen.se/nyheter/2019/04/forskare-vill-gora-naturen-vit-ska-reflektera-tillbaka-solstralar-nar-arktis-smalt</url><title>Forskare vill göra naturen vit: ”Ska reflektera tillbaka solstrålar när Arktis smält”</title><text>Det globala istäcket smälter i allt snabbare takt, vilket förutom havshöjning leder till att färre solstrålar reflekteras tillbaka ut i rymden. Nu vill forskare motverka uppvärmningseffekten genom att på manipulerad väg göra växter vita. 
- Egentligen borde vi göra allt vitt! Husen, asfalten, och även våra kreatur. Ullen från får och lamm kan behandlas med glansmedel, och vita kor och hästar med glansig päls borde ha någon typ av klimatkompensationsmärkning för att stimulera marknaden, säger professor B. Leach vid universitetet i Whitechapel. 
&gt;&gt; Läs mer om solstrålarnas reflektion  
I de nordiska länderna är vi vana vid vita landskap stora delar av året, men på många andra ställen skulle förändringen bli chockartad. 
- Det har funnits vissa naturvetenskapliga utmaningar, som att insekter är inställda på att leta efter blommor med färg och att klorofyllet de facto är grönt, men det är just där vi haft vårt genombrott. Vi har kunnat manipulera växterna så att de är funktionsdugliga även som vita, säger B. Leach. 
Leach tycker att forskarsamfundet ska fortsätta titta på hur man bäst kan göra även haven, öknarna och bergen vita. I dagsläget ser professorn inga andra trovärdiga sätt att hantera klimatutmaningen. 
- Jag ser inte vad det skulle vara. På det här sättet behöver vi inte förändra vår livsstil, utan omgivningen gör jobbet åt oss. Alternativet skulle ju vara att vi slutade bränna olja och kol, och hur skulle en sådan värld se ut egentligen? Nej, enligt mig är det bättre att göra den vit, säger professorn. 

SMB tar april på allvar. Sedan starten 2010 har våra utgifter helt täckts av oss skribenter. Nu vill vi utveckla hemsidan och vårt arbete – och vi hoppas att du vill hjälpa oss. 
Swisha en slant till 123 270 12 33 för att stötta vårt arbete.  

&gt;&gt;Läs mer om vad vi vill göra här</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>https://www.svt.se/vader/fragor_och_svar/solstralningens-reflektion</link></links><tags><tag>Nyheter</tag><tag>1 April</tag><tag>Klimat</tag></tags><images /><indexedAt>2019-04-02T08:28:05Z</indexedAt><publishedAt>2019-04-01T12:11:26Z</publishedAt><reindexedAt>2019-04-02T08:28:05Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>4353428812347119809</blogId><blogName>- Oberoende miljövänlig</blogName><blogUrl>http://supermiljobloggen.se</blogUrl><blogRank>7</blogRank><authority>731</authority></post><post><id>11219687788647627184</id><author>Joel Gordon Hultsjö</author><url>http://supermiljobloggen.se/nyheter/2019/03/ur-plays-gomda-streamskatter</url><title>UR-Plays gömda streamskatter</title><text>Det är inte alltid lätt att hitta rätt i havet av dokumentärer och tv-serier om klimatet och miljön på internet. SMB hjälper till på vägen och gräver oss ner i UR-plays utbud i jakt på ett par guldklimpar. 
 

Miljökämpen i Iran.

Denna självbiografiska dokumentär handlar om den iranska kvinnan Hayedeh Shirzadis liv och hennes kamp för att förbjuda dumpningen av sopor i hennes hemstad Kermanshah i Iran. Det kanske låter som en bagatell, men det krävdes en tysk doktorsexamen i lantbruksvetenskap och en stark vilja för att som kvinna kunna åta sig denna uppgift. Rekommenderas för alla som är intresserade av vilken kraft och envishet som kan förändra ett land. 
Filmen är  51 minuter lång och tillgänglig till 31 juli 2020. 
2. Klimatförändringens hjältar 
I dokumentärserien Klimatförändringens hjältar följer vi den welshiska naturgeografen Siwan Davies genom världen i klimathotets fotspår. Varje avsnitt är indelat efter platserna hon besöker och i varje avsnittet hör vi lokala klimataktivister, myndighetsföreträdare och forskare som spårar klimatförändringarnas påverkan bakåt i historien. 
En dokumentär för den historiska intresserade klimatnörden likväl för den som vill ha en crashcourse i hur miljöförändringar påverkar olika delar av världen på olika sätt. 
Varje avsnitt är på cirka 50 minuter och serien är i flera delar. Det tredje avsnittet släpps den 29 mars. 
3. UR Samtiden: det här förändrar allt - samtal med Naomi Klein 
2014 tog den redan tidigare kända kanadensiska journalisten Naomi Klein västvärlden med storm med sin faktafyllda bok Det här förändrar allt: Kapitalismen kontra klimatet. I detta samtal från 2015 i Stockholms kulturhus så diskuterar Klein med klimatforskningens superstjärna Johan Rockström om boken. Samtalet berör allt mellan himmel och jord, och är en bra introduktion till Kleins gedigna journalistiska arbete. 
Rekommenderas för alla som vill fundera kring klimatet och miljöns relation till samhället. 
Samtalet är 60 minuter långt och finns tillgängligt fram till 1 juli 2020. 

+ swishtext 
Rubrikförslag: Tre streamskatter till helgen</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://en.womenrightful.com/hayedeh-shirzadi-irans-waste-recycling-pioneer</link><link>https://www.urplay.se/program/208339-miljokampen-i-iran</link><link>https://climatechange.umaine.edu/2017/09/14/visiting-professor-launches-new-tv-documentary-on-climate-change</link><link>https://www.urplay.se/serie/208216-klimatforandringens-hjaltar</link><link>https://www.theguardian.com/books/2014/sep/19/this-changes-everything-capitalism-vs-climate-naomi-klein-review</link><link>https://www.urplay.se/program/192584-ur-samtiden-det-har-forandrar-allt-samtal-med-naomi-klein</link></links><tags><tag>Nyheter</tag><tag>Återvinning</tag><tag>Film</tag><tag>Klimat</tag><tag>Klimatförändringar</tag><tag>Miljö</tag><tag>SMB Kultur</tag><tag>Sopor</tag></tags><images /><indexedAt>2019-04-02T08:28:05Z</indexedAt><publishedAt>2019-03-31T09:29:54Z</publishedAt><reindexedAt>2019-04-02T08:28:05Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>4353428812347119809</blogId><blogName>- Oberoende miljövänlig</blogName><blogUrl>http://supermiljobloggen.se</blogUrl><blogRank>7</blogRank><authority>731</authority></post><post><id>8124839474395676556</id><author>Ami</author><url>https://rendahlispanien.wordpress.com/2019/04/02/efter-regn-kommer-sol-2/</url><title>Efter regn kommer sol!</title><text>Det är inte ofta det regnar i Torrevieja men i söndags regnade det precis hela dagen. Igår morse såg inte vädret något vidare ut heller, men regnar det inte så blir det promenad. 
 
Se där, 1 april och parasailingen var i gång. 
 
Piren har träplank som underlag och är väldigt slitna, det händer att de går sönder lite nu och då.  Men nu hade de varit och bytt en del så det blev helt randigt.  Man byter inte alla utan bara det som är sämst. Man måste spara på jobben. 
 
Cableskin med tillhörande restaurang har varit stängd några månader, men igår var det folk som började plocka ut saker så det dröjer inte länge innan de också är igång. 
 
Men se, efter regn kommer solsken precis som appen lovat och vi gick till Deni´s och satte oss i värmen. 
 
Och med solen kom strandfolket.</text><languageCode>sv</languageCode><locationCode>hk</locationCode><coordinates /><links><link>https://rendahlispanien.files.wordpress.com/2019/04/en-molning-dag.jpg</link><link>https://rendahlispanien.files.wordpress.com/2019/04/1-april-parasailing.jpg</link><link>https://rendahlispanien.files.wordpress.com/2019/04/renovering-av-piren-torrevieja.jpg</link><link>https://rendahlispanien.files.wordpress.com/2019/04/1-april-cableski-torrevieja.jpg</link><link>https://rendahlispanien.files.wordpress.com/2019/04/denis-2019-torrevieja.jpg</link><link>https://rendahlispanien.files.wordpress.com/2019/04/1-april-torrevieja-2019.jpg</link></links><tags><tag>Vardagen i Torrevieja</tag><tag>efter regn kommer sol</tag></tags><images /><indexedAt>2019-04-02T08:28:08Z</indexedAt><publishedAt>2019-04-02T06:22:37Z</publishedAt><reindexedAt>2019-04-02T08:28:08Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>17120664556380361812</blogId><blogName>Rendahl i Spanien</blogName><blogUrl>https://rendahlispanien.wordpress.com</blogUrl><blogRank>2</blogRank><authority>18</authority></post><post><id>15815508003742249412</id><author>Wille Wilhelmsson</author><url>https://feber.se/film/art/395437/ny_teaser_fr_game_of_thrones_s/?from=rss</url><title>Ny teaser för Game of Thrones sista säsong</title><text>Dags att börja kriga tillsammans nu?  
		
		
				
				
				  
			
			
		
		
		
		Nu är det inte många dagar kvar innan vi kan börja följa upplösningen i HBO:s fantasyserie Game of Thrones och här kommer den senaste teasern inför det. 
 
 Man kallar teasern för "Together" vilket jag antar att anspelar på att alla människor i Westeros måste sluta sig samman för att möta hotet från armén med White Walkers som vandrade in i deras land förra säsongen.
 
 HBO Nordic kommer att börja sända den åttonde och avslutande säsongen av Game of Thrones 15 april.  
		
		
																						

		
		  
		
			Läs vidare och kommentera: 

			https://feber.se/film/art/395437/ny_teaser_fr_game_of_thrones_s/</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>https://www.feber.se/film/art/395437/ny_teaser_fr_game_of_thrones_s/?from=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:28:22Z</indexedAt><publishedAt>2019-04-02T07:30:00Z</publishedAt><reindexedAt>2019-04-02T08:28:22Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2315043347664720807</blogId><blogName>Feber</blogName><blogUrl>http://feber.se</blogUrl><blogRank>6</blogRank><authority>410</authority></post><post><id>16267711187357128535</id><author>Bobby Green</author><url>https://feber.se/bil/art/395435/audi_visar_skisser_p_aime/?from=rss</url><title>Audi visar skisser på AI:me</title><text>En självkörande liten bil för megastäder  
		
			  
		
		
		
		
		Den 15 april kommer Audi att visa upp en ny konceptbil på Shanghai Motor Show. Den kallas för AI:me och det är en kompakt bil som är speciellt framtagen för framtidens megastäder. Den är helt självkörande och namnet antyder ju helt klart att den innehåller massa artificiell intelligens. 
		
		
			 
			
				
			
				
			
				
			
			 
		
																						

		
			
		
		  
		
			Läs vidare och kommentera: 

			https://feber.se/bil/art/395435/audi_visar_skisser_p_aime/</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>https://www.feber.se/bil/art/395435/audi_visar_skisser_p_aime/?from=rss</link><link>https://www.feber.se/bil/art/395435/audi_visar_skisser_p_aime/?from=rss</link><link>https://www.feber.se/bil/art/395435/audi_visar_skisser_p_aime/?from=rss</link><link>https://www.feber.se/bil/art/395435/audi_visar_skisser_p_aime/?from=rss</link><link>https://www.feber.se/bil/art/395435/audi_visar_skisser_p_aime/?from=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:28:22Z</indexedAt><publishedAt>2019-04-02T07:45:00Z</publishedAt><reindexedAt>2019-04-02T08:28:22Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2315043347664720807</blogId><blogName>Feber</blogName><blogUrl>http://feber.se</blogUrl><blogRank>6</blogRank><authority>410</authority></post><post><id>17419410978602488411</id><author>Wille Wilhelmsson</author><url>https://feber.se/internet/art/395436/cloudflare_lgger_in_vpn_sin_dn/?from=rss</url><title>Cloudflare lägger in VPN sin DNS-app</title><text>Ska göra saker och ting lite snabbare  
		
			  
		
		
		
		
		Förra året släppte molnföretaget Cloudflare sin krypterade DNS-tjänst 1.1.1.1 som en app och nu lägger man in en VPN-funktion i denna som man säger ska göra det hela ännu lite snabbare.
 
 Ofta används VPN-tjänster för att maskera var användaren befinner sig men detta är inget som 1.1.1.1-appen kommer att få stöd för. Istället är tanken med VPN-tjänsten att man ska snabba upp DNS-uppslagningen och i den mån det är möjligt även kryptera data som överförs när detta görs. Man kallar funktionen för Warp och skriver själva om den i ett blogginlägg:
 "We built Warp because we’ve had those conversations with our loved ones too and they’ve not gone well. So we knew that we had to start with turning the weaknesses of other VPN solutions into strengths. Under the covers, Warp acts as a VPN. But now in the 1.1.1.1 App, if users decide to enable Warp, instead of just DNS queries being secured and optimized, all Internet traffic is secured and optimized. In other words, Warp is the VPN for people who don't know what V.P.N. stands for."
 Cloudflares 1.1.1.1-app med Warp kommer att vara gratis medan det även kommer att gå att köpa till tjänsten "Warp+" vilken ska göra det hela ännu lite snabbare skriver Cloudflare:
 "We’re also working on a premium version of Warp — which we call Warp+ — that will be even faster by utilizing Cloudflare’s virtual private backbone and Argo technology."
 Ni hittar Cloudflares 1.1.1.1-app med Warp gratis till iOS i App Store här och till Android på Google Play här. Det är oklart när premiumfunktionen Warp+ kommer att släppas till 1.1.1.1. 
		
		
																						

		
			blog.cloudflare.com
		
		  
		
			Läs vidare och kommentera: 

			https://feber.se/internet/art/395436/cloudflare_lgger_in_vpn_sin_dn/</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>https://www.feber.se/internet/art/395436/cloudflare_lgger_in_vpn_sin_dn/?from=rss</link><link>https://itunes.apple.com/us/app/1-1-1-1-faster-internet/id1423538627?mt=8</link><link>https://play.google.com/store/apps/details?id=com.cloudflare.onedotonedotonedotone</link><link>https://blog.cloudflare.com/1111-warp-better-vpn</link><link>https://www.feber.se/internet/art/395436/cloudflare_lgger_in_vpn_sin_dn/?from=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:28:22Z</indexedAt><publishedAt>2019-04-02T07:15:00Z</publishedAt><reindexedAt>2019-04-02T08:28:22Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2315043347664720807</blogId><blogName>Feber</blogName><blogUrl>http://feber.se</blogUrl><blogRank>6</blogRank><authority>410</authority></post><post><id>4229327326316644030</id><author>Wille Wilhelmsson</author><url>https://feber.se/samhalle/art/395439/japan_har_ftt_en_ny_tidsperiod/?from=rss</url><title>Japan har fått en ny tidsperiod</title><text>1 maj går vi in i Reiwas tideräkning  
		
			  
		
		
		
		
		I slutet av den här månaden kommer Japans kejsare Akahito att abdikera vilket innebär att hans son kronpris Naruhito kommer att krönas till ny kejsare av Japan den 1:a maj.
 
 Det innebär även att den japanska tidsperioden Heisei avslutas och en ny tidsperiod inleds. Igår avslöjade Japan att den nya tidsperioden kommer att få namnet "Reiwa" vilket skrivs med de två kanji-tecknen som visas på bilden ovan. Tecknen betyder "ordning" och "fred" vilket också kan tolkas som "harmoni".
 
 De båda tecknen kommer nu bland annat att pryda framtida sedlar och mynt i Japan såväl som att spela en stor betydelse i den japanska kalendern. Enligt den japanska kalendern kommer året Hesei 31 att avslutas 30 april och därefter inleds året Reiwa 1 maj.
 
 På grund av kalenderförändringen så har såväl Microsoft som japanska myndigheter gått ut med varningar om att vissa system som tar hänsyn till den japanska tideräkningen kanske inte är uppdaterade för att inkludera en sådan här förändring. Man kan väl kalla det en slags Y2K-bugg i miniatyr. 
 
 Förutom kalenderproblemet så har det ställt till lite problem för världens digitala teckenstandard Unicode då det fram tills igår saknades både namn och teckenrepresentation på den kommande tidsperioden. Nu har man dock ett tecken och det finns redan en reserverad plats för det nya tecknet som för tillfället går under beteckningen "U+32FF".  
		
		
																						

		
			edition.cnn.com
		
		  
		
			Läs vidare och kommentera: 

			https://feber.se/samhalle/art/395439/japan_har_ftt_en_ny_tidsperiod/</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>https://www.feber.se/samhalle/art/395439/japan_har_ftt_en_ny_tidsperiod/?from=rss</link><link>https://www.compart.com/en/unicode/U+32FF</link><link>https://edition.cnn.com/2019/03/31/asia/japan-new-era-reiwa-intl</link><link>https://www.feber.se/samhalle/art/395439/japan_har_ftt_en_ny_tidsperiod/?from=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:28:22Z</indexedAt><publishedAt>2019-04-02T08:15:00Z</publishedAt><reindexedAt>2019-04-02T08:28:22Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2315043347664720807</blogId><blogName>Feber</blogName><blogUrl>http://feber.se</blogUrl><blogRank>6</blogRank><authority>410</authority></post><post><id>13937914726967560224</id><author>Wille Wilhelmsson</author><url>https://feber.se/internet/art/395438/kry_kper_shim/?from=rss</url><title>Kry köper Shim</title><text>Nätläkare köper upp terapiapp  
		
			  
		
		
		
		
		DI Digital rapporterar att nätläkartjänsten Kry köper upp företaget bakom terapiappen Shim som släpptes här i Sverige hösten 2017. 
 
 Sedan dess har appen lanserats i USA och går nu under namnet Enjo. När Kry nu köper upp Shim/Enjo kommer dock satsningen på terapiappen läggas ner och den kommer att försvinna från marknaden. Istället är det tänkt att teamat bakom appen ska hjälpa Kry att utveckla terapi- och självhjälpsfunktioner på deras plattform.
 
 Vad Kry betalade för Shim finns det inga uppgifter om. Företaget gick sju miljoner back förra året och enligt DI Digital ska appen ha haft en "trög start".  
		
		
																						

		
			digital.di.se
		
		  
		
			Läs vidare och kommentera: 

			https://feber.se/internet/art/395438/kry_kper_shim/</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>https://www.feber.se/internet/art/395438/kry_kper_shim/?from=rss</link><link>https://www.feber.se/mobil/art/373413/shim_r_appen_du_kan_prata_med</link><link>https://digital.di.se/artikel/kry-koper-svensk-terapi-app-som-laggs-ned</link><link>https://www.feber.se/internet/art/395438/kry_kper_shim/?from=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:28:22Z</indexedAt><publishedAt>2019-04-02T08:00:00Z</publishedAt><reindexedAt>2019-04-02T08:28:22Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>2315043347664720807</blogId><blogName>Feber</blogName><blogUrl>http://feber.se</blogUrl><blogRank>6</blogRank><authority>410</authority></post><post><id>9671356799191989926</id><author>Elza Dunkels</author><url>http://www.kulturer.net/2019/04/01/sista-inlagget/</url><title>Sista inlägget</title><text>Från och med idag kan ni bara nå mig via Swish (skicka 1 kr till 0702735323 och skriv ert meddelande i ärenderaden, jag ser texten i min personsökare). Jag stänger ner alla sociala medier och skrotar min ”smart”phone. Jag kommer att sakna er alla men jag har insett att 10.000 hjärnforskare inte kan ha fel. Sköt om er! Undvik strålning och fördumning! PS jag kanske inte kan hålla mig från att ta selfies, isf gör jag många kopior och postar till er.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Sociala medier</tag><tag>Hjärnforskning</tag></tags><images /><indexedAt>2019-04-02T08:28:22Z</indexedAt><publishedAt>2019-04-01T06:18:02Z</publishedAt><reindexedAt>2019-04-02T08:28:22Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14441692909608389147</blogId><blogName>Nätkulturer</blogName><blogUrl>http://www.kulturer.net</blogUrl><blogRank>4</blogRank><authority>99</authority></post><post><id>5920658992295943271</id><author>NathaliieNordstrom</author><url>https://nouw.com/nathaliienordstrom/antligen-en-bra-natt-35750606</url><title>Äntligen en bra natt</title><text>Godmorgon alla.  Jag fick sova inatt!! Efter en sömnlös natt sittandes på sängkanten och kunde inte ens lägga mig under dagen med Joline så har jag äntligen fått sömn!  Jim masserande vänster sida och sedan fick jag bada riktigt varmt, just där och då hade jag fortfarande riktigt ont, la mig i sängen och hade staplat upp massa kuddar så jag låg på rygg i en sittande position men ni som varit/är gravida i vecka 30 och uppåt vet att det är förjävligt tungt och man mår nästan illa utav att ligga på rygg. Så jag var tvungen att lägga mig på sidan, visst jag kände en molande värk och att det gjorde lite ont men det slog inte luften ur mig som i förrgår. Det gick att leva med. Så jag sov faktiskt och det behövdes! Idag vaknade jag dock upp med huvudvärk men tror det har med sömnen att göra.  Under dagen igår så lagade vi lite mysmiddag eftersom det var vår 3-årsdag och vi hade ingen möjlighet att dra iväg på restaurang då Jim jobbat och vi hade Joline. Vi får ta det någon helg helt enkelt. Annars gjorde vi inte så mycket faktiskt vilket va ganska skönt för både ryggen och själen   Idag börjar han jobba 13 och slutar 21 så kommer bli en lååååååång dag. Så kikar in senare med ett inlägg på lite kläder jag shoppade åt Joline och Jim och sedan handlade jag även lite på H&amp;M online då de körde 20% på alla barnkläder i några timmar.  Ha en fin morgon så hörs vi</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:28:25Z</indexedAt><publishedAt>2019-04-02T08:28:02Z</publishedAt><reindexedAt>2019-04-02T08:28:25Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>10435381143787401957</blogId><blogName>NathaliieNordstrom blog</blogName><blogUrl>https://nouw.com/nathaliienordstrom</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>11091423517443374064</id><author /><url>http://saemi.se/2019/march/bjorn-afzelius-til-min-kara.html</url><title>Björn Afzelius til min kära</title><text>- Läs hela inlägget här</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Musik</tag></tags><images /><indexedAt>2019-04-02T08:28:45Z</indexedAt><publishedAt>2019-03-31T19:58:57Z</publishedAt><reindexedAt>2019-04-02T08:28:45Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>3832782285269708109</blogId><blogName>@Sæmi</blogName><blogUrl>http://saemi.se</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>13733302614983380026</id><author>RK</author><url>http://kotikirkko.blogspot.com/2019/04/huhtikuun-tilaisuudet.html</url><title>Huhtikuun tilaisuudet</title><text>Su 7.4. klo 11 Puhe: Samuel Yrjölä, juonto: Ari Kuittinen, musiikki: Kyösti Lindeman  Su 14.4. klo 11Puhe: Risto Kauppinen, juonto: Harri Pottonen, musiikki: Via Mooria  Pe 19.4. klo 11 Pitkäperjantain ehtoolliskokous, Puhe: Mauno Järvinen, juonto: Anneli Viljanen-Järvinen. Musiikki: Sorella. Kahvit. Su 21.4. klo 11 Puhe: Ari Kuittinen, juonto: Mauno Järvinen. Musiikki: Anneli Viljanen.   Su 28.4. klo 11 Srk yhdessä/ Kyösti Lindeman, juonto: Maritta Lilja, musiikki: Kyösti Lindeman. Hakunila Dayn palaveri heti kokouksen jälkeen.  Kotikirkon uusi, voimassa oleva tilinumero on FI56 2065 3800 0309 28   -   Viite 13550  Muuta toimintaa: Tiistaina 2.4. klo 18 Naistenilta. Kahvit. Keskiviikkoisin:  Aamurukous klo 8.00   Mahdollisesti evankeliointia torilla – kysy Irma Pihl 050-3382247  Torstaisin: Rukouksen ja yhdessäolon ilta klo 18   Vetäjä:   4.4. Maritta Lilja 11.4. Irma Pihl 18.4. Kyösti Lindeman    25.4. Mauno Järvinen   (25.4. Vantaa rukoilee, Liesikappeli klo 19)   Tervetuloa tilaisuuksiin!</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:28:45Z</indexedAt><publishedAt>2019-04-01T10:16:00Z</publishedAt><reindexedAt>2019-04-02T08:28:45Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>12843177303313220481</blogId><blogName>HAKUNILAN KOTIKIRKKO</blogName><blogUrl>http://kotikirkko.blogspot.com</blogUrl><blogRank>1</blogRank><authority>3</authority></post><post><id>1899809483908523938</id><author>paamcakees</author><url>https://nouw.com/paamcakees/dag-9-en-dalig-vana-jag-onskar-att-jag-i-35750607</url><title>Dag 9: En dålig vana jag önskar att jag inte hade.</title><text>Eftersom jag slutade röka för lite över ett år sedan så har jag ingen dålig vana jag vill bryta längre men jag önskar att jag inte hade så lätt för att stressad.  Jag är hur lugn som helst utåt men inuti kan jag bli så sjukt stressad ibland &amp; tyvärr är det nästan alltid Hampus som råkar ut för sviterna av stressen, exempelvis svordomar eller höjd röst. Så det är något jag vill kunna jobba bort, iallafall aggressionerna som kommer efter stressen.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Om oss</tag></tags><images /><indexedAt>2019-04-02T08:28:55Z</indexedAt><publishedAt>2019-04-02T08:28:36Z</publishedAt><reindexedAt>2019-04-02T08:28:55Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>11194834692968573349</blogId><blogName>paamcakees blogg</blogName><blogUrl>https://nouw.com/paamcakees</blogUrl><blogRank>1</blogRank><authority>1</authority></post><post><id>2469878898720716580</id><author /><url>http://www.devote.se/klarabellis/jmys-foedelsedag-28243844?utm_source=rss&amp;utm_medium=rss</url><title>Jmys födelsedag</title><text>Godmorgon. Ligger i sängen och har ställt klockan trots att jag har sovmorgon. Ska nämligen upp till Noelle, bli sminkad och fotad för ett fotoprojekt som hon har kommit på. Vad gör man inte för sina kära vänner? Igår var det Jmys födelsedag. Den mest opassande dagen -en måndag. Jag var på jobbet från halv...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/jmys-foedelsedag-28243844?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/jmys-foedelsedag-28243844?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2014-02-25T09:02:40Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>2778515663097099047</id><author /><url>http://www.devote.se/klarabellis/fredagskvaell-28271100?utm_source=rss&amp;utm_medium=rss</url><title>Fredagskväll</title><text>Fredagskväll, eller snarare natt. Här sitter jag, själv med Nala. Snapchatar som en galning med Alicia och ska se intervjuen med Jimmie Åkesson. Haha, vilket fredagsnöje jag ägnar mig åt när alla andra är på Avicii.Idag har jag varit hos Gabi och sedan spenderat större kvällen hos mamma och pappa. Där fick jag en lika...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/fredagskvaell-28271100?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/fredagskvaell-28271100?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2014-02-28T23:08:44Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>5919349811473942788</id><author /><url>http://www.devote.se/klarabellis/work-and-stay-up-late-27394185?utm_source=rss&amp;utm_medium=rss</url><title>WORK AND STAY UP LATE</title><text>Bestämde mig för att trotsa appen och blogga fast den är så krånglig. Tänker inte berätta vad som hänt sen sist, för det skulle bli alldeles för mycket. Imorse vaknade jag samtidigt som Jmy kom hem, sittandes i soffan, med tvn på och insvept i en filt väntade jag medan han gjorde han en hemlig...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/work-and-stay-up-late-27394185?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/work-and-stay-up-late-27394185?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-10-29T21:22:50Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>5825424140318362139</id><author /><url>http://www.devote.se/klarabellis/problem-med-ios7-27169654?utm_source=rss&amp;utm_medium=rss</url><title>PROBLEM MED IOS7</title><text>Vill börja med att säga; vad gulliga ni är som läser trots att uppdateringen är så fruktansvärt dålig. Jag har problem med mitt ios7, apparna verkar inte ha hängt med i uppdateringen. Devoteappen drabbades tyvärr också och jag kan inte se bilderna jag väljer till inläggen. Hoppas att den går att uppdatera snart. Här får...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/problem-med-ios7-27169654?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/problem-med-ios7-27169654?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-10-01T21:46:01Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>12565874543104632494</id><author /><url>http://www.devote.se/klarabellis/boys-are-so-dramatic-26847953?utm_source=rss&amp;utm_medium=rss</url><title>BOYS ARE SO DRAMATIC</title><text>Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/boys-are-so-dramatic-26847953?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/boys-are-so-dramatic-26847953?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-08-27T13:01:10Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>17890878596099867323</id><author /><url>http://www.devote.se/klarabellis/always-kiss-me-goodnight-26813238?utm_source=rss&amp;utm_medium=rss</url><title>ALWAYS KISS ME GOODNIGHT</title><text>Ligger i sängen på fuktiga sängkläder, som dock får mig att le. Inatt när jag fick min vanliga, kan-inte-ligga-still-måste-röra-mig-sprattla-sparkas-myror-i-benen slutade det med ett vattenkrig mellan mig och Jmy - i sängen. Eftersom ingen av oss orkade byta sängkläder fick vi fnissandes somna om i dom blöta. Imorgon är jag ÄNTLIGEN ledig en hel dag och...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/always-kiss-me-goodnight-26813238?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/always-kiss-me-goodnight-26813238?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-08-22T21:19:02Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>17007785313376625723</id><author /><url>http://www.devote.se/klarabellis/derby-26706727?utm_source=rss&amp;utm_medium=rss</url><title>DERBY</title><text>Har nyss varit och kollat in derbyt mellan Ölme och Villastan. Seger för Villastan, vilka jag såklart hejade på. Fint väder, glass och en spelande favoritpojke, awsome. Efter matchen drog jag raka vägen hem till mamma&amp;pappa och väntar nu på lördagslunch, sedan hem till lägenheten igen för att göra mig iordning inför ikväll. Känner faktiskt...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/derby-26706727?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/derby-26706727?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-08-10T14:22:14Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>7211241134367830531</id><author /><url>http://www.devote.se/klarabellis/bakishaeng-26717337?utm_source=rss&amp;utm_medium=rss</url><title>BAKISHÄNG</title><text>Jag kan nog vara världens mest bortskämda prinsessa som blir bjuden på kebabpizza till lunch och fick detta till middag. Emellan det har jag fått ligga på Jmys bröst i soffan och kollat på serier. Söndag är mysigaste dagen.. Lätt.

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/bakishaeng-26717337?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/bakishaeng-26717337?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-08-11T20:15:51Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>10690774145346789954</id><author /><url>http://www.devote.se/klarabellis/update-28247457?utm_source=rss&amp;utm_medium=rss</url><title>Update</title><text>Hur många av er har ett jobb dit ni kan gå såhär?

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/update-28247457?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/update-28247457?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2014-02-25T18:53:02Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>6185591013108143306</id><author /><url>http://www.devote.se/klarabellis/wensday-27402070?utm_source=rss&amp;utm_medium=rss</url><title>WENSDAY</title><text>Jobbade som sagt natt inatt och slutade klockan halv 10. Vinkade av en arbetskamrat som skulle flytta till Norge, jag kunde inte vara mer avis. Sedan kom Jmy och hämtade mig på cykel. Eftersom jag vet hur sjukt morgontrött han är, plus att han var helt ledig idag är jag så jäkla glad att han...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/wensday-27402070?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/wensday-27402070?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-10-30T21:14:52Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>14473858070414839638</id><author /><url>http://www.devote.se/klarabellis/lugnare-aen-naagonsin-26896292?utm_source=rss&amp;utm_medium=rss</url><title>LUGNARE ÄN NÅGONSIN</title><text>Helgen har varit lugnare än någonsin. Jag har varit sjuk, jättesjuk. Legat i feber och hostat. Folk har inte känt igen mig. Istället för att vara ute och ränna mellan jobbpassen så har jag fått hålla mig i lägenheten om dagarna. Jag har bakat och städat, något jag aldrig orkar med annars. I lördags hade...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/lugnare-aen-naagonsin-26896292?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/lugnare-aen-naagonsin-26896292?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-09-02T07:06:10Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>17157422487589512032</id><author /><url>http://www.devote.se/klarabellis/people-be-like-varfoer-traenar-du-inte-28235292?utm_source=rss&amp;utm_medium=rss</url><title>People be like "varför tränar du inte?"</title><text>Bitch please..

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/people-be-like-varfoer-traenar-du-inte-28235292?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/people-be-like-varfoer-traenar-du-inte-28235292?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2014-02-23T21:58:26Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>3441231716088931962</id><author /><url>http://www.devote.se/klarabellis/beauty-is-golden-26858199?utm_source=rss&amp;utm_medium=rss</url><title>BEAUTY IS GOLDEN</title><text>Äntligen hemma. När jag slutade klockan halv 5 och kom ut från jobbet så stod Jmy där. Han hade cyklat upp för att hämta mig så jag skulle slippa gå hem. Minns faktiskt inte när jag blev så glad senast. Hungrig och på sämre humör än någonsin. Jag är helt säker på att vi är...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/beauty-is-golden-26858199?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/beauty-is-golden-26858199?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-08-28T16:14:46Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>8149609479588446421</id><author /><url>http://www.devote.se/klarabellis/a-klarisday-26844530?utm_source=rss&amp;utm_medium=rss</url><title>A KLARISDAY</title><text>Vill börja med att säga HEJ ALLA! Shit vad besökarna sköt i höjden igår när jag publicerade bloggen på Twitter och länkade den till alla mina bästa tjejkompisar. Idag har dock varit en väldigt vanlig dag. Jag vaknade kl 06.30 av det bästa som kunde hända - mamma var ledig och valde att gå upp...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/a-klarisday-26844530?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/a-klarisday-26844530?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-08-26T19:46:13Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>3833924938086892901</id><author /><url>http://www.devote.se/klarabellis/pretty-woman-26837274?utm_source=rss&amp;utm_medium=rss</url><title>PRETTY WOMAN</title><text>Nu går jag och lägger mig efter att ha kollat på Pretty Women, ätit vindruvor och popcorn. Känns som en klassiker man borde sett? Kollar nästan aldrig på film, har alldeles för kort tålamod. , Men ändå älskar jag att ha filmkvällar. det är egentligen inte filmen som är grejen, utan att se den med...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/pretty-woman-26837274?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/pretty-woman-26837274?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-08-25T22:07:04Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>7366441344392147793</id><author /><url>http://www.devote.se/klarabellis/foer-jag-vet-att-den-haer-natten-skulle-doeda-mig-om-jag-inte-fick-va-med-dig-26713640?utm_source=rss&amp;utm_medium=rss</url><title>FÖR JAG VET ATT DEN HÄR NATTEN SKULLE DÖDA MIG OM JAG INTE FICK VA MED DIG</title><text>Hade en awsome kväll hos Cissi igår, både med folk jag jämt umgås med och med folk jag träffar och festar med allt för sällan. Det var dock sista gången på länge jag träffar flera av dom, känns så sjukt tråkigt. Skulle vilja göra om samma kväll om och om och om igen om jag...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/foer-jag-vet-att-den-haer-natten-skulle-doeda-mig-om-jag-inte-fick-va-med-dig-26713640?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/foer-jag-vet-att-den-haer-natten-skulle-doeda-mig-om-jag-inte-fick-va-med-dig-26713640?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-08-11T13:30:09Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>1461750138761127401</id><author /><url>http://www.devote.se/klarabellis/mitt-i-natten-26762468?utm_source=rss&amp;utm_medium=rss</url><title>MITT I NATTEN</title><text>Igår kväll fick jag erbjudandet om att åka till Degerfors. Det var längesedan vi cyklade till busstationen mitt i natten. För ett år sedan var det vardag. Cykla fram och tillbaka, mötas, lämna av varandra. Antingen innan solen gått upp eller sent på natten. Hångla på stationen, skjutsa varandra på cykel och köpa hamburgare på...

                        
                            Läs hela inlägget</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>http://www.devote.se/klarabellis/mitt-i-natten-26762468?utm_source=rss&amp;utm_medium=rss</link><link>http://www.devote.se/klarabellis/mitt-i-natten-26762468?utm_source=rss&amp;utm_medium=rss</link></links><tags /><images /><indexedAt>2019-04-02T08:29:10Z</indexedAt><publishedAt>2013-08-16T22:41:05Z</publishedAt><reindexedAt>2019-04-02T08:29:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14103934426187490611</blogId><blogName>Klarabellis</blogName><blogUrl>http://www.devote.se/klarabellis?utm_source=rss&amp;utm_medium=rss</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>8730630328469187424</id><author>olivianataliaa</author><url>https://nouw.com/olivianataliaa/tisdag-35750580</url><title>Tisdag</title><text>Det var en väldigt bra o mysig helg måste jag säga:) Är strax i uppsala o ska på möte igen, nervös inför det här mötet för man vet inte äns vad som kommer att hända.  Lite läskigt men men, får ta tag i det bara. Längtar tills helgen igen då jag ska jag träffa jannica o en till jättefin person ❤  Skriver lite senare. Vi hörs kram.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>allmänt</tag><tag>vardag</tag><tag>foto</tag><tag>tankar</tag></tags><images /><indexedAt>2019-04-02T08:29:11Z</indexedAt><publishedAt>2019-04-02T08:28:51Z</publishedAt><reindexedAt>2019-04-02T08:29:11Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>12826748086953424748</blogId><blogName>olivianataliaa blogg</blogName><blogUrl>https://nouw.com/olivianataliaa</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>16251737625747850649</id><author>Elina Venttola</author><url>https://www.rantapallo.fi/matkailu/viikon-14-halvimmat-kaupunkilomat/</url><title>Viikonlopun halvimmat lomat Euroopassa alle 200 eurolla – katso kooste kaupunkilomista</title><text>Kaupunkiloma Euroopassa on hyvä idea erityisesti tällä viikolla, kun halvimmat viikonlopun lomat saa alle 200 eurolla.</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links /><tags><tag>Uutiset</tag><tag>tarjoukset</tag></tags><images /><indexedAt>2019-04-02T08:29:19Z</indexedAt><publishedAt>2019-04-02T06:26:02Z</publishedAt><reindexedAt>2019-04-02T08:29:19Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>4300879213109293026</blogId><blogName>Rantapallo.fi – Suomen suosituin matkailumedia</blogName><blogUrl>https://www.rantapallo.fi</blogUrl><blogRank>1</blogRank><authority>2</authority></post><post><id>8264062264166263666</id><author>Elina Venttola</author><url>https://www.rantapallo.fi/matkavinkit/kymmenen-vinkkia-yksin-matkustavalle-nain-selviat-ensimmaisesta-matkasta-yksin/</url><title>Kymmenen vinkkiä yksin matkustavalle – näin selviät ensimmäisestä matkasta yksin</title><text>Suunnitteletko ensimmäistä matkaa yksin? Muista nämä kymmenen asiaa!</text><languageCode>fi</languageCode><locationCode>fi</locationCode><coordinates /><links /><tags><tag>Matkavinkit</tag><tag>soolomatkailu</tag><tag>yksin matkustaminen</tag></tags><images /><indexedAt>2019-04-02T08:29:19Z</indexedAt><publishedAt>2019-04-02T08:23:54Z</publishedAt><reindexedAt>2019-04-02T08:29:19Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>4300879213109293026</blogId><blogName>Rantapallo.fi – Suomen suosituin matkailumedia</blogName><blogUrl>https://www.rantapallo.fi</blogUrl><blogRank>1</blogRank><authority>2</authority></post><post><id>4866599473005322121</id><author /><url>http://ellinorehanelll.blogg.se/2019/april/lordag-sondag-mandag.html</url><title>LÖRDAG SÖNDAG MÅNDAG</title><text>Oj jag har inte fått tillfälle att blogga nu på ett par dagar så vi tar igen det i ett enda inlägg. 
Vi hoppar tillbaka till lördag.
    
         
    
    
    
         
    
    
    
         
    
    
        Vi startade dagen med hotellfrulle. Alltså finns det något bättre?! Jag plockar dock alltid på mig för mycket så jag får skämmas när jag lämnar kvar mat..
    
    
         
    
    Därefter fixade vi oss och begav oss ut på Drottninggatan som är gatan nedanför Haymarket. Smidigt! 
    Shoppade inte så mycket utan blev en urgullig tshirt till Ingrid från Arket och sedan en kudde till hennes rum.
    
         
    
    
        
        
             
        
    
    Till mig själv hittade jag de här roliga torrshampoona. Jag har aldrig sett den innan? Den som luktar godis är typ den godaste eveeeeer. Hittade dem på H&amp;M.
    
         
    
    
        
        
             
        
    
    Vi hade bokat brunch på Kasai med Britta och Elin. Jag har tyvärr inga bilder därifrån då jag var upptagen med att antingen upphålla/bära Ingrid eller att äta. Supergod brunch! Speciellt för dem som älskar sushi. Själv är jag inte alls så mycket för
        det men tyckte ändå det var gott, hör och häpna!
    Ingrid skötte sig ändå bra. Hon är inte så van vid att sitta i barnstol längre stunder då hon lätt blir uttråkad så det är vår största utmaning där. Öva, öva och öva är det vi får göra!
    
         
    
    
    
         
    
    
        
        
             
        
    
    Vi valde att inte utmana ödet (ge oss ut igen) så vi bokade bord på hotellrestaurangen Pauls. Så smidigt att bara köra ner Ingrid i pyjamas och vagnen utan att behöva böka med ytterkläder. Det tog en liten stund för henne att somna men lagom till
        varmrätten hade hon somnat för natten och vi fick även ro till att dela på en fondant. Så mysigt!
    
         
    
    
        
        
             
        
        Söndag och dags att åka tåg hem igen! Förra tågresan var lite blandad. Först gick det jättebra men sen blev Ingrid uttråkad och ledsen. 
        Denna resan somnade hon först en halvtimme för att sedan vara ganska lugn. Men det är svårt att roa en liten i så många timmar. Hon vill ju bara få krypa runt! Så mycket spring i benen på den lilla donnan.
        
             
        
        
        
             
        
        
            
            
                 
            
        
        Igår hade vi en lugn dag. Jag hade tid hos tandläkaren och Ingrid fick hänga på Carpenter så länge. Sen tog vi en eftermiddagspromenad och på kvällen fick jag äntligen till en löprunda. 1 gång i veckan har jag börjat springa nu igen iallafall!
        Bra dagar!</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>ALLMÄNT</tag></tags><images /><indexedAt>2019-04-02T08:29:21Z</indexedAt><publishedAt>2019-04-02T08:25:43Z</publishedAt><reindexedAt>2019-04-02T08:29:21Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>18408313806583944588</blogId><blogName>ellinorerosell.blogg.se</blogName><blogUrl>http://ellinorehanelll.blogg.se</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>4704409142612886267</id><author /><url>http://ellinorehanelll.blogg.se/2019/march/haymarket-by-scandic.html</url><title>HAYMARKET BY SCANDIC</title><text>Igår eftermiddag checkade vi in på Haymarket. Har hört så mycket gott om detta hotell och kan bara instämma. Det är så mysigt här!

     

Linus skulle iväg på en konsert som han fått i julklapp av mig (Kite) så vi beställde upp roomservice och bara gottade oss på rummet.

     


    
    
         
    
    Jag och Ingrid stannade kvar på rummet hela kvällen, käkade godis och tittade på film. MYSIGTASTE FREDAGEN EVER!
    
         
    
    
        
        
             
        
    
    Nu ska vi strax ned och äta frukost och sedan ut i våriga Stockholm.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>ALLMÄNT</tag></tags><images /><indexedAt>2019-04-02T08:29:21Z</indexedAt><publishedAt>2019-03-30T05:55:23Z</publishedAt><reindexedAt>2019-04-02T08:29:21Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>18408313806583944588</blogId><blogName>ellinorerosell.blogg.se</blogName><blogUrl>http://ellinorehanelll.blogg.se</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>13379844405964394292</id><author>FilippaLinton</author><url>https://nouw.com/filippalinton/summer-daydreams-35745364</url><title>Summer daydreams...</title><text /><languageCode>da</languageCode><locationCode>dk</locationCode><coordinates /><links /><tags><tag>Inspiration</tag><tag>Pics</tag></tags><images /><indexedAt>2019-04-02T08:29:22Z</indexedAt><publishedAt>2019-04-02T08:29:00Z</publishedAt><reindexedAt>2019-04-02T08:29:22Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>14685880402848052534</blogId><blogName>Filippa Linton</blogName><blogUrl>https://nouw.com/filippalinton</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>10990014529147369344</id><author>tant gredelin</author><url>https://tantgredelin.wordpress.com/2019/04/02/tisdag-2-april-2019/</url><title>Tisdag 2 april 2019</title><text>Mig lurar man inte så lätt! Nix, jag klarade mig fint från aprilskämten i sociala medier! Tji fick de som trodde man kan lura mig! Vissa saker som dök upp i olika sammanhang var ju så uppenbara fejk, så det var inga problem att avfärda dem som aprilskämt! 
Mr T fick åka själv och få däcken på bilen bytta igår, från vinter- till sommardäck. Tumlaren var inte klar efter tvätten och jag vågar inte lämna den utan tillsyn här hemma. Man vet ju aldrig,  det kan ju hända något med den?! 
Idag ska även jag ut i solskenet en stund … dags för ett besök i affären igen … Men så värst mycket ute blir det ju inte … 
Finns väl inte så mycket mer att orda om … ska nu äta min frukost … och hoppas att vi alla får en bra dag!</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links><link>https://tantgredelin.files.wordpress.com/2012/09/april.jpg</link><link>https://tantgredelin.files.wordpress.com/2014/05/tvc3a4tt-o-tumlare.jpg</link><link>https://tantgredelin.files.wordpress.com/2015/04/lc3a5ngben-tisdag.jpg</link></links><tags><tag>Katalogiserade</tag><tag>affär</tag><tag>aprilskämt</tag><tag>fejk</tag><tag>sommardäck</tag></tags><images /><indexedAt>2019-04-02T08:29:22Z</indexedAt><publishedAt>2019-04-02T08:28:55Z</publishedAt><reindexedAt>2019-04-02T08:29:22Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>15811806097718988260</blogId><blogName>Tantgredelin's Blog</blogName><blogUrl>https://tantgredelin.wordpress.com</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>9075798635351231976</id><author>redaktion</author><url>http://www.travelreport.se/2019/04/02/kryssningsfartyg-en-god-affar-for-stockholm/</url><title>Kryssningsfartyg en god affär för Stockholm</title><text>Turister som kommer till Stockholm med kryssningsfartyg genererar stora intäkter till regionen, skriver TT. – De som stannar en dag spenderar i genomsnitt 760 kronor per person, säger Ingrid Hansson, presschef på Stockholms hamnar, till nyhetsbyrån. Förra året spenderade kryssningsturisterna över 600 miljoner kronor i 
Inlägget Kryssningsfartyg en god affär för Stockholm dök först upp på Travel Report.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Nyheter</tag><tag>Rederi</tag><tag>kryssningsfartyg</tag><tag>Stockholm</tag><tag>Transport</tag></tags><images /><indexedAt>2019-04-02T08:29:24Z</indexedAt><publishedAt>2019-04-02T05:02:22Z</publishedAt><reindexedAt>2019-04-02T08:29:24Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>10081466816749828658</blogId><blogName>Travel Report</blogName><blogUrl>http://www.travelreport.se</blogUrl><blogRank>3</blogRank><authority>50</authority></post><post><id>4232247355316954135</id><author>redaktion</author><url>http://www.travelreport.se/2019/04/02/peter-gronberg-blir-ny-vd-pa-goteborg-co/</url><title>Peter Grönberg blir ny vd på Göteborg &amp; Co</title><text>Peter Grönberg kommer närmast från en tjänst på Volvo Group där han bland annat ansvarat för företagskultur, organisationsutveckling, ledarskaps- och mångfaldsfrågor och arbetsgivarvarumärke. Han har arbetat många år inom Volvokoncernen och har haft flera olika befattningar på ledande nivå. År 2014 blev han utsedd till 
Inlägget Peter Grönberg blir ny vd på Göteborg &amp; Co dök först upp på Travel Report.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Jobb &amp; Bransch</tag><tag>Nyheter</tag><tag>Göteborg</tag><tag>Göteborg &amp; Co</tag><tag>Peter Grönberg</tag><tag>tourism</tag></tags><images /><indexedAt>2019-04-02T08:29:24Z</indexedAt><publishedAt>2019-04-02T05:01:24Z</publishedAt><reindexedAt>2019-04-02T08:29:24Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>10081466816749828658</blogId><blogName>Travel Report</blogName><blogUrl>http://www.travelreport.se</blogUrl><blogRank>3</blogRank><authority>50</authority></post><post><id>6684607766295412523</id><author>redaktion</author><url>http://www.travelreport.se/2019/04/02/manuel-lindberg-blir-ny-vd-for-tourism-group-international-i-sverige/</url><title>Manuel Lindberg blir ny VD för Tourism Group International i Sverige</title><text>Holländska Tourism Group International som under 2018 köpte upp det svenska bolaget Touristry med varumärken som Stockholm Info, Red Sightseeing och Red Buses har anställt Manuel Lindberg, 45 som ny VD för den svenska verksamheten from 1 april 2019. Tidigare VD Micha Gottfarb lämnar samtidigt 
Inlägget Manuel Lindberg blir ny VD för Tourism Group International i Sverige dök först upp på Travel Report.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Jobb &amp; Bransch</tag><tag>Ny på jobbet</tag><tag>Nyheter</tag><tag>HNA Tourism Group</tag><tag>manuel lindberg</tag><tag>Turism</tag></tags><images /><indexedAt>2019-04-02T08:29:24Z</indexedAt><publishedAt>2019-04-02T04:59:09Z</publishedAt><reindexedAt>2019-04-02T08:29:24Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>10081466816749828658</blogId><blogName>Travel Report</blogName><blogUrl>http://www.travelreport.se</blogUrl><blogRank>3</blogRank><authority>50</authority></post><post><id>8667529498305324568</id><author>redaktion</author><url>http://www.travelreport.se/2019/04/02/amerikanska-flygjattar-upplever-systemstorningar-pa-mandagen/</url><title>Amerikanska flygjättar upplever systemstörningar på måndagen</title><text>De amerikanska flygbolagen Southwest Airlines, Delta Air Lines och United Airlines upplevde alla systemstörningar på måndagen. Det rapporterar flera internationella medier. Enligt en tweet från Southwest Airlines påverkar störningarna alla flygbolag som använder sig av ett visst system.  ”Vi upplever för närvarande en systemstörning och arbetar 
Inlägget Amerikanska flygjättar upplever systemstörningar på måndagen dök först upp på Travel Report.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Flygbolag</tag><tag>Nyheter</tag><tag>Delta</tag><tag>Flyg</tag><tag>Transport</tag></tags><images /><indexedAt>2019-04-02T08:29:24Z</indexedAt><publishedAt>2019-04-02T04:58:23Z</publishedAt><reindexedAt>2019-04-02T08:29:24Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>10081466816749828658</blogId><blogName>Travel Report</blogName><blogUrl>http://www.travelreport.se</blogUrl><blogRank>3</blogRank><authority>50</authority></post><post><id>12631415001932834682</id><author>automationmotorsanddrives</author><url>https://automationmotorsanddrives.wordpress.com/2019/04/02/177307-old-stock-skf-6313-2znrjem-ball-bearing-65mm-id-x-140mm-od-x-33mm-wide-5/</url><title>177307 Old-Stock, SKF 6313-2ZNRJEM Ball Bearing 65mm ID x 140mm OD x 33mm Wide</title><text>177307 Old-Stock, SKF 6313-2ZNRJEM Ball Bearing 65mm ID x 140mm OD x 33mm Wide –
Buy – 177307 Old-Stock, SKF 6313-2ZNRJEM Ball Bearing 65mm ID x 140mm OD x 33mm Wide</text><languageCode>sv</languageCode><locationCode /><coordinates /><links><link>http://aega.erdemoon.info/US/categories/ngpnwps/?id=http://rover.ebay.com/rover/1/711-53200-19255-0/1?ff3=2&amp;toolid=10039&amp;campid=5338319876&amp;item=183758082805&amp;vectorid=229466&amp;lgeo=1</link></links><tags><tag>Uncategorized</tag><tag>177307 Old-Stock</tag><tag>SKF 6313-2ZNRJEM Ball Bearing 65mm ID x 140mm OD x 33mm Wide</tag></tags><images /><indexedAt>2019-04-02T08:30:10Z</indexedAt><publishedAt>2019-04-02T08:05:35Z</publishedAt><reindexedAt>2019-04-02T08:30:10Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>7562660207055356955</blogId><blogName>Automation, Motors and Drives</blogName><blogUrl>https://automationmotorsanddrives.wordpress.com</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>3691036376134363702</id><author>kajsagranqvist</author><url>https://nouw.com/kajsagranqvist/diy-kattrad-och-netflix-35750368</url><title>DIY-katträd och Netflix!</title><text>Igår började försöket med att bygga mitt DIY-katträd. Har tänkt att köpa ett katträd till min balkong (som fortfarande inte är iordninggjord än), dock kan ett snyggt katträd kosta flera tusen. Sprang på en bild där de använt sig av IKEAs små bord för att bygga ett eget katträd.  Projektet började med att jag var med pappa till IKEA förra veckan och köpte mig 4 st små bord. Igår starta jag processen med att börja skruva ihop borden. När det senare kom till att börja stapla dem och skruva ihop med små vinklar så startade problemen. De vill inte fästa med de skruvar jag köpt, vill alltså inte fästa tillräckligt hårt så den blir stabil (vilket kan vara ett problem när man har en lite större katt, inte tjock men stor). Har satt projektet på paus tills jag orkar ta tag i problemet igen. Som plåster på såren för mitt misslyckande så köpte jag mig en kyckling-gyros och tittade på Netflix!  Jag har lovat mig att inte ge upp, ska konsultera min pappa och höra om han har någon plan. Återkommer med utvecklingen.   Have a good day!</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags /><images /><indexedAt>2019-04-02T08:30:17Z</indexedAt><publishedAt>2019-04-02T08:30:00Z</publishedAt><reindexedAt>2019-04-02T08:30:17Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>10522847845440238743</blogId><blogName>kajsagranqvist blogg</blogName><blogUrl>https://nouw.com/kajsagranqvist</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>17816887433594233394</id><author>tereseh</author><url>https://nouw.com/tereseh/chokladtarta-med-marang-35748645</url><title>Chokladtårta med maräng</title><text>Chokladkaka: 150 gram smält smör 2 dl strösocker 2,5 dl vetemjöl 3 ägg 0,75 dl kakao 2 tsk bakpulver 2 tsk vaniljsocker 1,25 dl mjölk Gör så här: Sätt ugnen på 175 grader och smöra/klä en springform.  Vispa ägg och socker pösigt. Tillsätt de övriga ingredienserna och rör sakta till en jämn smet.  Häll smeten i formen. Grädda i mitten av ugnen i ungefär 30 min.  Låt kakan svalna helt innan du delar den i två delar med hjälpa av en brödkniv.  Marängbotten: 2 äggvitor 1,5 dl strösocker 1,5 dl Rice Krispies Gör så här: Sätt ugnen på 125 grader.  Vispa äggvitorna till ett hårt skum. Vispa ner sockret lite i taget. Blanda försiktigt ner Rice Krispies.  Bred ut smeten i en klädd springform.  Grädda i mitten av ugnen i ungefär 60 min.  Garnering: 1 påse chokladmousse + 4 dl mjölk 1-2 dl vispgrädde 0,5 chokladplatta 1 banan 2-3 st Kinder ägg Gör så här: Vispa chokladmoussen med 4 dl mjölk. Vispa grädden i en bunke och sätt i en spritspåse.  Hacka två rader choklad och riv två rader choklad.  Skiva bananen. Bre ut chokladmousse på chokladbotten och strö på hackad choklad.  Lägg på marängbotten och bre på resten av chokladmoussen. Rada ut den skivade bananen.  Lägg på locket(chokladkakan). Spritsa grädden och toppa med riven choklad och Kinder ägg.</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Bakning/matlagning</tag><tag>Recept</tag></tags><images /><indexedAt>2019-04-02T08:30:17Z</indexedAt><publishedAt>2019-04-02T08:30:00Z</publishedAt><reindexedAt>2019-04-02T08:30:17Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>792415653167363641</blogId><blogName>Terese Hermansson</blogName><blogUrl>https://nouw.com/tereseh</blogUrl><blogRank>1</blogRank><authority>0</authority></post><post><id>10995100403807972935</id><author>Sannafredhage</author><url>https://nouw.com/sannafredhage/utan-anstrangning-35750611</url><title>Utan ansträngning</title><text>Jag ligger just nu i sängen och kollar ut mot den blå himlen. Från fönstret syns alla lägenheter mitt emot och deras fönster är randiga av persiennerna. Livets enkla komplicitet. Jag bara känner. Det brukar jag göra. Känner helheten och tar in intryck från gamla minnen. Pusslar ihop ett med annat. Dagarna rullar på. Jag är lyckligare nu än jag någonsin varit. Det är nästan överväldigande, känslan av trivialitet. Skrämmande på ett sätt samtidigt som det känns som att allt är som det ska. Ska det vara såhär? Är det nu jag kan luta mig tillbaka? Det känns som att allt har fallit på plats men samtidigt undrar jag om det verkligen kan göra det. Vägen har varit krokig men den är rak nu. Kommer den vara rak för alltid nu? Är det dit man vill nå? Är destinationen att ta sig ur krokarna för att hitta en rak väg framåt? Är destinationen hamsterhjulet? Mår människor bra av förändring? Eller ska vi finna lycka i det enkla? Ta sig an livet, eller låta livet ta sig an dig? Jag vet inte. Jag vet heller inte om jag bryr mig. Jag lever lite i mina egna känslor i min bubbla. Kanske i förnekelse. Men allt känns bra! Jag vill inte vara någon annan. Jag vill vara där jag är. Får det vara så? Kan jag landa nu? Stå stadigt på fötterna istället för på tårna? Vad vill jag säga? Ingenting kanske.  Observerar.. filosoferar.. Livet rullar på utan ansträngning. Så får det vara nu.  Livets meningSanna</text><languageCode>sv</languageCode><locationCode>se</locationCode><coordinates /><links /><tags><tag>Tankar</tag></tags><images /><indexedAt>2019-04-02T08:30:26Z</indexedAt><publishedAt>2019-04-02T08:29:44Z</publishedAt><reindexedAt>2019-04-02T08:30:26Z</reindexedAt><inlinksCount>0</inlinksCount><blogId>11685458585732688902</blogId><blogName>Sanna Fredhage</blogName><blogUrl>https://nouw.com/sannafredhage</blogUrl><blogRank>1</blogRank><authority>0</authority></post></twinglydata>
    http_version: 
  recorded_at: Tue, 02 Apr 2019 09:21:56 GMT
recorded_with: VCR 4.0.0
